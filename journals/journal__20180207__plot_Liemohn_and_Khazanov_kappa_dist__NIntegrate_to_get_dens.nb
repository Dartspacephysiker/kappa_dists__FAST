(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    411269,       7778]
NotebookOptionsPosition[    404200,       7653]
NotebookOutlinePosition[    404540,       7668]
CellTagsIndexPosition[    404497,       7665]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"dPhi", "=", "941"}], ";", 
  RowBox[{"Tm", "=", "110"}], ";"}]], "Input",
 CellChangeTimes->{{3.725903540016737*^9, 3.725903563142338*^9}, {
   3.725903608132614*^9, 3.725903613829091*^9}, {3.725907305186077*^9, 
   3.725907310171151*^9}, {3.7259090777546053`*^9, 3.725909105179192*^9}, 
   3.727006707648427*^9},ExpressionUUID->"49cbe70a-4516-402d-896d-\
ef6ce52ce651"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vbth", "[", 
    RowBox[{"deltaPhi_", ",", "T_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"deltaPhi", "/", "T"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7259596304842663`*^9, 3.7259596587018013`*^9}, {
  3.7259597318165894`*^9, 
  3.725959737072957*^9}},ExpressionUUID->"c7a9c9c6-ff8c-4ed6-ba7d-\
fe0e29bc9316"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normFacMaxwellian", "[", 
   RowBox[{"T_", ",", "kappa_"}], "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["m", 
     RowBox[{"2", " ", "\[Pi]", " ", "T", " "}]], ")"}], 
   RowBox[{"3", "/", "2"}]]}]], "Input",
 CellChangeTimes->{{3.727006421857926*^9, 
  3.727006433161503*^9}},ExpressionUUID->"b66a2800-d344-49be-b0de-\
7e9e86e20b2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normFacKappa", "[", 
   RowBox[{"T_", ",", "kappa_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["m", 
      RowBox[{"2", " ", "\[Pi]", " ", "T", " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "-", " ", 
         FractionBox["3", 
          RowBox[{"2", " ", "kappa"}]]}], ")"}]}]], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.725903233978291*^9, 3.725903234529202*^9}, {
   3.72590329933727*^9, 3.7259033744662123`*^9}, {3.725903425315297*^9, 
   3.72590345391444*^9}, 3.7259035095889387`*^9, {3.7259042736930733`*^9, 
   3.72590438528347*^9}, {3.725904585712357*^9, 3.725904602375341*^9}, {
   3.7259046524478083`*^9, 3.725904655802013*^9}, {3.7259049470602913`*^9, 
   3.725904955299295*^9}, {3.7259054650727663`*^9, 3.725905473267367*^9}, 
   3.72590560841838*^9, {3.725905652122993*^9, 3.725905672842835*^9}, {
   3.725905723547326*^9, 3.725905730566146*^9}, {3.7259089678981647`*^9, 
   3.7259089691700897`*^9}, {3.725908999721383*^9, 3.725909039251156*^9}, {
   3.72595591440261*^9, 3.725955915645768*^9}, 3.7259573426883097`*^9, {
   3.7259573802285233`*^9, 3.725957394680827*^9}, {3.725957491331352*^9, 
   3.725957496237446*^9}, {3.7259579700309763`*^9, 3.725957997193788*^9}, {
   3.725959751082412*^9, 3.725959839978695*^9}, {3.725959871291285*^9, 
   3.725959885923421*^9}, {3.7270061717870007`*^9, 3.727006286266118*^9}, {
   3.7270063913384523`*^9, 3.727006466664749*^9}, {3.7270064969609833`*^9, 
   3.727006601936904*^9}, {3.727006633456595*^9, 3.727006653416595*^9}, {
   3.727007537451445*^9, 3.727007542009945*^9}, {3.7270076211402073`*^9, 
   3.727007622842175*^9}, {3.727007756953475*^9, 3.7270078137288437`*^9}, {
   3.727007919403038*^9, 3.7270079211758537`*^9}, {3.727008016648714*^9, 
   3.7270080433617153`*^9}, {3.7270080792252502`*^9, 
   3.7270081609205723`*^9}, {3.727008253171165*^9, 3.727008294280734*^9}, {
   3.727008498361691*^9, 3.7270085162806892`*^9}, {3.727008583489607*^9, 
   3.727008592040756*^9}, {3.727009648469528*^9, 
   3.727009681202277*^9}},ExpressionUUID->"756c101e-4d24-4f1c-b120-\
e771448d347f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir", "=", 
   "\"\</SPENCEdata/Research/Satellites/FAST/kappa_dists/journals/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "dir", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "Liemohn_and_Khazanov__mapped_Maxwellian_density.wl"}]}], "Input",
 CellChangeTimes->{{3.726480566976571*^9, 3.726480579131708*^9}, {
  3.726480732169458*^9, 
  3.726480761429207*^9}},ExpressionUUID->"07a1f08c-1ba2-478b-ab62-\
2c05df49a319"],

Cell["\<\
Also, here\[CloseCurlyQuote]s the current (not totally working) version of \
the kappa curve thing\
\>", "Text",
 CellChangeTimes->{{3.7270765940358686`*^9, 
  3.727076606579637*^9}},ExpressionUUID->"35b16499-52f1-4f0a-80c9-\
710f98ca3eac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"densFacK", "[", 
   RowBox[{"phiBar_", ",", "\[Kappa]_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["phiBar"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], 
      RowBox[{"5", "/", "2"}]]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"phiBar", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "phiBar"}], "-", 
         RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], 
       RowBox[{"-", "\[Kappa]"}]], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "phiBar"}], "-", 
         RowBox[{"2", " ", "\[Kappa]"}]}], "phiBar"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], 
       RowBox[{"2", "+", "\[Kappa]"}]], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"\[Pi]", " ", "\[Kappa]"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"phiBar", " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["3", "2"]}], "+", "\[Kappa]"}], "]"}]}]], "2", " ", 
      SqrtBox[
       FractionBox["2", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "RB"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Kappa]", "2"]}]}], ")"}]}]], 
         RowBox[{"Gamma", "[", 
          RowBox[{"1", "+", "\[Kappa]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "RB"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "RB"}], ")"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", "phiBar", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "RB"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["phiBar", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"6", " ", "\[Kappa]"}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Kappa]", "2"]}]}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "phiBar"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "RB"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], "3"], 
            " ", 
            RowBox[{"Hypergeometric2F1", "[", 
             RowBox[{"1", ",", 
              RowBox[{"1", "+", "\[Kappa]"}], ",", 
              RowBox[{"-", 
               FractionBox["1", "2"]}], ",", 
              FractionBox[
               RowBox[{"2", " ", "phiBar"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "RB"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}]]}], "]"}]}]}], 
          ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["phiBar", "2"], " ", "\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{"\[Pi]", " ", "\[Kappa]"}], "]"}], " ", 
         RowBox[{"Hypergeometric2F1Regularized", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", "1", ",", 
           RowBox[{"1", "-", "\[Kappa]"}], ",", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"2", " ", "\[Kappa]"}]}], 
            RowBox[{"2", " ", "phiBar"}]]}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.726936476900074*^9, 3.726936488186986*^9}, {
  3.726941436003989*^9, 3.726941439052857*^9}, {3.72695614941258*^9, 
  3.7269561505118713`*^9}},ExpressionUUID->"b467cfec-e009-48ea-b845-\
3b6cb9815b84"],

Cell[CellGroupData[{

Cell["Distribution functions at source", "Section",
 CellChangeTimes->{{3.727011590174267*^9, 
  3.7270116018620987`*^9}},ExpressionUUID->"3d940f35-0a19-456e-9705-\
6a6ddd5b94be"],

Cell[CellGroupData[{

Cell["Step function definition", "Subsubsection",
 CellChangeTimes->{{3.7270097256728783`*^9, 
  3.727009729089171*^9}},ExpressionUUID->"52b3d36f-2342-4c3d-ae1f-\
14df4a3e6a11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourcePieceFuncMax", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "+", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.7270247388884983`*^9, 
  3.727024739273291*^9}},ExpressionUUID->"a71ce8ea-8cc8-4e56-be4b-\
fb05712b173b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourcePieceFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "+", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.727018120579465*^9, 
  3.7270181256196413`*^9}, {3.7270248242665987`*^9, 
  3.727024824897677*^9}},ExpressionUUID->"06537277-f2ca-415d-9771-\
a6f6e0ec9b8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kappa function definition", "Subsubsection",
 CellChangeTimes->{{3.727009733096661*^9, 3.727009745488661*^9}, {
  3.727018519672544*^9, 
  3.7270185210158157`*^9}},ExpressionUUID->"1acf9a4f-3308-4b59-b587-\
9c66c1d00e16"],

Cell[TextData[{
 "Kappa w/ modified step func, in units s.t. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "th"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "620349a2-b9e6-4cea-b17d-9fcf693f295b"]
}], "Text",
 CellChangeTimes->{{3.727009696600786*^9, 3.727009706089224*^9}, {
   3.727012010827714*^9, 3.727012017636922*^9}, {3.727018643948222*^9, 
   3.727018646519607*^9}, 
   3.727024836646822*^9},ExpressionUUID->"0e3d5792-8339-4c21-87d9-\
41a299c5a98a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourceFuncMaxwellian", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]], 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["vpar", "2"], "+", 
       SuperscriptBox["vperp", "2"], "+", 
       SuperscriptBox["vbth", "2"]}], ")"}]}], "]"}], 
   RowBox[{"sourcePieceFuncMax", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "potExp"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727008176528145*^9, 3.727008195095921*^9}, {
  3.7270115721929197`*^9, 3.727011574822938*^9}, {3.727011627607773*^9, 
  3.727011629382308*^9}, {3.72701172481579*^9, 3.727011728773847*^9}, {
  3.727011766647304*^9, 3.7270117670378304`*^9}, {3.727011872014805*^9, 
  3.7270118724064083`*^9}, {3.727011978692533*^9, 3.727011990494253*^9}, {
  3.7270247422030287`*^9, 
  3.727024742561391*^9}},ExpressionUUID->"f11ac1e6-c202-4569-8607-\
1e9394d1013d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourceFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "kappa_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["\[Pi]", 
      RowBox[{"3", "/", "2"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["3", 
         RowBox[{"2", " ", "kappa"}]]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vperp", "2"], "+", 
         SuperscriptBox["vbth", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"kappa", "-", 
         RowBox[{"3", "/", "2"}]}], ")"}]]}], ")"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"kappa", "+", "1"}], ")"}]}]], 
   RowBox[{"sourcePieceFuncKappa", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727008176528145*^9, 3.727008195095921*^9}, {
  3.7270115721929197`*^9, 3.727011574822938*^9}, {3.727011627607773*^9, 
  3.727011629382308*^9}, {3.72701172481579*^9, 3.727011728773847*^9}, {
  3.727011766647304*^9, 3.7270117670378304`*^9}, {3.727011872014805*^9, 
  3.7270118724064083`*^9}, {3.727011978692533*^9, 3.727011990494253*^9}, {
  3.727018092898695*^9, 3.7270180942511587`*^9}, {3.727018129058786*^9, 
  3.727018136834855*^9}, {3.72701816887545*^9, 3.727018210458865*^9}, {
  3.72701826213864*^9, 3.7270182953942747`*^9}, {3.727018357059965*^9, 
  3.727018383913637*^9}, {3.7270248278997507`*^9, 
  3.7270248284420843`*^9}},ExpressionUUID->"4a36f1f1-8209-4d43-afdc-\
1206beccf092"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution functions at bottom of potential drop", "Section",
 CellChangeTimes->{{3.727011590174267*^9, 
  3.727011613350595*^9}},ExpressionUUID->"76a2b838-74a9-4437-804c-\
c25b5a01a22d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "RB"]}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "-", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "RB"]}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "-", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.7270121911806498`*^9, 
  3.727012203572393*^9}, {3.727012254723732*^9, 3.7270122708663807`*^9}, {
  3.727018303155917*^9, 3.7270183045627193`*^9}, {3.727024861659545*^9, 
  3.727024862178116*^9}},ExpressionUUID->"b3912a18-34f5-4f92-a9cd-\
3f47be8a96e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncKappaRho", "[", 
   RowBox[{"rho_", ",", "\[Theta]_", ",", "phiBar_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["rho", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
            ")"}]}], "-", "phiBar"}], ">", "0"}], "&&", 
        RowBox[{"rho", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"rho", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["rho", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
           ")"}]}], "-", "phiBar"}], "<", " ", "0"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.727016421243607*^9, 3.7270165523014174`*^9}, {
  3.727024866385644*^9, 
  3.727024867009685*^9}},ExpressionUUID->"4121babf-df66-4b76-94e4-\
55c95cf693d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncMax", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "RB"]}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "-", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "RB"]}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "-", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.7270121911806498`*^9, 
  3.727012203572393*^9}, {3.727012254723732*^9, 3.7270122708663807`*^9}, {
  3.7270247509134007`*^9, 
  3.727024751273674*^9}},ExpressionUUID->"25d0f953-9dc7-4b9a-9541-\
84a482e191b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncMaxRho", "[", 
   RowBox[{"rho_", ",", "\[Theta]_", ",", "phiBar_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["rho", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
            ")"}]}], "-", "phiBar"}], ">", "0"}], "&&", 
        RowBox[{"rho", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"rho", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["rho", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
           ")"}]}], "-", "phiBar"}], "<", " ", "0"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.727016421243607*^9, 3.7270165523014174`*^9}, {
  3.72702475500165*^9, 
  3.727024755385796*^9}},ExpressionUUID->"d25fd375-ba7d-46fd-a9de-\
e41376e29ac1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomFuncMaxwellian", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]], 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["vpar", "2"], "+", 
       SuperscriptBox["vperp", "2"], "-", 
       SuperscriptBox["vbth", "2"]}], ")"}]}], "]"}], 
   RowBox[{"bottomPieceFuncMax", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "potExp"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727012282875024*^9, 3.727012301611073*^9}, {
  3.727024760729383*^9, 
  3.727024761312326*^9}},ExpressionUUID->"88dc8254-a8d1-444c-92a6-\
d51d2203e9ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "kappa_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["\[Pi]", 
      RowBox[{"3", "/", "2"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["3", 
         RowBox[{"2", " ", "kappa"}]]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vperp", "2"], "-", 
         SuperscriptBox["vbth", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"kappa", "-", 
         RowBox[{"3", "/", "2"}]}], ")"}]]}], ")"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"kappa", "+", "1"}], ")"}]}]], 
   RowBox[{"bottomPieceFuncKappa", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727012282875024*^9, 3.727012301611073*^9}, {
  3.727018307694338*^9, 3.727018430899806*^9}, {3.727024925484622*^9, 
  3.727024926065209*^9}},ExpressionUUID->"d392b517-e0a1-4762-9652-\
e425727d49e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxwellGrate", "[", 
   RowBox[{"RB_", ",", "phiBar_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["rho", "2"], " ", 
      RowBox[{"Sin", "[", "theta", "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rho", "2"]}], "+", "phiBar"}], "]"}], 
      RowBox[{"bottomPieceFuncMaxRho", "[", 
       RowBox[{"rho", ",", "theta", ",", "phiBar", ",", "RB"}], "]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rho", ",", "0", ",", "20"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727026380935857*^9, 3.727026407545138*^9}, {
  3.727026456543799*^9, 3.72702645696194*^9}, {3.727026502035056*^9, 
  3.727026563637093*^9}},ExpressionUUID->"099d400d-e923-4b54-9e2b-\
7dd37fe1d909"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kappaGrate", "[", 
   RowBox[{"RB_", ",", "phiBar_", ",", "kappa_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["3", 
        RowBox[{"2", " ", "kappa"}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["rho", "2"], " ", 
      RowBox[{"Sin", "[", "theta", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["rho", "2"], "-", "phiBar"}], 
          RowBox[{"kappa", "-", 
           RowBox[{"3", "/", "2"}]}]]}], ")"}], 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"kappa", "+", "1"}], ")"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rho", ",", 
       FractionBox["phiBar", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Sin", "[", "theta", "]"}], ")"}], "2"], "/", "RB"}]}]], 
       ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727024947668044*^9, 3.727024948756816*^9}, {
  3.727025222526896*^9, 3.727025343398382*^9}, {3.727026201052917*^9, 
  3.7270262564102383`*^9}, {3.7270263257971992`*^9, 3.7270263318342543`*^9}, {
  3.727026469816107*^9, 3.7270264737954893`*^9}, {3.72703038693745*^9, 
  3.727030388513276*^9}},ExpressionUUID->"57931a78-324a-453a-aac6-\
9a9cf86f617e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kappaGrate", "[", 
   RowBox[{"RB_", ",", "phiBar_", ",", "kappa_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["3", 
        RowBox[{"2", " ", "kappa"}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["rho", "2"], " ", 
      RowBox[{"Sin", "[", "theta", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["rho", "2"], "-", "phiBar"}], 
          RowBox[{"kappa", "-", 
           RowBox[{"3", "/", "2"}]}]]}], ")"}], 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"kappa", "+", "1"}], ")"}]}]], 
      RowBox[{"bottomPieceFuncKappaRho", "[", 
       RowBox[{"rho", ",", "theta", ",", "phiBar", ",", "RB"}], "]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rho", ",", "0", ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727024947668044*^9, 3.727024948756816*^9}, {
   3.727025222526896*^9, 3.727025343398382*^9}, {3.727026201052917*^9, 
   3.7270262564102383`*^9}, {3.7270263257971992`*^9, 
   3.7270263318342543`*^9}, {3.727026469816107*^9, 3.7270264737954893`*^9}, {
   3.727030128798563*^9, 3.7270301440899067`*^9}, 3.727030268569887*^9, {
   3.7270304200819607`*^9, 
   3.727030420201953*^9}},ExpressionUUID->"c96f676e-8dc1-4a14-b7e3-\
aefa7b218dff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MaxwellGrate", "[", 
       RowBox[{"RB", ",", 
        RowBox[{"dPhi", "/", "Tm"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"kappaGrate", "[", 
        RowBox[{"RB", ",", 
         RowBox[{"dPhi", "/", "Tm"}], ",", "1000"}], "]"}], "//", "N"}]}], 
     "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"101", "/", "100"}], ",", "10", ",", "100", ",", "1000", ",", 
       "10000"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.72703014586565*^9, 3.727030193433075*^9}, {
  3.727030437360034*^9, 3.72703044556516*^9}, {3.727030791268725*^9, 
  3.727030831298119*^9}},ExpressionUUID->"cac0b021-3838-4ea6-88f8-\
f43e39227c61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0.09255547041882364`", ",", "0.09254227354987986`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.0050569472443194`", ",", "1.0048148664456207`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.6498877122049913`", ",", "1.6503295407772192`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.7323527634288707`", ",", "1.7329417767461652`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.740799992863482`", ",", "1.741404793946965`"}], "}"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727030204491371*^9, 3.727030274033567*^9, {3.7270304241734447`*^9, 
   3.727030448235689*^9}, {3.72703080070172*^9, 3.727030835696506*^9}, 
   3.727077021306778*^9},ExpressionUUID->"e248f70a-624e-468b-859d-\
5d9e9657b28e"]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.727077029058179*^9},ExpressionUUID->"d89ac753-5349-40a1-b551-\
73e116502899"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["rho", "2"], "-", "phiBar"}], 
       RowBox[{"k", "-", 
        RowBox[{"3", "/", "2"}]}]]}], ")"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}]], ",", 
   RowBox[{"k", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727030666558567*^9, 
  3.727030736683331*^9}},ExpressionUUID->"70bc732d-2b6e-4799-aa52-\
148987e8f925"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"phiBar", "-", 
   SuperscriptBox["rho", "2"]}]]], "Output",
 CellChangeTimes->{{3.7270306820611*^9, 3.727030706963035*^9}, 
   3.727030737408491*^9},ExpressionUUID->"d9d394b4-d917-4798-b4c4-\
907100795c44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare Maxwellian and kappa curves via NIntegration", "Subchapter",
 CellChangeTimes->{{3.727076507491843*^9, 
  3.727076517623022*^9}},ExpressionUUID->"661d6aa1-8ee8-418f-8bfa-\
e9f0ec18a57e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nDigitsdPhi", "=", "3"}], ";", 
  RowBox[{"nDigitsTm", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.725117027723465*^9, 3.7251170474324627`*^9}, {
   3.725117083177541*^9, 3.725117084064646*^9}, {3.7251171685048647`*^9, 
   3.725117191592723*^9}, {3.725118244263266*^9, 3.725118248086471*^9}, {
   3.725118539794796*^9, 3.725118600587405*^9}, {3.725203407186411*^9, 
   3.725203418593501*^9}, {3.725964372352734*^9, 3.725964381976285*^9}, {
   3.725964418867702*^9, 3.725964432271587*^9}, {3.725964617732306*^9, 
   3.7259646244347973`*^9}, {3.725965486604727*^9, 3.725965487989894*^9}, {
   3.7259655209416323`*^9, 3.725965541804348*^9}, {3.725977473241762*^9, 
   3.725977494852957*^9}, {3.7259779887142687`*^9, 3.725977998355652*^9}, {
   3.725978728531005*^9, 3.725978729948392*^9}, 3.725978779354767*^9, {
   3.725979061887186*^9, 3.725979063539961*^9}, {3.725979259432249*^9, 
   3.725979262167289*^9}, {3.726937937175748*^9, 
   3.7269379435775843`*^9}},ExpressionUUID->"55dd7c0b-938a-4ae8-8938-\
67666e700916"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaxwellGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", 
       RowBox[{"155", "/", "100"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", 
       RowBox[{"16", "/", "10"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", 
       RowBox[{"18", "/", "10"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", 
       RowBox[{"245", "/", "100"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", "4"}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", "100"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", "1", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Maxwell\>\"", ",", "\"\<\[Kappa]=1.55\>\"", ",", 
      "\"\<\[Kappa]=1.6\>\"", ",", "\"\<\[Kappa]=1.8\>\"", ",", 
      "\"\<\[Kappa]=2.45\>\"", ",", "\"\<\[Kappa]=4\>\"", ",", 
      "\"\<\[Kappa]=100\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "19"}], ")"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "StringForm", "[", 
         "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)= \!\(\*SubscriptBox[\(R\), \
\(\[Kappa]\)]\)(\[CapitalDelta]\[CapitalPhi], T, \[Kappa], \
\!\(\*SubscriptBox[\(R\), \(B\)]\))\>\"", "]"}], ",", "\"\<\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "StringForm", "[", 
         "\"\<Mirror Ratio \!\(\*SubscriptBox[\(R\), \(B\)]\)\>\"", "]"}], 
        ",", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\[CapitalDelta]\[CapitalPhi] = `1` V; \!\(\*SubscriptBox[\(T\), \
\(m\)]\)= `2` eV; \!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\)= `3`\>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"dPhi", ",", "nDigitsdPhi"}], "]"}], ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"Tm", ",", "nDigitsTm"}], "]"}], ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{"dPhi", "/", "Tm"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727030468561534*^9, 3.727030634664874*^9}, {
  3.72703084947512*^9, 3.727030983704854*^9}, {3.7270749544171457`*^9, 
  3.727075004341999*^9}, {3.7270750484469337`*^9, 
  3.727075192148896*^9}},ExpressionUUID->"9c8b10aa-5a23-40d4-8a7e-\
90a5cb0fb9ae"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Upfj
          "]]}, Annotation[#, "Charting`Private`Tag$2270#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2270#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0nk81NsbB3Bkp4v5ZivGzLcxLaqrFNLleeLSJksrQ4ylzVVIZclNm2zJ
klDZ4payj0hS1FxLllCyp7Jll7WIm9/398d5ndf7j+ec5/Ocw3R023dUSEBA
II1a/98fxt+N8NILNsjwZYcplj6EtdpHs4+zjkOM8uuMnIaHMLPs/NYtLC9o
dUnQse1+CJxrv36tYAWCiiCXISiaBktf8B1kWLGQqn3o0kqzNPjawiIkWGlw
bEjOkdaVBo19TcMirEII6F5amyr3GKpcN1gJsyphcSJFRyMpA6IjlKKOBFVC
6DkDMaenGcDNF6p9OlIJA2x7t6y3GfB9vhlOFryBPf9GbPddyAAy1H9VnUk1
WH9ItJrhZILf44bvsSffgnLTX3Z/r8gCJc+i6tst78DCa9FCJyMbanJsTq5R
bYVVV8z+2yXMg6joC01Cpq1wYfPZ45fleMDxubf9o28rTLncCufTeTBk2KEc
3toKwtLdWo5beSDezKmevtUGOfe6wxTdePDngrXGK8kO+PjeOZL7kQclO61G
D812QnnqPvWEkjxoc0/X5Q92wTve9Xib1Hz4dEBkb5FANwzDTcPhvHzo1uU6
5Cp2g5n6K+nr/HwYElAISTTuhslBeY3Ornz4GXG5w/d+NyjFjf5FYxaACs/q
opZ1D7TLzeUn3S8AuwnRsn/e9ELdNdPjfhlPodvDyTwwrR9S9Pz1xHqfQd/h
sznur/phWnanntbsMxjQD5DhtPXDbc+PV09LF8E3ibT6dVIDYLXWYZDYUgQL
94fM358eALXgy7IrAotA/r2Hhar2IAxPqs+xNjyHnZsuWT4pG4JLiecu+QQV
Q/Zk/P7PXaOwTa3w23v3EiANjVaozY2Cas/90ITAEoiJHOy2kx0DU9boEe/E
EvDX1D7zyWAMwr/ENdrVloDF6fqIzntjIO2dozm+uhQmBgXrOg5+g1I3qaMb
+krhrrsWa8R5HHKDDfq1Cl7Bp+NxiQOtEzDGqO9Yc5APcREmjy73TcDpZ7Hv
vzrxwbJomrd8cgJ2Rv4QzTnDhzJJy3JTqUnY4fN0p0MEHzKyJEZy9SdB0ZUr
Z1bLB+8p360+KZOQlK9Wa27yL9D8j3yQcJ2Cm48mc9cblYFJDCmpsTgN2eG2
yRsdK6BB57thsNQMOBM2/VmeFcBpq7rQrzgDf9AqRbQDKuCUisdoquYMXI2f
FHN9VAHRKaUNKo4zMFeueev8twroybaN/a18BiBqdF74UiVcqoxhTYZ8h1Ct
1/3GGW+gaFYSihRmwf3VcJ79uhowDU4+tmzuJ+j7jcyfhQZ4bf1duEj5F0zI
PwvJyWqEtZkLu29fEcC4aWGOqE8L+Bqvn50aF8TXrcszahs7oPjXS67XxSWo
nGqfk571BaTNHxg6TAhjZY+362xWD5iVjnx2uyqKoe9+7jJ3p/7Frh4H1m/i
mGTzY51N9jCMuGgegYsSONVbZT9FjMPmzE7Cf6kUuqnEaEjUTMKNa11G6lek
UWDTth7JuBlo8jP+fVz+N6xpmgos/zoLK8OtFrkpMnh6sMCK47wA21UcWCoh
shhxwLqj//0iDAhUsO/uk8PgHJn5+mZBVNzYfLRmKQ2Vvd66JWYswV1j+rHm
5TRkzwvsEPESQc/ig+xjNwjkXg+MP8sVQ/UPSpO/myzD5HrLf/SUJbBhIXTF
DRl5FPXa4GL4SRL/zjuks61JHlW9WtL3+0lj3pPa8IQwBZTrnx5K/LwUv5RN
GkcdVET7FvppFX0ZjGGW6erJKqFq9XWfeE1ZNJcaVd1SqYQ/A+vjlHJlUUCk
gssPU8ZQx+iER2vkcOvu3V+EdixHUmGQ73xDDl2SLr5sklmBOpmyM/UDcrgS
7VpsalZgY6D1R/4mGn4+dbtn81UV/HuVNznvTsPoDL+9ybtVcV8eXeRIOg3f
bZaZLhGmYwsZEPiohYbawHjWJ0bHBxvbv9u20vDuro1+0lJ0LA/Y1yfbRkNn
u/3CHDk6Sr+eQa92Gs4Gxi6bUaWjwN35ef1OGtI71LZo6NCx9+jGN0+6aeh6
WfN87Ek6avl3DxmO0lC0znLWrY6ONl3iLgKCBCZprxMPekfH89Np+6Mp6yaJ
KiV/oOOL7FeNq4QIdHEv1mlop+NKgzNxe5cQ+Jam7qXZT8d0uQPbokUIjD48
OzO+SEcn5QjyN0kCya7EKY+NaiiXmL/nKY1Ag+nhMc9oNUwwMDX+ShIoIllU
cyhWDcMCjUOtVxJYq3b90da7ang91eNqLWXOHobjYpIaMnIVQnksAs+nHGgK
yVBD6c3wnxebwGyLl8X3+Wr4xKM65vsaAulZN4Pqx9VwjXxGd7EmgYt5SpG3
2Qx0YruxPPQJFErUY7FXMxDv1cW2UxYNti18uoaBE67rXxoZEChtn9zZso6B
gmF8ujwQuFxq9drlWgyM2rPFKB8J1HbS+TcRGKg8rY69RgSeIg7NpFkxcNmN
dl/p3QR2eN6yfh7CQBZfQTH4INVvwYb9mjeo8zN/NLZTlv1RZfowjIHJCy2H
1x0i0NhXAKMiGMg22lBQRznn0im2SwwDReosqmWtCLwatmNKOYWBOUFq/iEc
AjXS5m/4FDFQJWhY/qA9gRfanV7pDjBwRJuWZXaCQM2aHvu0QQaafPYcjaTc
W+y0KD/MwPfWVxY/UDZLcDKYGmXg82OMO5yTBDK4Ti+yphioW1L1wMmFwLI+
x2fkIgPF81sMTrlS85hwyJVWYCL7jCvauxMYL8ZN/mLExA2KaRVlXgS6W91z
Pm3MRPGgHJaQN5XncfPqBRMm/tSPPgCUx3bv5SnuZuKyTO+1RZTxph7fzIKJ
PioH8tJ9qP6Wyfe+sGWifRSYB1yg8pHVq+6cY6JBc2aysj+Bz//YnGOZxsSd
tiEe5QEEsnsH2soeMTHkhevHacqRoQnCuulMLK5tV2ddJ/BEuyiHnsVEorPg
wBXKCt5twsN5TBQd/8bSDyTwzJOLnGslTFSwlknNDKLuW1slUtjERP2ZJzzP
UCqfop2tijCJ2ydflD+MoN5fj897LkLi5z1GKo2U79iyxazFSMzlFpkvUo65
P8a7LUniG9WuvYcjCQzX8BeTkSNxzkcuXSSKwCuQnCdIJ/F36V1zNrcIPH68
W7xfh8Qqu5zH324T+DXYxC5gK4n1J/TfKcYQ6JyZ/mTlNhIr98+1AmXuxBk7
rgGJn+KOBIdT5lxYkt/2J1UfEOi+PpZA03CWfa0liYY6Kaec4gis5gXlu+wn
0bLILzWY8q4PIxISB0kcUhYvzqFsolyQb2xFYoj3zfB5ypBqLFlqR/VXOtEQ
eYfAkvLH9ke4JGZN9ygUUv5jYGnBvAOJr1u2w0fKuuub7XWPkriqMl6HfZfA
p+Z6Bc3HSOwrrBTbQ3nLmUTJcydI7H9Q+NyNcn60EJdwIdF5Z5BFNOVNhccK
eH9R9Z17q55R/h8iHKIA
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2270#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1Hk4ldv3AHBx8L4IlfkcxznHCaVuuoQSayVD+RlCiXMzNVASRTclpUFF
kiGhEhpuuoWMhVDJLJHMokyZXUOGIr7v74/97Ofz7L2ftdae2Pu9bQ7x8/Hx
lVLt//sn8Xcj/LaEGByOF0qv00mHtdqH0ty57lB479fRc0bpMC11avMmrh+8
D/0srmudDrygxUU69xqkRHgVd3ikw/KCYlcJbiyoqEdIVSakw/dm7iqSmwxT
4po9FUQGfO5rHBbkvoLSqc38e/syoNLzD3satxzelVmfP/0uC6Ij5KIcg8th
YLZQzKc+C1yy+T+8HCkHm+Bstn9PFszMN8GRnArwlmUKvhTMBk5ooOpHkypI
mE8o6DDLhoB/62Zij9RAx4bokOnmbJDzzau63fwJVCYXfof9zoHqF38dWaPY
ArqP+mren86FqOizjfzmLRBi8kbK8kYu8M7c2/bFvwWyHzcd7k/MhSHDdvnw
lha4eOmOq2l5LhBNvKoft1ohvWowtVAmD4wWHNTfirTDUlt74o3cPCjaYT9q
N9cBUt1f1ywIv4bW4890iwe7wEnq28+AlkLo3C1okcfXDQth051P/iuEbl0X
13TZbtgh8qmlS6gIhvhkricYd0MFu35N6KYi+BVxsd3/QTccOZAQmnKrCBgZ
9uc1HXpAWFlSQMv2DThNCJU8rugFLWIgqN77LXSfOGB1LbkfAsNmjS3liqFv
78kXx9/2g0Hw6SgX1WIY0L8iwWvth+nrNo/PaxfDf2Ry7TrRAeAR5Tqdu4th
4cGQVb3XAHAN1BbVo4pBuv7ELkXtQbgFCaKkxHvY8ecF66ySIRio0PLlX1kC
aZPxtl+7RkFmxupzmUEZcAy305V+jsJU687ZeqsyiIkc7HaSHAN/7naNYZcy
CNTQ9uk0GIOLNSqLcLkMdnnVRnTcGwP5NMeogIoymBhc9rF9z38gMNtcaLin
HO4e1+SOHByHjFePu/F0BXS6xyUMtEyA9dYRqaS+KoiLMHl6sW8CTsqOmybO
V4F13o8MhckJ8G6L6ExbUQ0lItal5qKTMDS602tJvxqep5Ij6fqTUN+9scot
thpOT/lvPvNwEs403Uzca/EBVgY6NpCeU3BqfNsp4bIaMInhiKgv/QAPdWbi
kVN1UKczYxgiOg2+Q217nC/XAa+18my/7DQ4fZlQc4qog2OME6OPNKZh+XeG
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

          "]]}, Annotation[#, "Charting`Private`Tag$2270#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9xw=
          "]]}, Annotation[#, "Charting`Private`Tag$2270#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2270#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pNo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2270#7"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, Automatic}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{1.8796613004033026`*^-7, 9.210340184010054}, {
        0.03371022952134458, 6.65472510894763}}, {{1.8796613004033026`*^-7, 
        9.210340184010054}, {0.03371022952134458, 6.65472510894763}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         InterpretationBox[
         "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)= \
\\!\\(\\*SubscriptBox[\\(R\\), \
\\(\[Kappa]\\)]\\)(\[CapitalDelta]\[CapitalPhi], T, \[Kappa], \
\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\))\"", 
          StringForm[
          "n/\!\(\*SubscriptBox[\(n\), \(0\)]\)= \!\(\*SubscriptBox[\(R\), \(\
\[Kappa]\)]\)(\[CapitalDelta]\[CapitalPhi], T, \[Kappa], \
\!\(\*SubscriptBox[\(R\), \(B\)]\))"], Editable -> False], TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
         InterpretationBox[
         "\"Mirror Ratio \\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\)\"", 
          StringForm["Mirror Ratio \!\(\*SubscriptBox[\(R\), \(B\)]\)"], 
          Editable -> False], TraditionalForm], 
        FormBox[
         InterpretationBox[
         "\"\[CapitalDelta]\[CapitalPhi] = \\!\\(\\*FormBox[\\\"\\\\\\\"941\\\
\\\\\"\\\", TraditionalForm]\\) V; \\!\\(\\*SubscriptBox[\\(T\\), \
\\(m\\)]\\)= \\!\\(\\*FormBox[\\\"\\\\\\\"110\\\\\\\"\\\", \
TraditionalForm]\\) eV; \\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\)= \\!\
\\(\\*FormBox[\\\"\\\\\\\"8.6\\\\\\\"\\\", TraditionalForm]\\)\"", 
          StringForm[
          "\[CapitalDelta]\[CapitalPhi] = `1` V; \!\(\*SubscriptBox[\(T\), \
\(m\)]\)= `2` eV; \!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\)= `3`", 
           NumberForm[941, 3], 
           NumberForm[110, 3], 
           NumberForm[8.554545454545455, {3, 1}]], Editable -> False], 
         TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 900, LabelStyle -> (FontSize -> 19),
      Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Maxwell\"", "\"\[Kappa]=1.55\"", "\"\[Kappa]=1.6\"", 
       "\"\[Kappa]=1.8\"", "\"\[Kappa]=2.45\"", "\"\[Kappa]=4\"", 
       "\"\[Kappa]=100\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 19, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"FontSize", "\[Rule]", "19"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7270304942263002`*^9, 3.727030503670727*^9}, {
   3.7270305463628407`*^9, 3.727030635468068*^9}, 3.727031590995737*^9, 
   3.727075497403162*^9},ExpressionUUID->"bbb2bdf9-2d27-4f68-a8bb-\
e6d6234e4e59"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now for some plots!", "Chapter",
 CellChangeTimes->{{3.725960168987678*^9, 
  3.7259601728517942`*^9}},ExpressionUUID->"17cafd48-d0cb-4889-8832-\
2c2fe6b983da"],

Cell[CellGroupData[{

Cell["\<\
Function at source, with lines showing which particles make it to the bottom \
(I think)\
\>", "Subsubsection",
 CellChangeTimes->{{3.727011547367176*^9, 3.72701155092634*^9}, {
  3.727011645582711*^9, 
  3.72701167276602*^9}},ExpressionUUID->"63bd1928-ed34-49b7-9c1c-\
b130a3e66040"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"sourceFuncKappa", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "kappa"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", 
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vbth", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kappa", ",", "2"}], "}"}], ",", 
     RowBox[{"3", "/", "2"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727018439961399*^9, 3.727018470641408*^9}, {3.727018575683305*^9, 
  3.727018582377638*^9}, {3.727024702383016*^9, 
  3.727024705745468*^9}},ExpressionUUID->"6a4a38c0-6d14-423c-b67c-\
85c7be772747"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kappa$$ = 2, $CellContext`RB$$ = 
    3, $CellContext`vbth$$ = 3., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`RB$$], {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {
      Hold[$CellContext`vbth$$], 0, 5}, {{
       Hold[$CellContext`kappa$$], 2}, 
      Rational[3, 2], 10}}, Typeset`size$$ = {700., {272., 275.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$230788$$ = 0, $CellContext`vbth$230789$$ = 
    0, $CellContext`kappa$230790$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`kappa$$ = 2, $CellContext`RB$$ = 
        1, $CellContext`vbth$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$230788$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$230789$$, 0], 
        Hold[$CellContext`kappa$$, $CellContext`kappa$230790$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`sourceFuncKappa[$CellContext`vpar, $CellContext`vperp, \
$CellContext`vbth$$, $CellContext`RB$$, $CellContext`kappa$$], \
{$CellContext`vpar, 0, 3}, {$CellContext`vperp, -1.5, 1.5}, PlotRange -> Full,
         ImageSize -> 700], "Specifications" :> {{$CellContext`RB$$, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {$CellContext`vbth$$, 0, 5}, {{$CellContext`kappa$$, 2}, 
         Rational[3, 2], 10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{747., {349., 354.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.727006751314726*^9, 3.727008048824212*^9, 3.727008201207872*^9, {
   3.727008324910478*^9, 3.72700837602871*^9}, 3.7270084283062277`*^9, {
   3.727008519874661*^9, 3.727008553578884*^9}, {3.727008599703631*^9, 
   3.727008622925211*^9}, 3.7270086553328247`*^9, 3.7270088237490253`*^9, 
   3.727009854865983*^9, 3.7270099138143063`*^9, 3.727011640287616*^9, 
   3.727011734026739*^9, 3.7270117702348413`*^9, {3.727011994203*^9, 
   3.727012005435152*^9}, {3.727018457747468*^9, 3.727018500895083*^9}, 
   3.7270185829912243`*^9, 
   3.727024706115561*^9},ExpressionUUID->"376ecdf2-d0ef-46c0-8010-\
65bb46fe3664"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Function at bottom of potential drop (for dPhi=941 V, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "m"], "=", 
    RowBox[{"110", " ", "eV"}]}], TraditionalForm]],ExpressionUUID->
  "c7bae214-66a6-4fb5-8007-08c1bc26bfd5"],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.727012324809824*^9, 3.727012334442009*^9}, {
  3.727013023150839*^9, 
  3.727013057414369*^9}},ExpressionUUID->"f6f091a7-07f0-4a23-b1a3-\
55b62f257f9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"bottomFuncKappa", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "kappa"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RB", ",", "72"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbth", ",", 
       SqrtBox[
        RowBox[{"dPhi", "/", "Tm"}]]}], "}"}], ",", "0", ",", "4"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kappa", ",", "2"}], "}"}], ",", 
     RowBox[{"3", "/", "2"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727012339587678*^9, 3.727012342131145*^9}, {3.727012431240834*^9, 
  3.727012534001828*^9}, {3.72701259716241*^9, 3.727012625723126*^9}, {
  3.727012749498288*^9, 3.7270127532250834`*^9}, {3.7270186051691437`*^9, 
  3.727018629824821*^9}, {3.727018803378119*^9, 3.727018805175976*^9}, {
  3.72701916292004*^9, 
  3.7270191658300657`*^9}},ExpressionUUID->"3bdd0c4d-7f81-49ea-b84d-\
5eea8b80a31c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kappa$$ = 10, $CellContext`RB$$ = 
    2, $CellContext`vbth$$ = 0.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`RB$$], 72}, {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {{
       Hold[$CellContext`vbth$$], Rational[941, 110]^Rational[1, 2]}, 0, 4}, {{
       Hold[$CellContext`kappa$$], 2}, 
      Rational[3, 2], 10}}, Typeset`size$$ = {600., {238., 242.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$225805$$ = 0, $CellContext`vbth$225806$$ = 
    0, $CellContext`kappa$225807$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`kappa$$ = 2, $CellContext`RB$$ = 
        72, $CellContext`vbth$$ = Rational[941, 110]^Rational[1, 2]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$225805$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$225806$$, 0], 
        Hold[$CellContext`kappa$$, $CellContext`kappa$225807$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`bottomFuncKappa[$CellContext`vpar, $CellContext`vperp, \
$CellContext`vbth$$, $CellContext`RB$$, $CellContext`kappa$$], \
{$CellContext`vpar, 0, 2}, {$CellContext`vperp, 0, 2}, PlotRange -> Full, 
        AxesLabel -> Automatic, ImageSize -> 600], 
      "Specifications" :> {{{$CellContext`RB$$, 72}, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {{$CellContext`vbth$$, Rational[941, 110]^Rational[1, 2]}, 
         0, 4}, {{$CellContext`kappa$$, 2}, 
         Rational[3, 2], 10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{647., {315., 320.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7270126002747393`*^9, 3.727012626069765*^9}, 
   3.727012753561844*^9, 3.72701279530963*^9, 3.727013019355918*^9, 
   3.727013054288583*^9, 3.7270186307942247`*^9, 3.727018806460525*^9, 
   3.727019167430781*^9},ExpressionUUID->"e76e62f4-82a4-4cf4-9116-\
47a034031ce3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use rho representation", "Subsubsection",
 CellChangeTimes->{{3.727017796060034*^9, 
  3.727017799525655*^9}},ExpressionUUID->"a88ea384-5020-44bc-8cb2-\
b732d9cfb428"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rho", " ", 
      RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
     RowBox[{"rho", " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rho", "2"]}], "+", 
        FractionBox["dPhi", "Tm"]}], "]"}], " ", 
      RowBox[{"bottomPieceFuncRho", "[", 
       RowBox[{"rho", ",", "theta", ",", 
        FractionBox["dPhi", "Tm"], ",", "80"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rho", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727016890043365*^9, 3.727016913967278*^9}, {
  3.7270169648480253`*^9, 3.727016966928919*^9}, {3.727017116354292*^9, 
  3.7270172431763973`*^9}},ExpressionUUID->"7e5ceeb3-796f-4ca1-b84e-\
0ada09375809"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Hv3yRYnufBq8y3NfLilU3q/jdkGDlPUTFTv2xw+QEh9jmmxWQCq+9lHbL/XI
4u3tgxsWTlSj4ZNLfjdWfSNGZrczVTbYWyTN0fmm2qxOFZ9Y2Z6YXUS0tZ+/
KrD7bR5VemVm1hVNunDVaePUC8VkgJBTp7F6gHkL3J+zgnd/zqMVHl1XdtYT
1+GrNK3Wsfsodvc7eH/52FYy7nmNl4gyi+unFl/3Vq7vJhZNRhWFa5h92ZP5
s3fxQlFqqedu9/Api9cS4LsgA/hOKBS+09mrr/72nKMSTVg/MrSXRgXZvyDn
6vZn/chtuwIfJVUVOmxvZprskypye+2i/odtXlmUB5838nmsSm+cXt/W5lFD
fui+6Xgt42ahnbq2oNxDnUbmSfbwVKgjm7RPptaPE7WYXmEctkhHky52+ZxU
5VhPMmK0HunWHDbHe29sePfeyGZOVXF/2UwGPW/y+PDP/RuzvTT1Jtl1kfYF
tucOuLJz/i8ONfQM2yxCV05J3p/syPyuuXCPjfCev/fYdFj8/b5y+1IfJ9V1
yjSpKy183MDfpGXtmsCm3dkWr6aMMJBWUaUuWzcEv9ZtJlttlwbI9t1qoT3i
x6+uZDXas7aPr32/VlKVN0TrlYmyhXvPyJuNdhr03eq3m+t12ol/3dSCuw9j
zKXge29J3v0zzXovK3X8O0jeQ8u5TafY90H18z+5NLkJ06uVaXP8C9i5aPxO
2413b0yR+yPp6yYqdGHrEl0noy5Sflb/24FLuy2Wzbrjr/talZ4OmnXoiLMQ
Hfhb/WXNeR2LHKPE9qMr1ekRleqD21KE6YuHeoZ1IdfNFeBel0bevS5Rxcl7
jiar0C3NhcRISIy2fRx3cH/fIRYDs49rnRmrRifHW12uPiVOZyfYC2leemB+
LD15dWGxCl0j329rH3NpGpjS4G5AX5tHw30XQ3j3XTRtOEb6WBcSoXHTQqML
WfwVON/xnYNoOXHfGLFg3z95g5ATx4fNz6slldk1CuYh/9T5kvVtbhz9m8Rs
PNIw6jPzf7S8nR4e3d9KFimafjEYwPwfvO/CAc4dl56Gc6ou+2QfzBKl9+vV
nwQFStL9wA8nT/vW7PcSp5qPVxuLGsrQk8AP3Z83frCPk6QbDtyN25klR18B
PzgoOd8a/lGaZixT0G7bpkhrTP/ywzMruyhhYTmqenR4euoffs7t8ZcfDPxm
+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
4VI90a8Za0/TFCjySfAKm08fLzSSHyutG9XFlekU4JObBg52vi5HyJHqz9JZ
palcO+lT5obbPU4lpr7eD8l7lvfzENa76Kr2gqQJPTA/P4mdt3lwzXqSqmMm
0XvcvSww75/vFL7uT6y7/4mU+/XtPfYIy3fVlzjUxD78Sb71d6jK1Vak5Vf/
8sbmDuFBEe6V5MyEVr1cU2WON5pVY5bv7vGLZG54nD2lQoXjjftw/78w3P+P
vNHm86vFYuRFImZQ4eP0Dw+PnGDoopObQkxerxxyQeif7zJiai/uf/OIpEwo
y5g5n/X/Xf8ZOgpD04n1qd7+Uway/ht+DEqavPcLuXLz6N7w/or0FPDDbTVj
j8CxeeRu7ZcRUlOUOX6YvLBY/9nPAhIT5Hw6vU2F44fyV1M3+s8sJHt1GuUC
r6lx/LCpQ7/XGW9h+u7c+fCw/Rnc766De7H7wT3ZyBt43/cj3r33W3n3ukfB
+ZzXOQ/iNxj8iaPjtrkum8H0JxXOM+H5pmtwrgm/M0nnfW/iC3//CtpD+Rzg
EfxeZDl+hwXnAKp597T/hHFuhnGjXDLg7/lLEziPif0ZBuNHPBAHY7gvLxTu
z+sP5zkFxaGn4d/L4f+H/I99zIVwD+d5uIcTz4vaw/kwPC+Gv4vf21jwzg9M
hXwx5d0zGcH77sYX+hMF/djA25dUg3y6Ju8ewoMw/rGAx2c4tyYoLyco3473
4DjC/98LcrwX/hnvHK+35J3iNcVlZPqKwe8eZCZy8h+qr2vflf/x59L25J8a
z+6dk4s1Xb+muJnIHa7f/CCTnWsdNfpKjVheJ+lOi2k32sPuyzVyCLv1rlyY
NjRY+58a/5rhqafSftFNiS7e/PWQU2EOV0dvrvSvE+/KlWm2nMnCU+PzufOQ
S6pfjm9yUaVzzodpZUd85eroOWeez+1VqkZ/RNev3bO1kKujh/fR9+fVocC6
lst553LjrEIveMbVkbjY8B3vNVk/59U9l68PbibbTPt+C0llcUdnpJjnOvdO
cjJ2yy4jV3YeQNC63qXba+ynoUr0bphF7M5H5dx442dVzvWMU6az0sob32lW
ceP9vDXVTa2vKi1sipjcz+MXN16sm5IKPIrjHfra9vQ8ZQ0qet2zoWh/HTfe
Z3D+dhHv/G1RXvWwDc1NJCOkz2/pr+ycPNbdOQPnwlA+B87ZdvPqRQ77Vhof
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
Gwfj4+6fhPEjHij/P0UYcrY=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJw1nAf8V9P/xz+fe+/nnns/lUQpKWREO5US0RIiI0ISScOI7JGVEGXvPSJb
RvbM3iOJ7JWQTfiJiv/r2ev8H49O5/V9f84999x7z3mv836fNvsftuvEpFKp
nJBXKqnqv0OlsrlKE+HbykplVF11rVK5VXhf4VuFv8kqldtVP6c2N4k+QvQb
9PcM4eHC1wm/Inyp8OHq90bhvYSvF/199X1MUanM0rW3iL6P6LeI/rXon6ue
I3pF1wxXGVjVmNT2XbVroN9uVj1S7W8WvlZ4mPDFwot07clq94QunSn63qLP
EL2x+jhWZVf1c53ou4t+hejXC+8hfKXwDcJ7Cl8rnKiP+fq7LlwVfke4FP5H
/b8pnAgP1MvqpP6+0722EH2o2q0qfKd+31/9zFKbZaK/pb9T4fPUtqPKt2rT
V/T7RG8m/J1+66yxddBvH+h9XqO/HxD9feGrhe8XXiB8lfBs4dt13X7q/079
fYfwaOG7hKcLDxAeJbxc/c/V35nwCuG3hWvCvwqfqXG+pn666X6/qd5QZQ/1
v55+35hnydxW/yq9M/ehqrJp5udmjjDWRarVXWVg5ndT53up734irik4KPP7
ayD8g+pzcr+vXpnfB3NssHBD4UbCfYSbCDcV7qJ2P6leQ2XbzN+8ofDWws1q
7v9n1T3U5yZq+4vKj9xHpYHGsEPws2yj9muoXUvh7YSbC68lvL1wC+FWwkOE
1xRuLTxW76mVHmQt/b2n6Ourbif6GNHXEr2l/t5Z9Faq24g+VHht4fWFdxFu
Lbye8F7CGwp3EB4l3EG4G+9Q4/xTdQ+V8eqztfrcSL+NUJu2qjuKfqDo64je
Tn8fILy28MbC+6pNe9WbqM1vqjfXs/dQf38I9xPuJTxcbTbQ3+3V5i5dO0bX
3q2/f9f7eEJ/vyn6arnX+B68Y5XvK57DfLtr1L5Q+yfVzxTVl4n8qOrH4vc9
XPROwoOEn1T7TdXn8erjGPX3hX57ijaaICeI9o/wpfp9R114mq65XHhn4TOE
n1HbqaqvZonr2rEqg3XNZWqzk9qcrt8eVZuTVV+kNo8JnyJ8sfATwqcKXyr8
uPBk4UuETxHeXHiY8LnC2wqPET5C4zlJff9b8Rgvq3mcx4t+tugtVa4WfZjo
RzKvhG8SfkP4Lz3jKyrNhY9T+2lqu4bKO2ozTW3uEf1I0U8RLVH5T+95qsYf
9Nuhoh8t2s9qs7/arytaT8as/nroOY/Vb++pHKHyuui/i95N9Pf19yG69kjV
XzNXVTeBbwkPUz+rq5+NhCflHivjfFX1eaLPFH5N+Hx4pPBV6m+oxnOB/u6l
/h8Ifp+z1OZI0c6AXwkfLnya8N3CRwlPFZ4tfJzw2cIXq58h6udYnln0o1Wf
yRwTPkL4dOGr1WZXtblQf9+o+zyqv4/iXqrHiz5b9KWinwU/Ff1e0Q8S/UH6
FD5Q+AHhu4UPEL6fby+8g/AxwtcI7yZ8kfBc3fcS1Xeqn82FVxVeXTjVO9lX
ZRu9r1tEP0T0k+Eh+ruRyvnCpX4/WGWI/n5AbSapzbmivyx8DmMXfkX4XOGb
hJ8VPpP7C1+pMeyiMZwNXxb9ePia6BeIvr3oB3KN6AepPkH0c0TfRvSxvEfh
QcJjkAXC2wmP597C2wqPEz5feLDwAcJba3ylymRkmfo8WLQThW8WniB8kvBo
tW+p9o2YW6KvUrO83ky4sfBqwonm0nfq55so09/QNVX4r+iLIz0T/lF4sXBN
+PuIq8LfCn/FXNJ3e0Rlr6pp7VQW8k5Ee1hluP5emlnuvQ9PySznXxZenFkX
eEl4S+GHaytFe+XbzPL2ReH/ZZZp77HuMsu0BcI7q+8WdcvFvzPzsw9EX1Ud
XKsyTPd9XM/0i57tVdGfyjxfrkSm6NpQ93ydk3n+XsUYRC/qnt99het1z4NM
/e2fe75sJXpZ9zfeUXiNuufcvZm/83T1M1ftdlJprlJPzFM3UCmEd1e9nsqK
zHP/U3imxvmXxjkPflvz3P9CcCd4TN3y/t/Mc/8z0f/LvCY+F/4qs57yjPCi
qA88i6zRvXbWfVqoHC/6pqLvBF8S7iK8LbxCuCeyS7i57vVNaTnRQvjb0rLq
4Mxypq/arCn64tIy6QTRe6neBR4o3IP3IbyO2vykNt3gv7p3V+Sw6D8i63LL
8GZqs6i0brGG8NelZerawj8KbyJ8UGYZuJWuXVf0n0XvjjwW/kG4q/AWwnnd
vGlCZtnYT+3XEv370vJ1ue63tkprlV1EX7Nu3XRJZl31bXhsZh2W9/99Zl31
FeGFmfXBp9EhMuuMzKXfMuukc4V/zaxvviXcSM93tMouyA/d67vSsrmL8LLS
a3kT4RVlXMv65rNL6xh1XTdRZUdd+4xo52icW+WWBUNV1lLZO7Gu2krlKOFT
Vecqm6vPWt28u7vwf6X5wj8qQ9THlmpzsu71ADqu7jWR71z39ztOuLPwYOEp
wpsL74kMEN5SeAQyQHgL4eHwdOE+wnshy/Tsm6nuDz8U/TzRt9H9DmPuCPfR
bwdm/m5bqM1hGsNIjW+g8AGZ58jmwhPUvk3dc+hQ5kLd8/IQ5kjdc3eq8FbC
e8Mb1c9D+nusrp2mur/o+4o+Wbin8K7CpwhvKjyUNan2B+u+o9X+ZNF7iL4L
c1t43brXw/VqM0FtDkcHyzwHewufxLxTm515J6LvqHov0U9kjou+k/4+S7if
8D7IP+G+wiOFTxXuLbyH8AqVXfVu+rEeRe8i+vaiHc56Et5SeBLzWngH1hfr
QHiI8DHMZeGthY8V7ig8CF6vMY/VmHfVeAarXq1uWTVEuFnd8n574dXrlls7
CDetWyf4JLNt9Jiu/Tiz/HxU+MPMesHDwgPUvmHdOlZ/4QZ1615VPcfI3LKo
m+j/lpZtmwpX65avPYrKSuUQmXS/xvkY8wMZJHpat27xUWa94BH4s/oapNJA
ZbfEsrqhSm+1z+rWJ97NLGPvU/tBojeuWx89VvR+PKvoxwj3FR4sPC4zn9gM
fU/334g1pb+PEm4nPED4aNao8EDhI4U3Fu4P/9G9n1W5ADmoe71X2ibZMbNc
XVf0rUVfpW69843M+untor+eWbe9TfjNzLrtHcIvqY9L0AewXXVto7r11G2w
EevWfbcVblK3bjEosR3zq67tIPpZoo/m26jPiaovRD7q94dUBqg8X3oeM4d/
UZuZNev27XXthYV1hnbqc+PEtnNP0S4qrP9spDE9rDJF9I1VP6JyuvBpyLjS
POdUdMXCvGgf1TcU1ufR6/eLuv05UXelzWSNYYuaec6J+nu0yjLhUbruxsJ4
NPNB/S9Hvuv3J+I8aKsxbph4vbTVWB5SmYytrPqJ3Pf5V9f+Upg/rlk138WG
baH+mpfmletUrQt8KHrDxPJgN5UO6uNxlenC/dTHxYV16Y5q0yHOvw31+4Mq
J2Ofqdyr0lelhg0Nr0Su6/cHcj/fCl2/RdV8ZjlzRqUP70PvoTPfWfRC14XS
PLmKPlH192omWtPSMnui2r+o9gPgP8KvCA8VfoIxqvyOLNYYW6j8IXyprhmh
skR4jNq3Uftewq3Uds/CtuV+oj+HfEAnV9uRKv8Tbqrfdyts82ODXFu4H2yX
sdF+ma9rp6PjiL6J7tlVpanoVyCTqh7Pi7ruPngNOrbqj1XG8E5UPqha7ynx
0yB7kGPq82n1uUHFtvm1mttN9XcNfqaytugHId9LFE5/A/r7r2K7bf+qbbfz
1M92NcuCB9W2l/p5XX+P07U3FW5zs+oPCl9zgOqZhft5SvUMlb+Er2NOV423
Up9P1uyHOb9qHRZ7bQ2Nu1ni9XiNrnus8PNfVLX+i57TSr+vpbK0Ylv4+sLv
+WrVjxb+TivQcwrriEsjn9lOpYuu65zY5sXuexB5xHdS/VDhdYV+93GwjneI
nvUpZCQyV3gOslN4Qt3f9Bm1nVj3HHie+affT1L/H6WW0YcHz8lf4zOgq62e
2P7HJ7Ou+rpX5Sjhk1S/oPIxOq36m17YR9Q88XuBT7XR7/epHAMfT+x/6UxR
21uD7Up0oduDbcmuwncG24w9NZ594Qtqf67GPE94gPp6Ndra+MlOFP1E4U+Q
j8Iv65pD0LmQOaw30U/GlyD8Bboddgl8StfOVb27ylXCb6p+o7B+ij42C/sT
3VjX7q+/X9a1nVTfHGzDbqL7PKO/T4P/lLZrsMNXizYR/ruuos8prJN1Kv2t
sfNZX2cX9u2crLG+pPKJ6KeofkXl06r1/4N1769Z84lthraiL9c8vA9ZjV0A
3xZto6p9bO2r9rM9pN8X1+x/66f/cpX19Vv/xPbGhsJ/I3er1hOWaSzvqPTW
3+10/0dVpjL/RLussN/1b/39ssoOVftjec/opc2qrvGjfqN7fluzndJefTym
cpZ+65aYR2BHv63xf6Q2d8Gv8JWhR+q3P0W/A3le8dydrXKc2v8WeUp3ldaJ
1xL+K/jYeVFvZH7frzIJflf1uu2p0jIxT8T3daJ+f07lI3iExj+tsM+Q9bQk
rqnTC88T7ALsxLF6/1/WTJ+q8oLat4nyA9nB+vszrsFS9/mv6ncbhP+t+p0v
1PVf1WyH8v4mVM0PX1A5mPkCVh/3FMbjVGarpFXL7jNZt/jMIv2IinnwPZEP
Iz/vUNmtYl52e+SBO2Nz5G63g+pbVO4U/ijyYeTWUNFuZX3C1zXmx1SPZwzC
T6s+sGrZdm8cz95qu1Zu3WAHfa/H9VyrVMxTx0e+uo9+vx2fYMV8FXnH+OCv
B0Ye2wKbJrdMXNle5Un4cNWy/tSK780YVqlaj0GfCcxb9fFV4TYtdd1euXWY
PVXfhr6iNt/p99Prts9nCR9auJ9Bsf8GUW7cVfV4Po94f+Hd8Xci4/X3F7ru
y8L3/kf1t4V1v89Ud9G3eaDq9zEqvhPG/2Tsf3b8lkfEb7Fmbpk+WnWr3HrF
oNx+0kHCA4Wb516PW6peI/fcHq1vcVvVuhTfEd8lfstb4rfnuw/O/U55n/sl
5pf7Vs3jRqlszfsUfZ7wxDjfejO3wOrvRH3HG9Tm+cLrn7X/nPBmanOG8FGi
rZNbj+qb20eJf3J1bPfc6wj/xmE8f8VziLlUr5q3IkM35VtrDBdULTsPyn1v
7nuA6K+LdghzQPTWuXnOmNx6LTrtYbl9qfhRX1W7Q1XuFj5U9LVz85/x6ufF
uK6ej2vt+oq/7Zj4fTvlHjdj7q66v/psAT8XbppbfvVS3Sw3f+6d25eKH3WU
+r+maj3pQ72fzno/d/OuRb+sajl+dGKZwLPzXbbPvSbPVf1Gbrk6J64t5iR6
JnKqUXzns+JcfTSuRfp5WPcZqPn8lr7TNRrL7jX7S28VnoddC9Z1nxbmDQ+K
/m7NthV6a/vEdtOWqvtE39NVGsv1uXkW/t7r1f9hNevT4+J6fyKuSebznYXl
HeO+S/Wzhe2h2wvLOMbaEV2Udad+GmrMq2BfRd85/BX/+Slqc39hfCx8qLCf
fFqcm2DkzuGFfdnP6VneV3/Xok8KnyQ8gzUo/Knw49ga6Jil/Vpfin55zXuC
d4j+dOFnuC2uZZ4N3YqxN656zt9dGKNndVJZld8Sy9c9hY/X77ML++6mx3ne
PM7r66vWDz+N6421NiPqGNCZU5vGecW8Z/6jN54n2tu55Rt6IroWewdLox7S
tmL6xVXrkF1jGzD65ZVV69ifxDXG+rou6jPQ4SXbRn6C/j6ssA7/FrxT32iz
3POVebsk9omcbRvXxY257838vyn3/brHNvSPLj0fHa7qtbJFXC/wqZuqtvvQ
c4dHXReehu/q2rh+WEfQkdPXxXcIb5mZ+53C//pHHrhPbLOShxTWA2dUbWui
H3IvbMf9CtuP8NKtc49jVNRtZkZeODN+I3jvzRS+ieoPVH4XPl/1u7n1iM+q
5rPw2NER0/9xen9Pl9ZxGqJ7lt5rLIQ/LL3HwDz/SeXtOPffifOfuT85zn/4
Kr5Bfvumar8e+zvY01MK28vMtfmRr7J3NovxVc3zjoh8Dz0YvaZjbD83zs8/
on6CrXVE7J8+2Q+6W+XDqvn6cZG3M/deLa3PY5txHX5pbHxs6vmxz9+Cx8m6
wz7toXWytso6iWUZfr9atIWx5bGL+a2NynqJ5Rd/rxvb43fA/1Co3iG2o83g
2C9t0L+xmbFNsAGxl+mrHu1H/AI7JrYj2cvDRwAtq7rNOcH0RpEvcb+v47vi
3dLX+vG+OyfmW0fG9jOCMTxgUuQD6GtHRJ0NnersYPnC/Po9zjHe17LYP/bT
z1XvoTaNdlDjitf0r3HtYxdBZ2+a+b4kzvne0Ucxv2Jd6o84J7HH6Pe7ink1
vhL0InwZtEePRYe5IVgPge9hW6LDvMkarVqGopei3yMrWd+/RT4wKeqx61Zt
FzEv4EPwy4mRZ35VtazlWmT6ndgwVes446Keg83APdB7J0RMe+Q08nq1SH8l
tllUtYxfKd+rHisYvWBC1A3wKxxZuD0y5LgoR9AH8Jm/UbU8oYaOXoGP7aWq
+Tm2Nv2iV9yl8lbVPgzsFHSSD2uWN8ga7JZNon+jWbRt0RnmYJtljjHgO2An
45rgG/KNiTMo1Hf74HdQyMaerzJNvyWirxesk36fux1tsB2xITW8lXtnqybe
P2sRbRn0kBdq9ungz2Ffrknivblto58B3YwxNo/jxA5fI/oo6KNl7Oc73bOW
28+wOPeYGM8Pqhvk9kV8ofr7mnnLl8I/1TwHGuk5PlA5UX0tEv1/NduPC9Fx
apYVjVP7FfAvfAV/rZnf10V7T2WK6A1UL1A5gfWoNn/X7B/7UXiVPO5z6Pdv
VE5Rm59F2y3z/Gwt2mKVU/FPiN4v8zrC3lsz+sG+EX15zXbMt+g7NdsTz+KD
zBz7gZxH3n9ZsZ29StSROkXfC/rnAnzSmffE8cV0jnoC9mjr+M6X6fd78cVU
/B1aRXqv2G5p1MfwJ06p2J/YIepm8/EHZ95bZ651i/OQ+3SJY+iemNeiA+Pv
wAeH/23PxL9BR5/DFoVvo/d1iPfaPfH8ps+fI99grpbRJ0B76jL6B5h77OlW
K94TTuMcWxzx18LX5N5Xxb/AvGU/mJils0W7Onf/P0b64op1Kd41/oq+Ub/i
nWMv0wd8hnfPN+Ad4u8A//8+aaPEcgneht92flxr+JXgpY3is3xUMd8KsU/6
Bq8fx8KYGOcjzOmq5wN7DQurnv/0D89lj5DYra0T81r63Dz20waZVnodIbOG
JNH3G+UQL26niJE71PyNj5c9O3wexGPgS8cv3StxTMjapdcsdauI+W2zxLEo
zMs+8Z30TPwbdOLg0H3Re1tGv0qfKEsZH750ZNrOUSbuEjFyjfW0Ws1rijWU
17yOLscWibxrtOjr1CyPThbuXbMMuk14v5rlzmHCHWuWfczTTeOcJE5lUvwW
2yeW68j0IXFsyNztEvMv1gt7HNsk5ltVPccehdfyesLnFl7fzIsBcZ4koo8o
vL7WF76g8JpjLvSP84G5ek9uvw3vZ0nw+2dfaVjitdhe9EsLr++hou2aWDdp
Ivphhdc7sTjYgf+vwx6WWI/dI/EaY321Y16UXrPDE69P3sNqoh1VWI7w7diP
x2YZETHfsYPaXFFY5kDjN/z/IxPPG8aMzUksEf6fLSK9VZxXtGOP4yp9i91q
lvv4KdgbzqO8PTaxzMW2x2ZGDrOX1LY0r8AvgE2OPQ5tg0hnvbJu8TnCZ7aK
vIJ5xHxC58KOw9eA7MXuOyix/svewZjE9il+nWMS27n4CbCZsXOxRQgsXRJ5
ziGRzxA3hl8Dnwb2E/FS2FDsMeEfweZY6f9P7AP7Jfd8Za6eg85Ys272l2TF
a2pzFnxR3/+y3HpPd+ErcutqXYQvz60bLVc9Jbfv7RnVk3PbBL3U5src+xjL
VJ+a24fE9+oZv+P6anNJbp1sHeGLc+/LIcceTizLEnzMuXX/jYQvza2fIdMe
SSzX/hPtjNx61grVp+XmWf+qPj03zyJutlncJ0Ketw2W6fi3zyksi/F7n19Y
/uIPYbzIWfRf9GBkPfYNz4cc/6Hw+l+pk6i+pHCf+LV4H8hT7AnGjoxGT1kp
MyrWFb6PPLav3v+03H7pr6JOs1D1DaJ9klvXQZ7wvfnWP8Rr0X+4aGpufRAa
vy2O8mVGbj5eZa8g9zOsRcxa7n255sIX5taV0SnWCH7ezzWeS2vWydELWgY/
y0+i31izXYOv79/4bp/N7TdGP3lH3+VO1RMS6xFrB8sOdJ8Pc783dJ95ud85
enerqHs/pP4PrVn3fl74hJp14HnCZ9Ws36JbvZlbv3ont48AXRy96b3c3w5d
7NPc7zhV39fllntv5fYxYUssyG3HYj+8ntvvxHx7MrcfHFvx5dx7DSeL/n60
f08XnpvbL8HcQ29jf+huZG20i08TfhV7kfZ6H8/n3gM6Mba/ou79jI9y29XY
Qh+zPnJ/U3TGWYnbo/fdlfjdfpZ7TjAfPo5zg3U6J/ceCX6Op3PvkeBr2V7P
fn/pvcJfc8se5E5X9blM5Rxdu6poKxLzv0FqO1xlln5rLPryxHz0bdV3puYj
TUT/NzFPehcZUtr3Op+2qX3kq6jNssT0earvSs136qL/lZg/EQT9c2L+lAj/
mpj/vaH61tR+0M9Urk8dc/qpynWp42G/VrkldcxpVdf+kpi3vck9U/saG4i+
NDG/bCj8d2JZ1L/0PhN7TOtkHjdj3kD4g8S8eG3hdxLz4g2JE0ut07TIPD7G
1jrzs/Fc6+N/S8zT18WvmHh/oI3we4nlx1sqt6eWi3NV7kjNrxupzT+J/dEf
qb46Ne/+UOWq1Pz9P9U/Jebx66n9gsSyZ7no3yfeU2uV+TvxjQbq+T5Rfa1+
/5jnTi0zsCcWJ7YpOmpu/JV7TTGfsRnQbbqKvjT32u8h/Hfu9b6x8P9yr0fi
B5AHyIINVP+Ze82em9reYF2cmdi2OSmuhUVx7TdhjQbrqKyLL+Naxo7pFswn
XyttC7GWX8xtL3WPfOaLuK5Za8gw5FdTXfdbbl2LdcpcZ54Xeif/SyxjF6m+
OXXc8dboSyoz9XdQmz8Ty+RU+LfEe5Gfq74htQ7xhcqMNOoHavNHYvm/UPVN
qeV0JvqSxH7tFhrPktzylHgG+Cw8dl3q3HogPO/33Hxvhfr4IfGc/Ff4x8Q6
1JfMi9Syv6b+f0+sj6yVeQ4xf1pmnlvMqzUzrwHm/4b4OEvHfV2RObbrMPRb
/F2lY66W1bz/tVXUT9BNsii/4Pf4t4kNmKax7qdrr80ck3V0xbofeh/+KPap
/ykdl9sOn27pvImN8WuWjjFjX/jv0vG6/9a8f9S/avsC+cC+VVt02NIxYPjz
rw0e84zM8XTHIxMzx9AdJ3x95ti6Y4Ub69rPS+chrCL8Wen8hF9q9uOSn9EI
/3/pHIZc+P3SMb6l8Eel8yUCvsDS8b6rC39VOidhNeGFpXMSmuAnL523cF3m
uL9jKtYNmOP4P9mjX146JrkNvsHSMX8jM+dDdMV2yBxnN1F4VbX5onTuxN6Z
cyO6iH5Z5pi7Q4UvzRxPdwi6Ez7G0vFbA0rvtTP3Nsq85lnvG2fmA+jfbTPz
F3gLfv3nqvZNsX90R+6/u2fmO/Cc9pn5L7y3a+b1w9rZJDP/hfd2zLw2WBcd
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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtnAXYFcUXxnfvvbt39rMb9S/YYIEKiAGKWKhIqYiYhJISEgJKCwhISEgK
qIiAQZgoqaKI2N2BjYlgx//98e7zfPN8c3ZmZ2vmzHvec849qE235l0LURR9
Wooi/UW3J66foIOV4ih6sxxFe1dE0Yc6tlzti9X+l+qnqv0/tS9Oo+hAlWNU
P1PH7ihGUW2V/pK7S75fbb1VVurcEyWvU9vVKter/oD6vKfxp2vMzzXmGvXp
r767qxystndV3lf7Prr+F2pfq/YhkrdkUTRRcgfJszXWCSo3qW8PjVlTbReo
LFS9k8rZ3K/G+1jtbdT/k5Lv5w3J3VQe1Xipxn9SxyerfZP6f6ZSRW0HqTym
9rLaV6h9itrvVtuPqp+isf+n9r5qP0LtfXWssdo/kFxJ8peSn5L8oPoXdWwn
9X9P8mTJseQvdO4KyXdKLkj+UvILkofq3v5R6aFnmqZzntX/1io9VX9IfU7U
szVTOVnHbpa8RP/PVXlB9fbqs5Zr6frrdf27NN4ayTtKfk7ynZKfUt8rVLqp
70ydc5+u1U3lQbXV1rFj1P9olQck/6n2p1TfWec/r/Pv1rF5Oreuyi1qu0H9
H1W9Kd9U9b469rT676L+G9R/nvofrXu9iG/CddVntdp3UPuzap+r9pWSKySv
lTxT8gz1O16ll8a6Tv2PUHs1ldlq+0PH+qt+lPr3V/+mOjZdfY9jPqmti/ov
0bMcpHKc5LMlr1HbZUWPNV7HaulemqrU1LE+kr/RePtqvK0a71WNd4LaLlG5
suj524frq/0GtV+g9nt0vJ7KaL692g9T+6Eq49X2O3NG9QNVBkv+TfJa9b1c
hUU2RfIi1c9QuVf11jpWXddqrnJm0evhQs2Hv3X/nzCfNcbI1POjj9rvUP+R
ao8kfx77G2WqB5UGkj9VuVHtz+heO6s+nD5q+1fjL9GxUZzKfFc5LfY1juR9
lv1uz1dJVC+p1I29Zhar/p/OX6rzR+v8eqrfovexUvfVWfezVO2x5IfUfqva
/wmad5JrlD1/OqvfASpdVN+gcpH6nSR5muqXMX/VL1L/ZTo+RtUeaqus0lVt
r6gs1/UKan9Y7WPVXkttP7AGVZ+o9l/1XnZSuVH3Mlxlm+o7oH9Uv1nlLvX9
Qef2UN8xvB+dvyK1bqD9+fx5btKx99X+kO6nKPlxnXObrjElsc5AV4xSOV31
mqmvfanKw7wv9V+u4xOZA7r2/ioDNfYolVt0/mtqu059R6o8ov6J+j+hY5PU
/2SN9bP6/BL5nRyu9qplz6WGsfXYkUXfK/fcU20/6Z6H6fyW6Be1naOyWn2v
Uftzqrdh/ai+nO+v+tlF19vp2GLVG6qsk3yt5Hs13jm6n9kar4/G6yf5SMn9
JDeRvJvkXVUax9ZZc3XuiSqDY+ukSfre09R/x7Lvt7+e5T8906Y4X7Nqn1th
ncb8nKNz6/B+Yu8Bd6p+ksrQ2Pe8A/pA5SzJn6lU13nfaMwvNNatko+X/B3f
VPIEyTenvl5PjTFD5z+md/O7ynzd/0DWs8aqo/KP+l6sspf61lG5XfXLVSqr
rYrKr7HX0CMap4nKVQXrh15q+1nj3azxLtV4B0s+pOy1zT0OT70ee+mcmTpn
gORVzHfJIySPSK3ve0ueJXk/1fdX2RZ7DT7J+tX7Wa3xp2uoFyXvIfktyUsl
7yV5T5ULVd8ae+2yhodrvMUFr310wAjJSyQv1LvZpnMvVN8DYr9L3ulItS9V
e1fVe6B/1a+Zxtyg+3te5ST1/Uhllb7XsZnnyrWSp6V+f0N1/vyCdQM64mbJ
D7IHqn4A+k/yCsmnpH7HvNsZKv9pvJm6XgPd014FPwvPNFb9H+caaq+Tee/+
l/2Tdaiiw9HuOjZX9dEq6hLtwXxJvf4qSd4H/a6Ox2We+x1Y45Kn6nrr6Mf+
pf9rVY4Ga7Cfq314hdcx63ej2l5Q2Ufj/SR5Z/YvlVG6v4c05hi1bda7+krt
36m9huQ9VFqqPg7Mo/oZKs3BNzxzfr/0Len82qrvqdJK8mSVd1R/W+VM9f9F
8huqv65SW/IWybNUn6nyruSLJD+j+tMqx8bWT+frWafr/vfVPY7TPZ6Xef3t
JPkWyYP0fKdk3pv2i6PtL26W2i/W81bSsVc01ssqh6vp59hrmzU+Wuc+XPD3
OkDnnKH6N+pzuvrurXIla1/lQ7WP4Po61i62flvO+ygYQ7AXsifepvHW6Nix
qh+nMlnys5JvSz3/b5Q8p+C9kj1zguRVkpuqvYlKd411auy9HwwwUe1Pqf1E
1U9SuR3Mk+v3J5lvqm+MjF3AMJPU/gx4NDX+ukHygoLf765gVtaS5BZ6noP1
vLUkb831/RN8r4Ix64P596BvfZVG6jtDz19bY07h/avtXJXW6nuKxjhC7aPV
/piOXaT+u0qupnKh6juq/fbUe+NgnTsP/BSMkcBGzKnHJR8D/ih4zhyo+2mj
b3cFeAudqvOnq7RgrqrPparvl3qtPs7+qv4z1P8a1Qeh8zTey8FrgT2mha7d
Wfe3Rv1qSj5H/29V/7ZqH6BysuSBkluzV/J9NfZpknfTtb6WfFfq/buqzt1P
x3qhe1U2SG6a44/HuT+1zWF81pbK1Wqbr3JlMMYCW/0JnmZ8lRNUPwD8qfO7
63pXqW8/1pja3lLpq/fVSWV39KPKGNUfKdheeEClXsHvZKWOX1I0Fh6BPlO9
pUqHgjHratUvVelYMIbbRfdyh97HQl3zyIJ138Vg1qJ14BLwmNoOV99DVVbo
eIui907w98Vqn6n2qujG2HOTOcpeA+ZfqHtrqzJBz1eD763+9biW2j/XsYfV
dhj3L7kxY+r9DKiwHkd/P6S2Q1VOVr1RPp9mM780xjGSX9a9tFI5Gf2pPgvU
9wqVIawFHWuoccaq76EYeTkePE/n36lj/XVoIfu25DmSb5D8EvuN5LclL0PW
2I1UvtG5Ba6H/lb7O2p/KPK34Js0i23DHM9cVzlf57wteXTZ+qpS2fbXUtaM
yquxv8lC1Ruo3BnbhtjIeOr/psZfov6Pqa1Z0VgZm3KRnq1j6rl1PPgN/aX+
L6v/Ih1bD16R/JLkhei4stdrrbLtK3QROgnb6y/wiMb6SOUWdL3K47pWczBU
wTblctUvVGlbMGYZre8zuMIYopbGGKv/r/G+1X6r+t2g9pMz20Z75/r3QJWz
JP8k8TnV++v8Cp1zAfORvpIzyY1i641qKmfH1h+sT+YIc6Otzn+Utceeo/bm
OtZF1+ul899Qv51i666j0KGxdVh3tffhe6p9t9i68mj2q9g6c57qZ1E09oHs
3+o3SO/uINX/xt5R2/noMtUP0bFKYKEK2/XY80+y91bYJn5RfU7S+QNU/w6b
R+Voyd0kb8YGU6kiubXkb4vGSCvAL+gjHZsR2f6ZrvoPahtXsH38veStkifn
+mGZrn1ewfd8neRH1P6T2ifo2I0aryf2qo5fDWZU35dUBuV4/BH2PpX6ev6m
6AS9n4Hqfwz7nPqPkjxI8nGsS8lPaJzzNX519d8s+WrJ90r+Udcbz/XU/8YK
8yaVcv3JmmWt8s4O0vsZVWG7FHsUPmKMzv9e548tmA/4WPIvkicVrO+Xqm/D
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
           "]], 
          Polygon3DBox[CompressedData["
1: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
VoPdxbawOewpVpONirmQzY29F6sVe9vYf7H5sf6ySmwgW8MmsR6sr892DRvA
arHZbDJry5axwfGds9rGjmPb2AJ2nDVj82N/yFazA6x+7BvY02wpO8gasmmx
92PLYl/JGrCpbA+7P9Zu1ohNZ8+wB9gJ1oItZC+ytUk6/9+YTefvpjnpWvC6
asWWshNyuXLlYx2LNd531lr18NvcJ1dHbrzcdrmFSbo3zbBC8b1l0n3qK6wl
WxT7D7Yu9oT6M7Pp3xPxd8V7jr0s15wt0D7K1sReIL4L9Wb+dK8Xe76dctXY
CJbLZrEd7BY2nG1iM2O/6136Wv8t95ujprvnW2O/qio7/he5/Y5/ZmxbtjH2
f+ygYx8Ye0hNMmaLOtf4PPGeqCvkeseczc8Y29rYR9gptt3YTrFPyabzVMxX
Bx2bqF/c2Erxtwg7w+4wtiS/XrsHu0m+C7uQXck6s3KsFyvFyrGerBLryIqz
0qwdu5Ldzi5gZVkndj3rzEqwMqwju451ZRexq9jt7M+sG7s49p2sCyvP8rrf
AeqG/Ok8FPNR/J27mW1lv2XSv3mf158fc7nj6z2zduo9dUBNYLmqkOdXLPYR
6u786TOIZ/G+zEE1UXuzKiJ3XvztrCbJHZK7kR+Kv9dj/6O9Qb6TOh776tiv
GlNQTXXsbfZZfBf6WTUvzLg2Pttyftr5drjnJWyWc3Zhj7GxbDGbyW5nj7Ix
7Gf91fxxdU/B9G+TRdoztDtrr5IbLfel655Q01xvd/yd4dqTXXNS7EXl3pHb
K/eFzDE1RWaXukTufzQUM70=
           "]], 
          Polygon3DBox[{{2487, 1949, 1948, 2486, 1486, 1487}, {1954, 2092, 
           1378, 1488, 2488, 1953}, {2367, 2400, 1286, 1088, 999, 774}}]},
         Annotation[#, "Charting`Private`Tag$154368#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1077, 1282, 2509, 1078, 1294, 2519, 1102, 2588, 1307, 1116, 
       2590, 1320, 1130, 2594, 1333, 1144, 2601, 1346, 1158, 2611, 1359, 1172,
        2623, 1372, 2548, 1186, 1385, 2558, 1200, 2636, 1398, 1214, 2638, 
       1411, 1228, 2642, 1424, 1242, 2648, 1437, 1256, 2656, 1450, 1270}], 
      Line3DBox[{1079, 1283, 2510, 1080, 1295, 2520, 1103, 1308, 2529, 1117, 
       2591, 1321, 1131, 2595, 1334, 1145, 2602, 1347, 1159, 2612, 1360, 1173,
        2624, 1373, 2549, 1187, 1386, 2559, 1201, 1399, 2568, 1215, 2639, 
       1412, 1229, 2643, 1425, 1243, 2649, 1438, 1257, 2657, 1451, 1271}], 
      Line3DBox[{1081, 1284, 2511, 1082, 1296, 2521, 1104, 1309, 2530, 1118, 
       1322, 2537, 1132, 2596, 1335, 1146, 2603, 1348, 1160, 2613, 1361, 1174,
        2625, 1374, 2550, 1188, 1387, 2560, 1202, 1400, 2569, 1216, 1413, 
       2576, 1230, 2644, 1426, 1244, 2650, 1439, 1258, 2658, 1452, 1272}], 
      Line3DBox[{1083, 1285, 2512, 1084, 1297, 2522, 1105, 1310, 2531, 1119, 
       1323, 2538, 1133, 1336, 2543, 1147, 2604, 1349, 1161, 2614, 1362, 1175,
        2626, 1375, 2551, 1189, 1388, 2561, 1203, 1401, 2570, 1217, 1414, 
       2577, 1231, 1427, 2582, 1245, 2651, 1440, 1259, 2659, 1453, 1273}], 
      Line3DBox[{1085, 1462, 1463, 2513, 1086, 1468, 1469, 2523, 1106, 1471, 
       2667, 1472, 1120, 1474, 2670, 1475, 1134, 1477, 2673, 1478, 1148, 1480,
        2675, 1481, 1162, 2615, 1483, 1484, 1176, 2627, 1486, 1487, 2552, 
       1190, 1489, 1490, 2562, 1204, 1492, 2676, 1493, 1218, 1495, 2678, 1496,
        1232, 1498, 2681, 1499, 1246, 1501, 2684, 1502, 1260, 2660, 1505, 
       1506, 1507}], Line3DBox[CompressedData["
1:eJwNyedGBQAYx+H3cCoOEe2tC2jSoKVBg4YWDaqjRXXSoPShUqSUktSXuobu
KyIiItLz4fF7vf+a9M5EJhERK3QnI66yI655z4qo05NURK3mU08DH7YmPbU1
agHNtPBpa9MzW6sW0k4HX7Yb/y53J0X0cOvXq9/2fu2jmAHubIP6YxvWIUoY
4d42qr+2cR2jlEv/SZ3izzaj0zz4l+kscyRY4Nx/XstZZIkkaS5sy1rBKmvk
8Oi/oetUsskWx/4pzbBNFbs8+e9pLgfsU80hz7YjzeOVF974B0ZRKYI=
       "]], 
      Line3DBox[{1091, 1289, 2514, 1092, 1301, 2524, 1110, 1314, 2532, 1124, 
       2592, 1327, 1138, 2597, 1340, 1152, 2606, 1353, 1166, 2617, 1366, 1180,
        2629, 1379, 2553, 1194, 1392, 2563, 1208, 1405, 2571, 1222, 2640, 
       1418, 1236, 2645, 1431, 1250, 2652, 1444, 1264, 2662, 1457, 1277}], 
      Line3DBox[{1093, 1290, 2515, 1094, 1302, 2525, 1111, 1315, 2533, 1125, 
       1328, 2539, 1139, 2598, 1341, 1153, 2607, 1354, 1167, 2618, 1367, 1181,
        2630, 1380, 2554, 1195, 1393, 2564, 1209, 1406, 2572, 1223, 1419, 
       2578, 1237, 2646, 1432, 1251, 2653, 1445, 1265, 2663, 1458, 1278}], 
      Line3DBox[{1095, 1291, 2516, 1096, 1303, 2526, 1112, 1316, 2534, 1126, 
       1329, 2540, 1140, 2599, 1342, 1154, 2608, 1355, 1168, 2619, 1368, 1182,
        2631, 1381, 2555, 1196, 1394, 2565, 1210, 1407, 2573, 1224, 1420, 
       2579, 1238, 1433, 1252, 2654, 1446, 1266, 2664, 1459, 1279}], 
      Line3DBox[{1097, 1292, 2517, 1098, 1304, 2527, 1113, 1317, 2535, 1127, 
       1330, 2541, 1141, 1343, 2544, 1155, 2609, 1356, 1169, 2620, 1369, 1183,
        2632, 1382, 2556, 1197, 1395, 2566, 1211, 1408, 2574, 1225, 1421, 
       2580, 1239, 1434, 2583, 1253, 2655, 1447, 1267, 2665, 1460, 1280}], 
      Line3DBox[{1099, 1466, 1467, 2518, 1100, 1305, 2528, 1114, 1318, 2536, 
       1128, 1331, 2542, 1142, 1344, 2545, 1156, 1357, 2546, 1170, 2621, 1370,
        1184, 2633, 1383, 2557, 1198, 1396, 2567, 1212, 1409, 2575, 1226, 
       1422, 2581, 1240, 1435, 2584, 1254, 1448, 2585, 1268, 2666, 1509, 1510,
        1511}], 
      Line3DBox[{1269, 1449, 2685, 1504, 1255, 1436, 2647, 1241, 1423, 2641, 
       1227, 1410, 2637, 1213, 1397, 2635, 1199, 1384, 2634, 1185, 2547, 1371,
        2622, 1171, 1358, 2610, 1157, 1345, 2600, 1143, 1332, 2593, 1129, 
       1319, 2589, 1115, 1306, 2587, 1101, 1293, 2586, 1076, 2508, 1281, 1461,
        1512}], Line3DBox[CompressedData["
1:eJwVz8kuQwEYhuG/pVRR09ZU8zyPt+EKRGKJvaWpe2qIRIKNnZ0rcAWuwNK8
Mzahni7efO93Tr785+RWNpbWExGximJlxHUqoqI64qwqYlEuoMibMMfnccJn
5WkmYkb+6G+2F7ZJPa+3yGa88iym+DSO+aScwDe/tyvYJfS98h3ZiBdeizF+
6c64PNJH5Qi++J1t3jb0Xb1BZvHM0xjiwzjkg3IAn/zWbtOuxHdQX/4nN+rk
k55CH+9HgffKHnzwG9s12z++Xf5GzzN45El08W4c8JzsxDu/slu2O3fnV99C
jXdpPPCSd+28A/t6m2zFP+JBLlQ=
       "]], Line3DBox[CompressedData["
1:eJwV0UkrhmEUBuBHpkgp/oB5tmLDBgss2JBiQxk2JGwQSikyl8SChcyzzPPW
L/AL7JVSSpFyfYurc5/n3O/m+9I7+hv7okII4/zGhHAeG8JGXAhrpDDKGSN8
uG+7P8tFJDPEZGIIp+YgbzqrOk9yIUmsuA+YJ/TzqjOj8ygXMOyeYPZwTDcv
OmM6D3I+cXRxRCd37n3uc769t+cRTRuHtEamzrR7u96dPZdACwc0s+y+rtek
c2vP4U9uNPdpYElnQafW+409mx+53pxw2zPrGNcp934tZ/EtL7rXyLtUM6BT
7P1Kzoz8Hu5f9kp5hwo6dNK8XcoZ9Op82svlbcpo0kn1Nut2YU+P/D/2UnOL
Eqp0ptzjvZ/b03iX581N5ljnHwrKQIg=
       "]], 
      Line3DBox[{1276, 1456, 1508, 2661, 1263, 1443, 1503, 1249, 1430, 2683, 
       1500, 1235, 1417, 2680, 1497, 1221, 1404, 2677, 1494, 1207, 2718, 1391,
        1491, 1193, 2717, 1378, 1488, 2628, 1179, 1365, 1485, 2616, 1165, 
       1352, 1482, 2605, 1151, 1339, 2674, 1479, 1137, 1326, 2672, 1476, 1123,
        1313, 2669, 1473, 1109, 2716, 1300, 1470, 1090, 2715, 1288, 1464, 
       1465}], Line3DBox[CompressedData["
1:eJwVzTlKg0EYBuARkj+QUtwtxN4L2Fl5AHMCrazMATQuneBeSSrxHu77vu/7
XgjRaEAQU/ikeHjfmW8+prEj3dZVFkLo5D4K4Zobprjjlvd4CA9ykSW6mSm9
SYYQmbXEQsg5b7PDMHvskjN/lMus0MOgvVlZbpay+6Hvc8AIRxySN3+Sq0za
WZMZ5mgwa7f7qR9zwihnnFIwf5brbNDLPE3u0/by+jkXjHHFtD8u5Y83L3KT
LfpYoNl9xu6XXpEIoZJxvVpW8Wv+6hzT4/Trf7S6H7L3rde4z/qnVk4418s6
it68OUd6ggG9SMp91m5B/wetRkZC
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1851, 2129, 2508, 2041, 1850, 2509, 2042, 1852, 2510, 2043, 
       1853, 2511, 2044, 1854, 2512, 2045, 1855, 2480, 2513, 2046, 2184, 2686,
        2246, 2247, 2200, 2230, 2348, 2388}], 
      Line3DBox[{1862, 2401, 2586, 1861, 2519, 2054, 1863, 2520, 2055, 1864, 
       2521, 2056, 1865, 2522, 2057, 1866, 2482, 2523, 2058, 2185, 2687, 2250,
        2251, 2202, 2232, 2349, 2369, 2394}], 
      Line3DBox[{1872, 2064, 2528, 1871, 2063, 2527, 1870, 2062, 2526, 1869, 
       2061, 2525, 1868, 2060, 2524, 1867, 2059, 2716, 2304, 2336, 2335, 2337,
        2697, 2402, 2233, 2203, 2253, 2252, 2296, 2505, 2696, 2365, 2368, 
       2399}], Line3DBox[{1874, 2403, 2587, 1873, 2404, 2588, 1875, 2529, 
       2065, 1876, 2530, 2066, 1877, 2531, 2067, 1878, 2667, 2131, 2068, 2186,
        2688, 2254, 2132, 2204, 2234, 2356, 2384}], 
      Line3DBox[{1884, 2073, 2536, 1883, 2072, 2535, 1882, 2071, 2534, 1881, 
       2070, 2533, 1880, 2069, 2532, 1879, 2669, 2405, 2305, 2134, 2338, 2188,
        2493, 2668, 2235, 2205, 2133, 2255, 2187, 2711, 636, 2374}], 
      Line3DBox[{1886, 2406, 2589, 1885, 2407, 2590, 1887, 2408, 2591, 1888, 
       2537, 2074, 1889, 2538, 2075, 1890, 2670, 2135, 2076, 2189, 2496, 2699,
        2136, 2206, 2236, 2357, 2371, 732}], 
      Line3DBox[{1896, 2080, 2542, 1895, 2079, 2541, 1894, 2078, 2540, 1893, 
       2077, 2539, 1892, 2592, 2410, 1891, 2672, 2409, 2306, 2138, 2339, 2191,
        2494, 2671, 2237, 2208, 2137, 2256, 2190, 2506, 1763, 988}], 
      Line3DBox[{1898, 2411, 2593, 1897, 2412, 2594, 1899, 2413, 2595, 1900, 
       2414, 2596, 1901, 2543, 2081, 1902, 2673, 2139, 2140, 1903, 2700, 2257,
        2141, 2207, 2142, 2358, 2391}], 
      Line3DBox[{1909, 2083, 2545, 1908, 2082, 2544, 1907, 2599, 2417, 1906, 
       2598, 2416, 1905, 2597, 2415, 1904, 2674, 2146, 2307, 2145, 2308, 2309,
        2497, 2701, 2144, 2209, 2143, 2258, 2299, 2721, 2364, 2366}], 
      Line3DBox[{1911, 2418, 2600, 1910, 2419, 2601, 1912, 2420, 2602, 1913, 
       2421, 2603, 1914, 2422, 2604, 1915, 2675, 2147, 2148, 1916, 2702, 2259,
        2149, 2210, 2150, 2359, 2260, 2396}], 
      Line3DBox[{1922, 2084, 2546, 1921, 2609, 2426, 1920, 2608, 2425, 1919, 
       2607, 2424, 1918, 2606, 2423, 1917, 2483, 2605, 2310, 2153, 2311, 2312,
        2689, 2262, 2152, 2211, 2151, 2261, 2300, 1815, 2375}], 
      Line3DBox[{1924, 2427, 2610, 1923, 2428, 2611, 1925, 2429, 2612, 1926, 
       2430, 2613, 1927, 2431, 2614, 1928, 2484, 2615, 2154, 1929, 2703, 2263,
        2264, 2212, 2265, 2350, 2386}], 
      Line3DBox[{1937, 2621, 2436, 1936, 2620, 2435, 1935, 2619, 2434, 1934, 
       2618, 2433, 1933, 2617, 2432, 1932, 2485, 2616, 2313, 2315, 2314, 1931,
        2498, 2704, 2268, 2213, 2267, 2266, 1930, 2713, 2379}], 
      Line3DBox[{1941, 2547, 2085, 1939, 2548, 2086, 1943, 2549, 2087, 1945, 
       2550, 2088, 1947, 2551, 2089, 1949, 2487, 2552, 2090, 2192, 2500, 2705,
        2271, 2216, 2238, 2352, 2389}], 
      Line3DBox[{1963, 2633, 2446, 1961, 2632, 2445, 1959, 2631, 2444, 1957, 
       2630, 2443, 1955, 2629, 2442, 1953, 2488, 2628, 2316, 2318, 2317, 1952,
        2501, 2706, 2274, 2215, 2273, 2272, 1951, 1820, 1779, 2398}], 
      Line3DBox[{1966, 2447, 2634, 1965, 2558, 2098, 1967, 2559, 2099, 1968, 
       2560, 2100, 1969, 2561, 2101, 1970, 2489, 2562, 2102, 2193, 2690, 2277,
        2278, 2218, 2240, 2353, 2370, 2395}], 
      Line3DBox[{1976, 2108, 2567, 1975, 2107, 2566, 1974, 2106, 2565, 1973, 
       2105, 2564, 1972, 2104, 2563, 1971, 2103, 2718, 2320, 2344, 2343, 2345,
        2698, 2448, 2241, 2219, 2280, 2279, 2298, 1790, 2377}], 
      Line3DBox[{1978, 2449, 2635, 1977, 2450, 2636, 1979, 2568, 2109, 1980, 
       2569, 2110, 1981, 2570, 2111, 1982, 2676, 2156, 2112, 2194, 2691, 2281,
        2157, 2220, 2242, 2360, 2385}], 
      Line3DBox[{1988, 2117, 2575, 1987, 2116, 2574, 1986, 2115, 2573, 1985, 
       2114, 2572, 1984, 2113, 2571, 1983, 2677, 2451, 2321, 2159, 2346, 2196,
        1577, 2243, 2221, 2158, 2282, 2195, 2712, 2378}], 
      Line3DBox[{1990, 2452, 2637, 1989, 2453, 2638, 1991, 2454, 2639, 1992, 
       2576, 2118, 1993, 2577, 2119, 1994, 2678, 2160, 2120, 2197, 2502, 2707,
        2161, 2222, 2244, 2361, 2372, 2390}], 
      Line3DBox[{2000, 2124, 2581, 1999, 2123, 2580, 1998, 2122, 2579, 1997, 
       2121, 2578, 1996, 2640, 2456, 1995, 2680, 2455, 2322, 2163, 2347, 2199,
        2495, 2679, 2245, 2224, 2162, 2283, 2198, 1806, 2507, 995}], 
      Line3DBox[{2002, 2457, 2641, 2001, 2458, 2642, 2003, 2459, 2643, 2004, 
       2460, 2644, 2005, 2582, 2125, 2006, 2681, 2164, 2165, 2007, 2503, 2682,
        2166, 2223, 2167, 2362, 2393}], 
      Line3DBox[{2013, 2127, 2584, 2012, 2126, 2583, 2011, 1433, 2010, 2646, 
       2462, 2009, 2645, 2461, 2008, 2683, 2171, 2323, 2170, 2324, 2325, 2504,
        2708, 2169, 2225, 2168, 2284, 2301, 2722, 2383}], 
      Line3DBox[{2015, 2463, 2647, 2014, 2464, 2648, 2016, 2465, 2649, 2017, 
       2466, 2650, 2018, 2467, 2651, 2019, 2684, 2172, 2173, 2020, 2709, 2285,
        2174, 2226, 2175, 2363, 2286, 2397}], 
      Line3DBox[{2026, 2128, 2585, 2025, 2655, 2471, 2024, 2654, 2470, 2023, 
       2653, 2469, 2022, 2652, 2468, 2021, 1503, 2326, 2178, 2327, 2328, 2692,
        2288, 2177, 2227, 2176, 2287, 2302, 1843, 2376}], 
      Line3DBox[{2040, 2183, 2666, 2492, 2039, 2665, 2479, 2038, 2664, 2478, 
       2037, 2663, 2477, 2036, 2662, 2476, 2035, 2491, 2661, 2329, 2331, 2330,
        2034, 1657, 2294, 2229, 2293, 2292, 2033, 2714, 2380}], 
      Line3DBox[{2130, 2053, 2518, 2481, 1860, 2052, 2517, 1859, 2051, 2516, 
       1858, 2050, 2515, 1857, 2049, 2514, 1856, 2048, 2715, 2303, 2333, 2332,
        2334, 2047, 2693, 2231, 2201, 2249, 2248, 2295, 2719, 2400, 2367, 
       2355, 2381}], 
      Line3DBox[{2181, 2179, 2180, 2685, 2027, 2472, 2656, 2028, 2473, 2657, 
       2029, 2474, 2658, 2030, 2475, 2659, 2031, 2490, 2660, 2182, 2032, 2710,
        2289, 2290, 2228, 2291, 2354, 2387}], 
      Line3DBox[{2382, 2720, 2297, 2275, 2276, 2217, 2239, 2695, 2091, 2342, 
       2340, 2341, 2319, 2717, 2092, 1954, 2553, 2093, 1956, 2554, 2094, 1958,
        2555, 2095, 1960, 2556, 2096, 1962, 2557, 2097, 1964}], 
      Line3DBox[{2392, 2373, 2351, 2270, 2214, 2269, 2694, 2499, 1950, 2155, 
       2627, 2486, 1948, 2626, 2441, 1946, 2625, 2440, 1944, 2624, 2439, 1942,
        2623, 2438, 1938, 2622, 2437, 1940}]}, {}}},
   VertexNormals->CompressedData["
1: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
kNzHvOWuVDWY7J3E1std1t5JMycW2I0uGu7soDx3sgcm1xfOtXQ58RIUWCRT
OHbXwEBA0U/9yGp2NBmtO6aXk4P+3znG6fVxg3rHkd558wlH0H2YTGgwew59
5tqM7GDad3LJDYpdu+TpMXl5U2sMsnu3spYzeg6q/etLv89Bz7nYy+M9em4P
73FMf0IqQxXC5RD/iSaEExWfBYaXtBGOBSy7TiJc5faxYXomfBg4EO7VXpK8
yA+HZfgxeRejfRHy09N1qnXIb1R/1Tx6UYX8um6MfA75We7mKCaXOEkOQjxg
7K10R7z4FjHNwz03+Ncj3gx5vbVBPKLyZ0P0KX/EM6n8JAnEOyrfWvG8sOsH
eYHxB3lhO54XXs3KCyk/yAsr8bzAR80LeJ9wxaw+ITVPSc2yh9oPzMH7gYV4
34Nq5/dT/9NOat+PH+/7xeB9P6r9gNsfhNuvjvf38vD+3iW8v0d9rgT8ubrx
51LD+3gFs/p4U/jz8s96Xup3p9qzvjulxv/Vs+K/Mf68qbOel7p+46z11O82
tWZ9t0nNI+RZeYSKD88sfKjrR2etp/5edRH+feMh/PtGnlnzUql5ltovzZrV
L6WuN56Vv4bw7wDX4d8BUr9boOa1GjyvSeJ5jdpHzZ2FP3VOa92sPGiIvy+k
oeGfO2f8OuEj/t6QGreb5//PuE3lJ+0sflLXC86K81T9/tj1D/3UfvhyXA8D
rscI92827t8y3L83cb/w4X5JxP2iPqv/TOWn2qx+8iSOQ8Ss/rAe3kddMqvf
m4v3aR/P6t/m4HKXWf1Yqp57s/qrE/h9+2b1S5fi/dLaWf3PU3j/0xnvZ9ri
/cxSHAfqfjmM7xfq+3FmnOeaOM/P4jyf/XtqKj+pvwteO4tXb2b9vpX6fdHs
32lSv9dinfV7Q+r3b0tm/W6Out79B98vffrB9zkfZ/0eh/r9SeSs35VQv68g
/uD7gat4Xzcd7+tS+Uatw8vxOjxz1nxqah1O84M6PGVWHX4Er8NpZ9Xhj/E6
XAyvw1fMqsOX4vs9Cq/DLfE6vPz/dPfl4VR2398qZIgUJUNRMpSSVJS4lxJF
IZQiKhTpIREylCmhECXJEBkypwwZSp5kVopIKCIVMkYloV77nH30fs97Hf16
fk9Pz/f9676ude2zz9rrXvuz12ffa6+NcWYFjsP1cRyuiONwURyP3cLxWDyO
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
M/35R+4llN9EvCHnNf2sfWoxnihR4cnP9lPGcTcQ5V+G6jSR8jG1xsj6GOE6
4Rtq/rNOeCSuQ6uB69DewXVoT2IeCpiHDmAeuhp/v1u0lszvGn7A71xwHc5r
uA6nO67DuQPXpZTCdSm/4bqUPzvecLx/YoX3T97j/ZOf7Qdw/UBOXD+QE9cP
pN6X24/35ai/z9rj/XbKd09nvP85A+9//qw+v1redEJEttPADg7wu28N8VkP
82by+6K8rJL5pmYOmivghMkridvbPhKPNALI+U6nHp2/k/2CyF6mX6BxJ5a4
eI8cR5WK1YiJurgRaYr6/u3KqhN48hXfQ/Hqf3kPxd8lX9BQ8iJ2qR3c3SLG
nXZsKxwJf+KHxnt0q4VIzpAEuHK/HDm9hgFu+weSxvspuko1V+8FoeN1aKdE
dCZhXkAer9elHJZPG9yIsydarBmF9SbGK9jje36xFD8h11jJFPz5x/mfPyuf
he+LTKDKsw0IXJn59bAERIdpf/aImglqTeT31SyWnplc8pzwq4s815GXT1hh
/XfRpzTmvHQl7hfYJj6wNZ7QX5+uU6Xfi4/o5faMcdtN95fjK8o9jGxU+bRd
ax9e9RhtJK7Rf2NNUy8iYrD/zPY61bFK15U4nH4rb+0Nswl9auduFraN4CXy
/Uv3Zp77cV7f8nWOxx/udSHinnlUZKRbTvTTNq8tNOE4D6HCuN8mPfB73qxU
1SX2oTnzCBetRVMT9Gf+9niSljze13G6kZQFNFV8lrNnsgJWNvI8fXZB4J2C
4mKQ52VoWTpdDMrxPF2wMFhyj8MTQls5+0CAUN3EPJ2zp2Dn2z/sCJGnbK/Y
Z32/14xO3zG1Qnk2MbbJ2Etb4vffaxZFt76+xvkwONXuSs/nsYYPIeR5OleO
z61XeBHUrTh45ty1JZCL56mWkpR2j0kV0Vkh5Gib/mxinuYeWKxQXHaMeN1T
vId/+vf7yAxqj+dmsHEQn0VOLt/65Mdx9c/KN+N81/NU+a59fZFd558KwKPS
kkM3ecRBE89Tg6shb3rMHhIEb2E/C2fDxDytZ1g8LXXkKPFp5MSwTr7zhP6H
ZhiLmOxnJeYn6elyw1+/v6MR57VaUeW19rvdNud+VEoMLZ4jwKnYODFP/aLz
b4lxmRN0xucW3uH5ft8WQ/BmzXITRkJWyCgm04r3h/ocjgsRUh88SGzfom78
KO17P/E1ISsV1k0h8qVlgwNMv5+L3CF2SPde8ZD89qOirX4Lfv+9VLTkiul3
hA4usYW3yWseKnDuBVDY5djyD8TVtUwf1MVW2cAQi8QB22hj4GTVcUD/25Wb
4XdGaxkk6juI2JrxAdOg16T3uv5qPWnJFXG8zUcVb3MqyxTLj1nDihd3GAPH
TOFGt7o9Gtf50tX8HJFLQR9uCqiUCML1FPK4LBw85Uwt6gle1tcbO/IfESP5
k9+7+rvGS0vO2Bxtv5cuEoT5FflYu0JgbZyqJ7KDyZ3racd8rOCdHK81wWYO
PZUbjiM7LBIzPPLkkhg8nj7M5hYtBM4HyXZIETUtkPKvI7zW2TZ00j0hBrEd
bmoXM150cSI2yDlqyfb/e+9RpSWn99pFfzIoHM7uMmNHT2n7MNI9aLGDKx4k
FlkCxG2sRk+hJ+T766ce1ahUVhABtZisWvSk3F9vqxraWXmolrBwKB1AT8r9
9RdjVeObX9oTRR6+aehJsQ/zgVccV3W4CG2tqHno+bvtQEve2/JwbMNWY5B6
B1dyN9tAv+w/gz+xIiGi9w0MoH9/rGfqOluw5SDjz7OuT2XZyVyQ9ExYeDB7
OUzH+POr9aElNzE2fS1epg173mx3ruiwhamdZDyxt38dVtfACuynNOqdb0jA
DYwnuWBxVTQ8l3iZVTUrfPGLCTyhdX/i7xpXckmN8h8F5jCck3ejWCAWYgPJ
uGHhmXiyuV0Rmng+RLZp2cH6J2TcaHlDr5fOOEp0iFp3GimtmMANX86rTu7F
iYRrrtm3lNQXE7jRriThmnZMg5jiK1jm+n/de7gR7yfMp9pPoKXnbbzPYEF1
302fm/vUcOMYqOL6lNVc4AnKGxcunmy/5T2Ne7hOCDcwcyRHQ7v14TXSveeA
x19OYrJ+EkzoPl+/EwWj8g+0G/YFQqTt5P9LSz5L64My+v0nTdlR1J/bzMn7
acf3SXXg+6TY8X1SjXTFC5DeldczWNE4/Oon15+W3J2H9zKyYw5PCT2yq+wP
7Pmr5ZT65GxU9cl/tp+1NOqHc/iRzyPfwOeR6fB5ZFr9aODzicb4fOJhfD6R
Ul96GlUdbEpdcXaquuLtNOp4/+y4IvD+WOn/8p4aI7yftoXqnhda7bsvNJZU
fa6GpK4rD9Fz0c3Lk9+zhvfHduP9Mfq/eL+GBj4fYYLPR3zE5yOozx1sxucO
qOssrcB1lsLxuX4LfK7/Hj7XP6OckYSD1ySW5SNcrAol4+FWfC57pe1/nsu+
kpTMgeKtlhPmbij+OpBEbm+Hz2m2Up3TNML5exk4f48X5+/R4zw9AufpqeI8
PWucjxeP8/EicT7eeZx354/z7kJw3t3/AdyHRMo=
    "]],
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{322.48696398926137`, 269.9368932416265},
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.11440448467326238`, -2.5149644476483934`, 2.260943484687589},
  
  ViewVertical->{-0.15013705347428655`, 0.6160202191288141, 
   5.162152914265059}]], "Output",
 CellChangeTimes->{
  3.7270169674458647`*^9, {3.727017132888047*^9, 
   3.7270172446103783`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
VX2O8Jy76Bs66vBD+LOv+D/7oJk0\
\>"],ExpressionUUID->"6cbeae14-e71b-4d7d-b446-0f5518dc54fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"bottomFuncMaxwellian", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "1"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<vPar\>\"", ",", "\"\<vPerp\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RB", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbth", ",", 
       SqrtBox[
        RowBox[{"dPhi", "/", "Tm"}]]}], "}"}], ",", "0", ",", "4"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727012339587678*^9, 3.727012342131145*^9}, {3.727012431240834*^9, 
  3.727012534001828*^9}, {3.72701259716241*^9, 3.727012625723126*^9}, {
  3.727012749498288*^9, 3.7270127532250834`*^9}, {3.727013013256352*^9, 
  3.7270130142973824`*^9}, {3.727015507353057*^9, 3.7270155103542643`*^9}, {
  3.727015564434416*^9, 
  3.727015579656803*^9}},ExpressionUUID->"1b37fb4b-bf01-476b-a782-\
5b355a594ea9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`RB$$ = 1000, $CellContext`vbth$$ = 
    Rational[941, 110]^Rational[1, 2], Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`RB$$], 1}, {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {{
       Hold[$CellContext`vbth$$], Rational[941, 110]^Rational[1, 2]}, 0, 4}}, 
    Typeset`size$$ = {600., {301., 305.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$142840$$ = 0, $CellContext`vbth$142841$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`RB$$ = 1, $CellContext`vbth$$ = 
        Rational[941, 110]^Rational[1, 2]}, "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$142840$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$142841$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ContourPlot[
        $CellContext`bottomFuncMaxwellian[$CellContext`vpar, \
$CellContext`vperp, $CellContext`vbth$$, $CellContext`RB$$, 
         1], {$CellContext`vpar, 0, 5}, {$CellContext`vperp, 0, 5}, PlotRange -> 
        Full, FrameLabel -> {"vPar", "vPerp"}, ImageSize -> 600], 
      "Specifications" :> {{{$CellContext`RB$$, 1}, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {{$CellContext`vbth$$, Rational[941, 110]^Rational[1, 2]}, 
         0, 4}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{647., {366., 371.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7270155162527037`*^9, {3.7270155715177383`*^9, 
   3.7270155807752237`*^9}},ExpressionUUID->"57947129-e67e-44c4-8e0c-\
a080b82dbc44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Jim wanted to know why the density is so low for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "B"], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "75aaa064-c4b7-4668-9ddf-b6654091813a"],
 ". Here\[CloseCurlyQuote]s the answer:"
}], "Section",
 CellChangeTimes->{{3.727012949654603*^9, 
  3.727012999408696*^9}},ExpressionUUID->"e07ee6df-3b9f-4a64-a247-\
3b7c283fa534"],

Cell[CellGroupData[{

Cell[TextData[{
 "First, a plot (for dPhi=941 V, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "m"], "=", 
    RowBox[{"110", " ", "eV"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "652ba070-251c-481b-918f-6ba74193c597"],
 "):"
}], "Subsubsection",
 CellChangeTimes->{{3.727013001214625*^9, 3.727013003438697*^9}, {
  3.727013064694264*^9, 
  3.727013077558278*^9}},ExpressionUUID->"7097f877-a17d-4e8f-b194-\
f116e00e414c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"bottomFuncMaxwellian", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "1"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RB", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbth", ",", 
       SqrtBox[
        RowBox[{"dPhi", "/", "Tm"}]]}], "}"}], ",", "0", ",", "4"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727012339587678*^9, 3.727012342131145*^9}, {3.727012431240834*^9, 
  3.727012534001828*^9}, {3.72701259716241*^9, 3.727012625723126*^9}, {
  3.727012749498288*^9, 3.7270127532250834`*^9}, {3.727013013256352*^9, 
  3.7270130142973824`*^9}},ExpressionUUID->"16128b78-8f94-4868-9439-\
e1f43671cdee"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`RB$$ = 50, $CellContext`vbth$$ = 2.7, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`RB$$], 1}, {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {{
       Hold[$CellContext`vbth$$], Rational[941, 110]^Rational[1, 2]}, 0, 4}}, 
    Typeset`size$$ = {600., {233., 238.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$121369$$ = 0, $CellContext`vbth$121370$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`RB$$ = 1, $CellContext`vbth$$ = 
        Rational[941, 110]^Rational[1, 2]}, "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$121369$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$121370$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`bottomFuncMaxwellian[$CellContext`vpar, \
$CellContext`vperp, $CellContext`vbth$$, $CellContext`RB$$, 
         1], {$CellContext`vpar, 0, 5}, {$CellContext`vperp, 0, 5}, PlotRange -> 
        Full, AxesLabel -> Automatic, ImageSize -> 600], 
      "Specifications" :> {{{$CellContext`RB$$, 1}, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {{$CellContext`vbth$$, Rational[941, 110]^Rational[1, 2]}, 
         0, 4}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{647., {299., 304.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.727013015138589*^9, 
  3.72701305072788*^9},ExpressionUUID->"86c4734e-e13c-4edf-b8ff-cc5168a1b30c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now, a NIntegrate over the corresponding region:", "Subsubsection",
 CellChangeTimes->{{3.727013085934367*^9, 
  3.727013097806308*^9}},ExpressionUUID->"a7e3172f-1b24-4419-ad39-\
1b488522c645"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"2", " ", "\[Pi]", " ", "vperp", " ", 
    RowBox[{"bottomFuncMaxwellian", "[", 
     RowBox[{"vpar", ",", "vperp", ",", 
      RowBox[{"vbth", "[", 
       RowBox[{"dPhi", ",", "Tm"}], "]"}], ",", "1", ",", "1"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"vpar", ",", 
     RowBox[{"vbth", "[", 
      RowBox[{"dPhi", ",", "Tm"}], "]"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vperp", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727012846345937*^9, 3.727012891326188*^9}, {
  3.7270129215865297`*^9, 
  3.727012925767714*^9}},ExpressionUUID->"673e1621-bb30-4086-80c0-\
30dbc29053df"],

Cell[BoxData["0.09159041504222797`"], "Output",
 CellChangeTimes->{{3.72701290098068*^9, 
  3.727012926259026*^9}},ExpressionUUID->"dde8b9b5-c87d-4edb-b4f5-\
3daa4b740b0b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare with my analytic expression:", "Subsubsection",
 CellChangeTimes->{{3.727013261516994*^9, 
  3.727013270101235*^9}},ExpressionUUID->"ef4fb595-c4fa-48f9-9044-\
57651376cf30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LKMwellDensFac", "[", 
  RowBox[{
   RowBox[{"dPhi", "/", "Tm"}], ",", "1.000000001"}], "]"}]], "Input",
 CellChangeTimes->{{3.727013312855378*^9, 
  3.727013346957449*^9}},ExpressionUUID->"2d315d4a-f13c-442d-943a-\
bc8b23a60ac8"],

Cell[BoxData["0.09159041918639176`"], "Output",
 CellChangeTimes->{{3.7270133242352543`*^9, 
  3.7270133474292803`*^9}},ExpressionUUID->"0952c927-cbbd-42b8-92f6-\
eb87276b52e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Exactly! So that\[CloseCurlyQuote]s it\[LongDash]very low density. But how \
about a full curve?\
\>", "Subsubsection",
 CellChangeTimes->{{3.727013247013158*^9, 3.7270132533897038`*^9}, {
  3.7270133559485693`*^9, 3.727013363947873*^9}, {3.7270144564067507`*^9, 
  3.7270144619319468`*^9}},ExpressionUUID->"bac963a0-80f0-4e55-96ab-\
9bf37410c839"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"kappaGrate", "[", 
         RowBox[{"RB", ",", 
          RowBox[{"dPhi", "/", "Tm"}], ",", "#"}], "]"}], "+", "0.1"}], ",", 
       RowBox[{"densFacK", "[", 
        RowBox[{
         RowBox[{"dPhi", "/", "Tm"}], ",", "#", ",", "RB"}], "]"}], ",", 
       RowBox[{
        RowBox[{"kappaGrate", "[", 
         RowBox[{"RB", ",", 
          RowBox[{"dPhi", "/", "Tm"}], ",", "#"}], "]"}], "+", "0.1", "-", 
        RowBox[{"densFacK", "[", 
         RowBox[{
          RowBox[{"dPhi", "/", "Tm"}], ",", "#", ",", "RB"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"RB", ",", "1", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Direct Integration (+0.1 for visibility)\>\"", ",", 
        "\"\<Analytic expression\>\"", ",", 
        "\"\<Difference (+0.1 for visibility)\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "StringForm", "[", 
           "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)= \
\!\(\*SubscriptBox[\(R\), \(\[Kappa]\)]\)(\[CapitalDelta]\[CapitalPhi], T, \
\[Kappa], \!\(\*SubscriptBox[\(R\), \(B\)]\))\>\"", "]"}], ",", "\"\<\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "StringForm", "[", 
           "\"\<Mirror Ratio \!\(\*SubscriptBox[\(R\), \(B\)]\)\>\"", "]"}], 
          ",", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\[CapitalDelta]\[CapitalPhi]=`1` V; \!\(\*SubscriptBox[\(T\), \
\(m\)]\)=`2` eV; \!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\)=`3`; \[Kappa]=`4`\>\
\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"dPhi", ",", "nDigitsdPhi"}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"Tm", ",", "nDigitsTm"}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"dPhi", "/", "Tm"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"N", "[", "#", "]"}], ",", "3"}], "]"}]}], "]"}]}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"FontSize", "\[Rule]", "18"}], ")"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "&"}], "[", 
  RowBox[{"23", "/", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.727012846345937*^9, 3.727012891326188*^9}, {
  3.7270129215865297`*^9, 3.727012925767714*^9}, {3.727014464534471*^9, 
  3.727014501740058*^9}, {3.727014535363777*^9, 3.727014704364011*^9}, {
  3.7270175592407103`*^9, 3.727017562254395*^9}, {3.727017638023679*^9, 
  3.727017716669779*^9}, {3.727076624984228*^9, 3.7270768243635197`*^9}, {
  3.727076882146152*^9, 3.72707696460677*^9}, {3.72707710670468*^9, 
  3.727077111358543*^9}, {3.727077228507677*^9, 3.727077234146925*^9}, {
  3.7270774389580717`*^9, 
  3.7270774515317173`*^9}},ExpressionUUID->"54090dd7-6846-40ec-bd7e-\
8dd1fd8c16bc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fRT7f3xgx1E=
          "]]}, Annotation[#, "Charting`Private`Tag$54348#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
esuDTJh5+NzfHXtEVm7kuSMTbKQbvpdia7Ja1e6eY0KFdhb5iAQJqnfvLDyU
z4Q18wztMEkSqI6M9zU+ZMJNb8LvKnbCzUw+3QImKKyHZsRie/cLONCfMIE/
tuZbBjb5fB/ft2ImpCeM7HmBHVQS7nCVy4QOzpXBNWxNjVf8Fd34fgZ5fSFS
uD55Z0dFPhasbLnd4CSN+69fX1TNzwJJBSdfT+y7jqqC9oIs2OhHiPpjp+bO
FKWIsEBQcUQvDDtO85KghBQL6i1vW6ZjR6KcYl46C1xjyo92Y3t5DQuN7WJB
4GS8yD4ZEnyN5jhf02NBLfv8kgX28b8KSv4wYIH/emv/EWzXuSBnVyMW5Fe0
J7tjO4SSSvv2sgBRy5r+jX0gju3y+hAL+sa+qZRgtxZFlfoeZsFOveqqKmyz
rilhYRsWeJnp7a/D5iiUlZrasSDyvqdNOzb601Sk1pkFWWWD28awuS8fuTi5
suDK9+fp09i7x8XLfrmxIK/29PoCtu7mHhddTxbECByv4pElQbmVflnPCRbM
Rj3bIIitHZQlcs6bBdTCT87i2KXJhKuMLwuO9a08ksHeUXGirOgkCyKUeGcV
sP8HSMmfKA==
          "]]}, Annotation[#, "Charting`Private`Tag$54348#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl2Hdczd8bAPDb1O62d12J+laSlcxziBAlhLQ0NJVKkZGEJKESDSEXKRIN
oyGUUko7I9HWkNRNqNvQ75zn9w+v9+t5zrjn85zzOZ9mOvtuc+VlMBhi5B/6
f+r1pJigZedWNds0Zu+7mo90jVwfuWu5I7kZ2854Ef+RPbR0sVYQilt7bokn
sVf5V3MV25PowmV/VQ9im7B//1S0zqL8XdE97sRq0+wsCdtLSOzmKFi88LWT
pFYCcmno76X+q8znLGR7C0VKlnZT93zSkhHWSkO/WqzAXTpPlgnYZqOLXavB
jd0ffgho5aJN3lPfqF/fHr0u+LMQeWIPiH/OFEvjsy1GMk/swXIaOxpNql+j
wXVfIH9r1I3p06gU2SpMgIfeFMuljJWikfg5kH9xqluvNPsNepFrCLZTGjOy
kihDvU95wXqLRdZ88ypDViJe1dTjlqrmgeVlKE0oFlzhbWDNr1WOimI+gjXP
n9CuMa1E2hrutdTB9+v+JnhWI8/iu+D11QWGw9XVSE6gECw9nOJltqAGHYps
B7fKRqfcia9BZvF9MN/7xkdaJ8drkKrKL3CgnYvizj21SPf2GZgfDjXflllS
iy6ma8H6CjaomPLL1qHxirngH13MLkPTOvTiVJIPdd0fgVD7w3XIbHARxJ/N
mFCNTK9D+KgB+LoSJ//Z1zpkHuMCPqXXvbNLoh6dvfwFxjPfUhuzIqAePXGs
h7hiQH5l3Kd6lLHoBfjAJZGkPePvkXBjOOS/y7T1/E+tCbGkbKAeXm6w/rlz
rAUFpuI+eH5+6cavv3cg6QRrsGq2dcjC3V0oNSwQ+nMYFixNefsNyX/5/3xO
SLW62Yd2o/2PQsHs+U+F5Y17kKH+NWifVcyy/XW5B40VZPyhLt56IaNmqAex
q4Yhv1JpzYdCtV6EedUgv6FjdCp9Uy+qkZUCf3yzTfq2cy+yc5QHN99/OOfq
kV4UOUMW3HpRaHlMTC+KUNvsRfdDp7/LlrNpvSjF+7IvdfeuwEy/ol5kYNqw
n7pv5RlJm8+9KPhFpQ/1wKx4X5NfvSjnbZ439ZBwWq2+aB/a6WkxBPvjw9vo
6RV9SOeIM5d68lb/lob9fSi1/wpYaJlBXVBDHxKrlpiCem/wt1Qz+o7q7iVO
Qv15Pa17ffU7+juaADbg5Vp6TH1HHx8F/aVenrSiXtypH1UdSIHnsWFB6NbH
pf3oKycDfCw2atvG7QPoSXj8d+pHv65vb+v4iY5yy8eg/zUmKhrcn2izbzj0
F3/pe6cDcxDxr3ggTc8DkY7o9GTtQcRrfxF8wtDoQOuqQbQsyQnsUXuKx8Fn
EFnG6YEt99fGtFwbRGb3JpnUrAyPzK9jgyjsk7gM9fB3npovO4aQqs5XMerX
2tcGmnOGUEi+uRx1xYIkgZ8zOKjz43556lWncLW+BnFJBTinvueKtxEHLWo+
B/bm5h8WW8NB/VfkwHNmXrTLMOegzVe44PYNjnjzbg5adTEMnOS3UGtgLwcl
ZfuediK2ShQUuuDHQXv7TCAuUfT5h14wB7mFxyXQ9Xjbm1H77iwHVV7hg/gp
ydDH+y6T/ty+wXz/Osw59iCdg0xTf8pS73tUteZHMQeFnPsEtjJXavDicFDU
hLIU9YoBV6d+9WGUtzgY1kNcd/rE92PEiQkC1K3uicl9TcPIUl9CmFr6hP17
Ye8RVOh6bZrOxzReU0Rv+je693p6gjq0PF7rV+RfVMp5BfWWPyaC8uXHkOK2
JAas79aw4da1Y+j61WhwVfrUHf6AMVT60Bzqz3LXsuMKkWPIUVsc6uEDX9BO
3VtjqG731CicBzZyJY8zxpDqlT9gm6zH81bmjSErr5/g64LbrpeVjKEsgVvQ
X6sdR8iyluRP2kfQ/cB6HHXwc/MY+t0XCXFn4bmdzj1jKPHvCXDKnncWA8Nj
KFA8HNz71PP5wakxxFkkME7t7Zx6JUKWi7IkORDnSHT5XNPjoqK2/eAFrieb
tZZwkaKWCzjwucb6R2u4KMZxw1U4D6VePl5iQazpDOa627GKd3ORUGsPOET2
KrfRj4s2R0XcoOYt/tDQc5aLJl1Ck6nXKgQiv8tc9FVO8zF1uI90BjeZixz/
RYPflmQpnk4n4/dMgUWVt5wRe8ZFYeevQn1b+P0cjivmIkaAxFMajyk776BR
zUV7Z73Ng/NKVffdvSbSXnZhPrVswNslC75xUR83K4d6Z4VbyvMhLrL6LA39
X9UQkFo3wUWLvnXbUn89eOd4jeA4kg30tKNWr1rdv0t6HHn8qADfPhxS4vXf
OGIH/ban1p79/PpxPI4CjQYdqL2O7RaesXkciXXeA2fUjx6M2TWOYly1nlEP
asd3KrmMo3vpEWDDkEVb7uwfRxl9A+Cnuv46z86Q8Uriwcs+PeSpuD6O8vL2
5FKbGGo/GawcR2+XHIfft/kc202WO45SHIQLqLf3nMlS15tATJcHz6G+TPaN
69hPIFbT+xdQT8P2GgaHJpDhqpSXUD9sy7ULoyfQ+8B34JTRio9Pr02gwD0L
X8H9w8LE0/jeBKqL0ymi1kktnCh4MoGs9GPAnlOLo1YWTyC/0XEe+nz8bFSa
1o9MoCLjMHheh3MZmttmTyLFQmXYjwUSR5+8nz+JYvTY/NSTriOmu1ZNoqZr
m+bC+fTC+/Nns0nkWDYPfEK2Z5/drkn0VkofzFvSFOPkN4n6JJ3A4f7vnrqd
m0Tt/3L1qFO6HVuit04hRS9BiBfv/sufr/QPMVN/QFzkc1C1f/Q0Yk8lgHUz
Js3iTjFw1q1mTThfXt1mOWUxsJDFT3BIw4a/+q0MXFc1OpNa5qtKh/QfBrb0
PDaL+l734LsxUR7MyJyC/ANe1sX7FHjwmO0r8Mqh4metmjy4Sek8+Hb2ofmJ
Ojw4guUNFgrUy9hqwIPb/0pD/z5G7XNEF/Fg4391GtQNY1dulS7lwWzGxEZq
d16PC+mWPNhSU9wM1k90eVCMO3FcJdipZmh4ow8PTnxfCi6LSfHmC+DBdbUv
wfrbd/cWHubBLCvtJHqfvSQn4XwohMyvYS6MZ5cUtOv7OR6c5S/FgvNfo2Oz
XRwPzstohrjlgrOaOiXk92W2g4+umzs2wuHBOibj6tSVAVsbrKx4ccS8R/D7
lG8fzHiay4sVaz3hvF6Tf1bJ7Tsvbv8oPpvaq+5quLwKH2Y/OqFFHdv7YKRs
Mx/uW2dhQP383wvHoBA+jH8w/18fS6szJSJJvulbXeqigK//7sbx4bdLLoF5
pfam+l/jwxFRQ97UJo9+mK+8xYfbxbrAYZsC/gil8eEN6Wngsr7x6+8z+DDL
LAH8zl5pOV8pH465lr6Puq5hyef5X/gws/iVF/WH9TuDHH+R8UY/eFI3FwbK
RQvzYw/+l5BvN3p67xw5foyV1oHb5l9+/ILFj1nV26E9q1bZ9twcfnwvJb7L
je4/79u8O/RJvlYj9HdHWDedtYAft/NcBn9Lzd46sIQfM89+ubONePbapdzc
lWS8hM23qN06itinTfhxonujB9RjyIYNWzaS8ZoOgb+r1A0pb+HHfsl398P7
fWfbqhwbfpznrAQejBm8uNGNH8eUX/ShHhEQ1z98nB/XeafCeowd1atMvcKP
Q4MQ9Dc1tNHjwwN+bOmj5grr7eohyF/CjzcsM9xBPaM5PGVBM8lX2mpFLbbl
7hqnYZJ/JHY7tare6PdvOwRwu42GG/XcGRsveRQQ7x2ypc5as1CQWyaA/X77
76JeEKJ27FwjiW8XBz/Jn8FRahfARR9nQ/9Gf4b3pg8IYDx383rqZd5lFu8E
BDFDpcgE6qUryXhAXRD7yc4Er7Hx1RQ3FsSGM3aspjatNxEz2CqImdW71sL8
h/JMD+0SxKzP88BvxQxOvrQn+RpC4HO6d54L7hXEWFMS1sNsg+JfCy9B7Mj+
5A73gdO8+9oOCWLLdZ5gi1cDbb6nBXFoWgzkH+DvY1VumIEtNxb4Usdt7HLS
khDChrFPHKGef24u1l4hhP3sQ8D9l56x9LyEMDt6lQ01Y+++Ov2TQphzu2U3
tZwRK9QgkeR3O4CTvMQHBm8I4axf1hjq7eb4rsw7Qjj0kDn4bmNvie99ki+z
Bqwr9GGeYaYQxlVG4MX+mTOyC4Rw3eepVdS4+Vzb/DISzxWB+CaTvbk59ULY
8cIcWL+dGauiF7YIYeZiCfCXdr2JkU4Sd6oeofXtKKfk/qRPCBe9Vv5D3bNR
sDFwkPSn4fGXel/IyKrFv8l8LFLAh3qr5Z9NC2FL7TVc6lDLe4NGosI4JrVt
glrwTJzNKFMY+60xmKI+n3+qLFdeGDMKg/9RMwd9FxxWFcahiu+mqeM17ZON
NYVxUa3kJ1f6Pv4tZbFsKbFzUgd1cVnZ1HJL0r+ndxe16cRjz8kdwjgrQ7Gb
umrerQ+FtsLY8E48E76X90atPu4kjLFxmxR8DyUee7jSncQvactQd/DsPPPy
AIkPSClTD3gZ2qMQYczkWqhQM9A164UJZP4SVSz4PpERtNLOIu3DTeZQ6/b6
bVGpIPNzq9SlXvX8i5lkpzDmzPlgRL0t2tSUb4LMt3jWCmp3l+zVozIiGMd5
rYbv6SWqK3/oi+Ai0fumcD8SPWvctk4E111zMYf3e9vwwkYHEZylFrsN7reP
7eaVB4ngUPbGXfD96bHEgD9EBFtGXbKmLlWTnrs6TASzew/C+7KiYUAvJFIE
x0i66VPXnC3XfR4jgtuTdsD53DQcrLP4BsmProDzu9N2wZzM+yKYaXHXkFqU
X0gt4YsI5txoNKZelNEic0JcFDPsviHq0Ur7dVpKophTdwbqqeB7y6EKLVGc
VaYF+1eFe0Pyuq4odmSpb6MOFnK4t99QFNfNc18H930F9dWrjUSx4bcWMNJu
/SyzQhSzPt7qomYbJR/oWS2Ki37WgHlNHUTz14vi9lSN+/R+7bJDPeW8OfGm
Zd9ovHRv6wqH7WT8p8XgOYHJHwx3i2Jm5fpu6rOnHfbz7SHz1UyG9n2x6jM+
7hXF+OT6VGqz260373mJYrbD3bvUGdnJxsf8SH66gDl8rxQ71JsfEsWWfM6W
1Pvr1L1YwWS+P06I0/y6tlbekZNkPkeCBahj/zksSrxIvMtfmHqHWpvryqtk
PXbqCFI327S9PZtF+vNeOYPaMbFNr6Gc/N6OZmh/KKo9d0JLDMe8c+KnvhDW
YTL7lBi2lJ01Tcdnlib8cromhllhVSI0HsdncSv5iRguumwC41nPuj+2olgM
O84NFaJWNuG3/FIthvHRFzDeREP2Md33Yrhu3xZt6q/Oe9KONIthxpX3c6hf
/BJrfNsuhpnTu8HJpwr+KfSKYU5m22zqNB5tu0tK4pgtaTWTOiv0cr7IZnHM
uD2gTr2oaKPHeldx3J6Vp0qdPz0tHxYiji0jzitTB2vY7tc8L46Zvw7KUK9C
z94UJRDz7ZWm1qh1GZZMFseGqV+kqBl7pNT2pIhjv0LJpdQdgy83PEon47km
G1O/DvEOnMoitpwLrppqqj/UJY5jkh4uov4QvG4eR04Cs61F4feot63fGLJe
Alvqf9ek9lht5iJ2RAK3x9bA77t4YJNf4yUJzBjcoEWdc2fz8aR0CRx6nA35
E0MXcFUW8R0MXruimu/fM9KerwPWIypCvHzeCzKeT2AYfV6f3ptHOpVIYL9H
O8BePjXMN7USOMZHETwpsCVB56sENqz6epQ6pnL7u7VIEsfYnIiknhVtPe14
WxJzmnAQvO8Wh9jp3CPxr7PA+7/eyR96KImZY4JgmdMV8rmPJTF7bv8h6rz/
hgJC8iUxy8gS6ocvaJmB+BtJjG1f/IP3X+mZvmt1JL5SD/zNQdU+v1cSt88X
noL7Izen/uM/Mr5I/wS186zpNwsEmBifswULVWrNGhdh4pjn1ePUtjdy61vE
Sbzx00HqR35mocVMJvbb/xzMWNticFeGiZnKN8HbFfxaIuSZuK7zFDh57/ME
BU0mLrINC4D7UbbgttS5pP/zP8FyvQuXd9gycdYqeyfq1apOWqqRpL+qy2Cv
HeMpywuZ2LBkrQv1lajLs20HmdixotyZ+mW5fupRlhRmKhVDf32MsjlJ26Sw
o0wirNeg4D0LhpcU5tQ/h/X8LRZ5yO2kFLnPlx+mfmoevnx7mBRulzaJ9oD9
Sj5OzkrhrEhLsFFtyBv9SCnMfmYPHpU8Fql0UQqzkrzAhy8FyI7ESmHsexo8
Lu2dXJVI+hO5Bp6Ss885kSKFi7LLwAwli7IFWWS+mT/BYrOl5adbyXzl5S9S
K8z/6PpOXBq361qBsyQjQy56SmPHnGXnqTcOrkzY8obYov8UnL/vK1qbdWQw
Ps97gjrg+Y45bhdksOPN48epI9Vr9ty8Q3xaBsw+aXq1qUAGhzYcgfrUe8xr
dLBMBhfttAQ/+/ayQaqB9Bc+Gxw8pTqz/ZMMZtyRBK+WP+b7qIU4iHuEOkUz
PT6uXQazTjPX0fe34LzPL4K7ZHB7HgvsuVyo26WHjH+m7za839cvEdv0nYw/
MgqeZ+W2cMEAGb97xh3qWMc4G6Uh0t5dEfzbu/Qk4xcZb1+iKfWuIyP3en/L
YLZlOrjgjGZdzSjp71UhWDV26+jTcTJeXi34RHKo+o0p4tlHYb6d6Znrwhiy
uF17P9jn675OlpgsLjpmAb9vTFznxAsFWYwlFMAS/uy8vwaymJ1zF/Jnv1f8
Nc9UFodue3MS7r9L1wfZ7pHFrJl8YMvkg5Phh0m8FYXC90qd2CvVM8TtLfB8
XPlSTuZcIv1nHQOnXx9ynkog8YP28P3CWbx87YZkWczoTfenjuXteOJzi8xv
OAq8uDZ89uUU0v7PAXDTNf34vDTSPi2pBva3R4NgazrxWDBY4JpnRUAumb+f
IDimmnFBuJRYPKYa7vtJqZMG5bLY0XoTvG8/uG32saok7ZW7w6G+F/5qOVJN
xpczACszEi1u1hErTZyhdrzaNa//I1lP3zjw3QXzpBa3kPnPMgQXJNjHO/4l
+Q7Jp6nrJs+rXJCUw+wjeyOol6eHdI5iOYw7Cs9Sp+7yv+9yQA47jiyD/Sst
sNev9o4cZuzUCKY+nrNzyfIPJF/1CnwvKT6+5OI9Xx4z/ERgf+c8roq+cVEe
O+rEwvpuLGzrTxiWxyz3d/B82kt/rYvdoYDxYg84jyVU09asCFPARcJ5MP7y
AFvUk6OA2x+VwPxZ/4ZDnucRN4aCBc9FvIx5SbxmFfhIzXaHY8WkvZgaeEBG
459rKYkfTL9BvWd3/w3LcgXMQqfADclPVy6vVMChs2zAN550FnZ/IPlmBdep
PSolV8R0kPy/yuDpP57LuscUMOOtWjJ1/MxS42VMRcwwq4b4gXjrB7n7FMn3
a1UC9RbRn2qLyxVx0T6dWOrCjXf2N42R+PUncN7oROx+dUxXCTOStsP5UqJw
9vI3IyVSzy8vUDukPXE3N1HCeKEuWN/3Xf3JjUqkftrh/OEadS5/tkWJ3OcT
wO1JP/3qtpH46wPgsn9jd/t3KGHHVbK91A+d+b/w7yY2HOqB87tMkqlhR/KD
KsGV3V55nEASD06F+x1DoMzx9UUynw1noR4t5NNCpQuJrYM7qa9rR7Cd+4kb
TrZTZxuH317/k8yn1BlctjEsRZ9Dfl+1CfiLzalUqRGSf14LzNkXeu/vHzL+
aWt4XytHBWcUTShhVqcK2CTrcFYkjzLGS9ugXuN/++WpiytjVpQexPuNPYty
FIlP5EA8tnh3XfM8Zdy+tQTO46VmZu2865Ux44Ee+EK0mkTMdmVclJ/x//p7
z1mu5kj6v2wAjgxqbnBxU8bs8SE4LxYql3qmeyuT8ysbHPHD+Gm1L+nvZSz4
a+FDxvABEhcK6aeeH6W5WfYQaf98ETh8T0LCkiMkPvjjOzy//pUjW2OVceh/
D+B5NAR+s/B+QMY/FQjrPbsgN5ibS9xoB+t9eDoyPbyU5K/cAPd1zduBq6sr
Sf/bXsL6v1vr0CRTT+aTuRjMkm+cteQ9yTce7qAO7F3va/OJjG//EFyRV1hw
vJmsz33uCrivRc4XvNVC2ls9Bb/VV7nR20XaX54L9q/lX2TQT/I1U5dTl7GP
nNj6k4z/1BmsfGCwMpBD1l+OBfY1cZFPHCHtS5NhvqWyTU7P/5L8l7vBCjYP
ojfwqWBGtinM1+tmyIsPkirkPm0E8yvz3V+Z6KOC8eCVz9SzsMMn23ckP967
gbrNJ65r0WlVXBQ18QbOM7Fzif09qhjPnnoF9fwg2JxtpoaLPI8VUHeZzxzV
PqKG2z8y8+B85bxhZ6apYazbmk59KtbLbMlHkm/ie4+6fpHk75f86piRpZBK
7X3S8FCCpzp2vGR9C86bmq1jvjXqmOV7Gva7ZkfyiP98DVJftxOpV/3+MRhw
RQOHFsjHUas/jIqo5Whg9pA07P/pHMVLcXNYmD3f4v/3GZclJcmIhUNTe2D/
+8js/JNmzcKM8Auw3yP2uUbpu7Kwo1sf7OeUkkDtbH8Wxl0YnOM7GTASRPqT
HoHzs0glrGhxCOlPIR1cPlzes/MkaT8VDK4pFxU/HMYi7/ed4PqcuWyhcJJv
uhL8/saWhVfPkv5d9cFNEf5l/50jcTXbrbB/Ay7vLogk/cVagvXSJi4cySfj
b9kG32/Hml2KjPuIq9y2UIsNO2WJyc/Eob/ZFnBezHBkt5vMxEXJpfD9p6dZ
qX31IIl3qYELVizK3Jo2EzOMrDdDXLdCIPfDTMxumQe+ruBgp8qviUOv5m6i
dnfvFOpdQnxTHbwg1+1p9j7ihVnw997/AfvsYJI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$54348#3"]& ]}}, {}, {}}, {
    FrameStyle -> (FontSize -> 18), Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0, 0.07752729068675812}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.8796613004033026`*^-7, 9.210340184010054}, {
        0.07752729068675812, 2.4848121578869624`}}, {{1.8796613004033026`*^-7,
         9.210340184010054}, {0.07752729068675812, 2.4848121578869624`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.07752729068675812}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         InterpretationBox[
         "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)= \
\\!\\(\\*SubscriptBox[\\(R\\), \
\\(\[Kappa]\\)]\\)(\[CapitalDelta]\[CapitalPhi], T, \[Kappa], \
\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\))\"", 
          StringForm[
          "n/\!\(\*SubscriptBox[\(n\), \(0\)]\)= \!\(\*SubscriptBox[\(R\), \(\
\[Kappa]\)]\)(\[CapitalDelta]\[CapitalPhi], T, \[Kappa], \
\!\(\*SubscriptBox[\(R\), \(B\)]\))"], Editable -> False], TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
         InterpretationBox[
         "\"Mirror Ratio \\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\)\"", 
          StringForm["Mirror Ratio \!\(\*SubscriptBox[\(R\), \(B\)]\)"], 
          Editable -> False], TraditionalForm], 
        FormBox[
         InterpretationBox[
         "\"\[CapitalDelta]\[CapitalPhi]=\\!\\(\\*FormBox[\\\"\\\\\\\"941\\\\\
\\\"\\\", TraditionalForm]\\) V; \\!\\(\\*SubscriptBox[\\(T\\), \
\\(m\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"110\\\\\\\"\\\", TraditionalForm]\\) \
eV; \\!\\(\\*OverscriptBox[\\(\[Phi]\\), \
\\(_\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"8.6\\\\\\\"\\\", \
TraditionalForm]\\); \[Kappa]=\\!\\(\\*FormBox[\\\"\\\\\\\"2.3\\\\\\\"\\\", \
TraditionalForm]\\)\"", 
          StringForm[
          "\[CapitalDelta]\[CapitalPhi]=`1` V; \!\(\*SubscriptBox[\(T\), \
\(m\)]\)=`2` eV; \!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\)=`3`; \[Kappa]=`4`", 
           
           NumberForm[941, 3], 
           NumberForm[110, 3], 
           NumberForm[8.554545454545455, {3, 1}], 
           NumberForm[2.3, 3]], Editable -> False], TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Direct Integration (+0.1 for visibility)\"", 
       "\"Analytic expression\"", "\"Difference (+0.1 for visibility)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.727077474498918*^9},ExpressionUUID->"4b39f6b8-b03c-4306-ad64-\
8e5ac5892be9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"kappaGrate", "[", 
         RowBox[{"RB", ",", 
          RowBox[{"dPhi", "/", "Tm"}], ",", "#"}], "]"}], "+", "0.1"}], ",", 
       RowBox[{"densFacK", "[", 
        RowBox[{
         RowBox[{"dPhi", "/", "Tm"}], ",", "#", ",", "RB"}], "]"}], ",", 
       RowBox[{
        RowBox[{"kappaGrate", "[", 
         RowBox[{"RB", ",", 
          RowBox[{"dPhi", "/", "Tm"}], ",", "#"}], "]"}], "+", "0.1", "-", 
        RowBox[{"densFacK", "[", 
         RowBox[{
          RowBox[{"dPhi", "/", "Tm"}], ",", "#", ",", "RB"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"RB", ",", "1", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Direct Integration (+0.1 for visibility)\>\"", ",", 
        "\"\<Analytic expression\>\"", ",", 
        "\"\<Difference (+0.1 for visibility)\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "StringForm", "[", 
           "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)= \
\!\(\*SubscriptBox[\(R\), \(\[Kappa]\)]\)(\[CapitalDelta]\[CapitalPhi], T, \
\[Kappa], \!\(\*SubscriptBox[\(R\), \(B\)]\))\>\"", "]"}], ",", "\"\<\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "StringForm", "[", 
           "\"\<Mirror Ratio \!\(\*SubscriptBox[\(R\), \(B\)]\)\>\"", "]"}], 
          ",", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\[CapitalDelta]\[CapitalPhi]=`1` V; \!\(\*SubscriptBox[\(T\), \
\(m\)]\)=`2` eV; \!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\)=`3`; \[Kappa]=`4`\>\
\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"dPhi", ",", "nDigitsdPhi"}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"Tm", ",", "nDigitsTm"}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"dPhi", "/", "Tm"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"N", "[", "#", "]"}], ",", "3"}], "]"}]}], "]"}]}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"FontSize", "\[Rule]", "18"}], ")"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "&"}], "[", 
  RowBox[{"91", "/", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.727012846345937*^9, 3.727012891326188*^9}, {
  3.7270129215865297`*^9, 3.727012925767714*^9}, {3.727014464534471*^9, 
  3.727014501740058*^9}, {3.727014535363777*^9, 3.727014704364011*^9}, {
  3.7270175592407103`*^9, 3.727017562254395*^9}, {3.727017638023679*^9, 
  3.727017716669779*^9}, {3.727076624984228*^9, 3.7270768243635197`*^9}, {
  3.727076882146152*^9, 3.72707696460677*^9}, {3.72707710670468*^9, 
  3.727077111358543*^9}, {3.727077228507677*^9, 3.727077234146925*^9}, {
  3.7270774389580717`*^9, 3.7270774515317173`*^9}, {3.727077512054183*^9, 
  3.7270775155254602`*^9}},ExpressionUUID->"333f6b4d-2ee4-4925-9448-\
546b8b98a3df"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$123405#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$123405#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
aVYJYvgiAu3HVkHQjp9DgiTTk9GfmTaV8WzglCDZ3t1Yn+x1cSwz4Ib1Q5PM
eMLO7XaUF9afH8V6ST01TzhihQQhUhqYXyjpWNemCUqQqPc2qD+5PtaTtSIw
H7sP8x+abwZ9SAzm06qRXgEhoxYWSQnSb/oU67WlebN+NGnAd28A8zlWw5Q1
mjIwz+OD8W12bNdby9Wwv9sD8+GJixMXTq+VIIHvtuL94mfZm8qxChKEESqN
8el9tU5/7gYJUnFbD9e/YXyObN0E9ISZ4Xl6+e+KxrctMDZuw3FVvMrXpRoS
pDVoGPkv3vI+bo02wM9ZhOcruyNk205dWH/1BuavDzzW/3TcBvJSs0B93OZ5
kxS8E+h7OIH94uuP/Pcl60sQ95RXaP/F00L14fskCP0GF8b39zo5eh6GQG/X
LXwfwxax55mlMczbaaH9re74uEXPDOYj8gqY/icwV94S+OGew/Pq6SK6nv8g
6KPKBM/zjdz8tL+2/+lXA+NB2ZyB9LAdyI/lO+pnYMfXxJeOMD/uhvUGx7Xz
wgXOAJ+yFv332l6J6NtuwL/oGMYnQ5ki7tBjMH9jNcrf+4RR2HF3wF8mhvdp
8cVji8xPAryTzzG+lbOF+eucAn5py9Ceh/ZJ/ZbzBfy587j+1KmIgYYLIJ+1
SzF+cCVNNh2JAnlqOmJ8UvwaucMkBvAHXOr4b2yycXWlZhzgv5eP9uF7tkpD
5pYEYfkkgPnZnRcHC5clwvqx25hvVC//rfTrDsjDng3zzS/W1x69TwH9BDPv
O5Y9WCv74p4EmbiejudTeaI2OSsN5msuYT5grs4Qu5kB83f58P7T/8Kf2MDH
oI8kJ7T/lJbrfK7ZEkRJwx/fD9eJKF46kAf8jQYx7wvsG9jVC2FMO4z5Jt9j
h0DpYpBPsDnu3/z73x+uMuA/iRXji5XuTe/Jchg/FcT8/9wl5YneSpDvIU3m
ffybl241NUDfgbsYDxsknT9mvoD1lwpRP99cFzFiG2F9KfP7Mvz5CT1nmwH/
15doH6rzm00PtwI/QjLYL7PZ1frK4DXIryEa358FR7vpb+kEfRUGYn6a1kep
lewGfElxzPxXNklnSR+st5rD9xY/3NVKJt6DfH160b8Llb7e1D0A+4170D9p
sB/PqhwGfa1lYP3O2L9EPuMzrCfGeJ8Uciv1XvQIrLe4hfE+Y0hT0m8czpdU
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$123405#3"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0, 0.08988844004768946}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.8796613004033026`*^-7, 9.210340184010054}, {
        0.08988844004768946, 1.9187509708436246`}}, {{1.8796613004033026`*^-7,
         9.210340184010054}, {0.08988844004768946, 1.9187509708436246`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.08988844004768946}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         InterpretationBox[
         "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)= \
\\!\\(\\*SubscriptBox[\\(R\\), \
\\(\[Kappa]\\)]\\)(\[CapitalDelta]\[CapitalPhi], T, \[Kappa], \
\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\))\"", 
          StringForm[
          "n/\!\(\*SubscriptBox[\(n\), \(0\)]\)= \!\(\*SubscriptBox[\(R\), \(\
\[Kappa]\)]\)(\[CapitalDelta]\[CapitalPhi], T, \[Kappa], \
\!\(\*SubscriptBox[\(R\), \(B\)]\))"], Editable -> False], TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
         InterpretationBox[
         "\"Mirror Ratio \\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\)\"", 
          StringForm["Mirror Ratio \!\(\*SubscriptBox[\(R\), \(B\)]\)"], 
          Editable -> False], TraditionalForm], 
        FormBox[
         InterpretationBox[
         "\"\[CapitalDelta]\[CapitalPhi]=\\!\\(\\*FormBox[\\\"\\\\\\\"941\\\\\
\\\"\\\", TraditionalForm]\\) V; \\!\\(\\*SubscriptBox[\\(T\\), \
\\(m\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"110\\\\\\\"\\\", TraditionalForm]\\) \
eV; \\!\\(\\*OverscriptBox[\\(\[Phi]\\), \
\\(_\\)]\\)=\\!\\(\\*FormBox[\\\"\\\\\\\"8.6\\\\\\\"\\\", \
TraditionalForm]\\); \[Kappa]=\\!\\(\\*FormBox[\\\"\\\\\\\"9.1\\\\\\\"\\\", \
TraditionalForm]\\)\"", 
          StringForm[
          "\[CapitalDelta]\[CapitalPhi]=`1` V; \!\(\*SubscriptBox[\(T\), \
\(m\)]\)=`2` eV; \!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\)=`3`; \[Kappa]=`4`", 
           
           NumberForm[941, 3], 
           NumberForm[110, 3], 
           NumberForm[8.554545454545455, {3, 1}], 
           NumberForm[9.1, 3]], Editable -> False], TraditionalForm]}}, 
     FrameStyle -> (FontSize -> 18), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Direct Integration (+0.1 for visibility)\"", 
       "\"Analytic expression\"", "\"Difference (+0.1 for visibility)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.72707800025832*^9},ExpressionUUID->"8bc92b25-30f7-4d96-a72e-107b8bb7fd3d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 873},
WindowMargins->{{11, Automatic}, {Automatic, 64}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 405, 8, 31, "Input",ExpressionUUID->"49cbe70a-4516-402d-896d-ef6ce52ce651"],
Cell[966, 30, 360, 10, 35, "Input",ExpressionUUID->"c7a9c9c6-ff8c-4ed6-ba7d-fe0e29bc9316"],
Cell[1329, 42, 390, 11, 49, "Input",ExpressionUUID->"b66a2800-d344-49be-b0de-7e9e86e20b2e"],
Cell[1722, 55, 2419, 47, 76, "Input",ExpressionUUID->"756c101e-4d24-4f1c-b120-e771448d347f"],
Cell[4144, 104, 505, 13, 78, "Input",ExpressionUUID->"07a1f08c-1ba2-478b-ab62-2c05df49a319"],
Cell[4652, 119, 250, 6, 35, "Text",ExpressionUUID->"35b16499-52f1-4f0a-80c9-710f98ca3eac"],
Cell[4905, 127, 5529, 155, 344, "Input",ExpressionUUID->"b467cfec-e009-48ea-b845-3b6cb9815b84"],
Cell[CellGroupData[{
Cell[10459, 286, 179, 3, 68, "Section",ExpressionUUID->"3d940f35-0a19-456e-9705-6a6ddd5b94be"],
Cell[CellGroupData[{
Cell[10663, 293, 177, 3, 45, "Subsubsection",ExpressionUUID->"52b3d36f-2342-4c3d-ae1f-14df4a3e6a11"],
Cell[10843, 298, 1309, 37, 39, "Input",ExpressionUUID->"a71ce8ea-8cc8-4e56-be4b-fb05712b173b"],
Cell[12155, 337, 1342, 37, 39, "Input",ExpressionUUID->"06537277-f2ca-415d-9771-a6f6e0ec9b8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13534, 379, 227, 4, 45, "Subsubsection",ExpressionUUID->"1acf9a4f-3308-4b59-b587-9c66c1d00e16"],
Cell[13764, 385, 480, 12, 35, "Text",ExpressionUUID->"0e3d5792-8339-4c21-87d9-41a299c5a98a"],
Cell[14247, 399, 1080, 26, 51, "Input",ExpressionUUID->"f11ac1e6-c202-4569-8607-1e9394d1013d"],
Cell[15330, 427, 1987, 53, 71, "Input",ExpressionUUID->"4a36f1f1-8209-4d43-afdc-1206beccf092"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17366, 486, 195, 3, 68, "Section",ExpressionUUID->"76a2b838-74a9-4437-804c-c25b5a01a22d"],
Cell[17564, 491, 1502, 40, 49, "Input",ExpressionUUID->"b3912a18-34f5-4f92-a9cd-3f47be8a96e4"],
Cell[19069, 533, 1445, 42, 57, "Input",ExpressionUUID->"4121babf-df66-4b76-94e4-55c95cf693d1"],
Cell[20517, 577, 1474, 41, 49, "Input",ExpressionUUID->"25d0f953-9dc7-4b9a-9541-84a482e191b1"],
Cell[21994, 620, 1442, 42, 57, "Input",ExpressionUUID->"d25fd375-ba7d-46fd-a9de-e41376e29ac1"],
Cell[23439, 664, 785, 22, 51, "Input",ExpressionUUID->"88dc8254-a8d1-444c-92a6-d51d2203e9ee"],
Cell[24227, 688, 1495, 46, 71, "Input",ExpressionUUID->"d392b517-e0a1-4762-9652-e425727d49e6"],
Cell[25725, 736, 988, 27, 54, "Input",ExpressionUUID->"099d400d-e923-4b54-9e2b-7dd37fe1d909"],
Cell[26716, 765, 1904, 56, 95, "Input",ExpressionUUID->"57931a78-324a-453a-aac6-9a9cf86f617e"],
Cell[28623, 823, 1907, 54, 95, "Input",ExpressionUUID->"c96f676e-8dc1-4a14-b7e3-aefa7b218dff"],
Cell[CellGroupData[{
Cell[30555, 881, 816, 23, 31, "Input",ExpressionUUID->"cac0b021-3838-4ea6-88f8-f43e39227c61"],
Cell[31374, 906, 930, 27, 35, "Output",ExpressionUUID->"e248f70a-624e-468b-859d-5d9e9657b28e"]
}, Open  ]],
Cell[32319, 936, 145, 3, 31, "Input",ExpressionUUID->"d89ac753-5349-40a1-b551-73e116502899"],
Cell[CellGroupData[{
Cell[32489, 943, 548, 17, 56, "Input",ExpressionUUID->"70bc732d-2b6e-4799-aa52-148987e8f925"],
Cell[33040, 962, 267, 6, 41, "Output",ExpressionUUID->"d9d394b4-d917-4798-b4c4-907100795c44"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33356, 974, 200, 3, 65, "Subchapter",ExpressionUUID->"661d6aa1-8ee8-418f-8bfa-e9f0ec18a57e"],
Cell[33559, 979, 1059, 17, 31, "Input",ExpressionUUID->"55dd7c0b-938a-4ae8-8938-67666e700916"],
Cell[CellGroupData[{
Cell[34643, 1000, 3254, 83, 155, "Input",ExpressionUUID->"9c8b10aa-5a23-40d4-8a7e-90a5cb0fb9ae"],
Cell[37900, 1085, 66013, 1233, 623, "Output",ExpressionUUID->"bbb2bdf9-2d27-4f68-a8bb-e6d6234e4e59"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103962, 2324, 166, 3, 69, "Chapter",ExpressionUUID->"17cafd48-d0cb-4889-8832-2c2fe6b983da"],
Cell[CellGroupData[{
Cell[104153, 2331, 294, 7, 45, "Subsubsection",ExpressionUUID->"63bd1928-ed34-49b7-9c1c-b130a3e66040"],
Cell[CellGroupData[{
Cell[104472, 2342, 1653, 38, 55, "Input",ExpressionUUID->"6a4a38c0-6d14-423c-b67c-85c7be772747"],
Cell[106128, 2382, 3112, 58, 722, "Output",ExpressionUUID->"376ecdf2-d0ef-46c0-8010-65bb46fe3664"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109289, 2446, 459, 13, 45, "Subsubsection",ExpressionUUID->"f6f091a7-07f0-4a23-b1a3-55b62f257f9c"],
Cell[CellGroupData[{
Cell[109773, 2463, 2042, 48, 71, "Input",ExpressionUUID->"3bdd0c4d-7f81-49ea-b84d-5eea8b80a31c"],
Cell[111818, 2513, 2934, 55, 654, "Output",ExpressionUUID->"e76e62f4-82a4-4cf4-9116-47a034031ce3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114801, 2574, 173, 3, 45, "Subsubsection",ExpressionUUID->"a88ea384-5020-44bc-8cb2-b732d9cfb428"],
Cell[CellGroupData[{
Cell[114999, 2581, 1031, 27, 50, "Input",ExpressionUUID->"7e5ceeb3-796f-4ca1-b84e-0ada09375809"],
Cell[116033, 2610, 165618, 2709, 287, 131341, 2146, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6cbeae14-e71b-4d7d-b446-0f5518dc54fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281688, 5324, 1964, 45, 71, "Input",ExpressionUUID->"1b37fb4b-bf01-476b-a782-5b355a594ea9"],
Cell[283655, 5371, 2547, 49, 756, "Output",ExpressionUUID->"57947129-e67e-44c4-8e0c-a080b82dbc44"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[286251, 5426, 440, 12, 68, "Section",ExpressionUUID->"e07ee6df-3b9f-4a64-a247-3b7c283fa534"],
Cell[CellGroupData[{
Cell[286716, 5442, 470, 14, 45, "Subsubsection",ExpressionUUID->"7097f877-a17d-4e8f-b194-f116e00e414c"],
Cell[CellGroupData[{
Cell[287211, 5460, 1788, 41, 71, "Input",ExpressionUUID->"16128b78-8f94-4868-9439-e1f43671cdee"],
Cell[289002, 5503, 2459, 46, 622, "Output",ExpressionUUID->"86c4734e-e13c-4edf-b8ff-cc5168a1b30c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[291510, 5555, 199, 3, 45, "Subsubsection",ExpressionUUID->"a7e3172f-1b24-4419-ad39-1b488522c645"],
Cell[CellGroupData[{
Cell[291734, 5562, 694, 17, 31, "Input",ExpressionUUID->"673e1621-bb30-4086-80c0-30dbc29053df"],
Cell[292431, 5581, 172, 3, 35, "Output",ExpressionUUID->"dde8b9b5-c87d-4edb-b4f5-3daa4b740b0b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292652, 5590, 187, 3, 45, "Subsubsection",ExpressionUUID->"ef4fb595-c4fa-48f9-9044-57651376cf30"],
Cell[CellGroupData[{
Cell[292864, 5597, 254, 6, 31, "Input",ExpressionUUID->"2d315d4a-f13c-442d-943a-bc8b23a60ac8"],
Cell[293121, 5605, 177, 3, 35, "Output",ExpressionUUID->"0952c927-cbbd-42b8-92f6-eb87276b52e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293347, 5614, 358, 7, 45, "Subsubsection",ExpressionUUID->"bac963a0-80f0-4e55-96ab-9bf37410c839"],
Cell[CellGroupData[{
Cell[293730, 5625, 3408, 82, 132, "Input",ExpressionUUID->"54090dd7-6846-40ec-bd7e-8dd1fd8c16bc"],
Cell[297141, 5709, 35350, 656, 551, "Output",ExpressionUUID->"4b39f6b8-b03c-4306-ad64-8e5ac5892be9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332528, 6370, 3456, 82, 132, "Input",ExpressionUUID->"333f6b4d-2ee4-4925-9448-546b8b98a3df"],
Cell[335987, 6454, 68161, 1193, 551, "Output",ExpressionUUID->"8bc92b25-30f7-4d96-a72e-107b8bb7fd3d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

