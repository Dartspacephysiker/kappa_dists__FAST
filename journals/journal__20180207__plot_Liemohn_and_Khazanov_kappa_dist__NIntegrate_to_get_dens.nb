(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    310822,       5900]
NotebookOptionsPosition[    304070,       5778]
NotebookOutlinePosition[    304408,       5793]
CellTagsIndexPosition[    304365,       5790]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"dPhi", "=", "941"}], ";", 
  RowBox[{"Tm", "=", "110"}], ";"}]], "Input",
 CellChangeTimes->{{3.725903540016737*^9, 3.725903563142338*^9}, {
   3.725903608132614*^9, 3.725903613829091*^9}, {3.725907305186077*^9, 
   3.725907310171151*^9}, {3.7259090777546053`*^9, 3.725909105179192*^9}, 
   3.727006707648427*^9},ExpressionUUID->"49cbe70a-4516-402d-896d-\
ef6ce52ce651"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vbth", "[", 
    RowBox[{"deltaPhi_", ",", "T_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"deltaPhi", "/", "T"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7259596304842663`*^9, 3.7259596587018013`*^9}, {
  3.7259597318165894`*^9, 
  3.725959737072957*^9}},ExpressionUUID->"c7a9c9c6-ff8c-4ed6-ba7d-\
fe0e29bc9316"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normFacMaxwellian", "[", 
   RowBox[{"T_", ",", "kappa_"}], "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["m", 
     RowBox[{"2", " ", "\[Pi]", " ", "T", " "}]], ")"}], 
   RowBox[{"3", "/", "2"}]]}]], "Input",
 CellChangeTimes->{{3.727006421857926*^9, 
  3.727006433161503*^9}},ExpressionUUID->"b66a2800-d344-49be-b0de-\
7e9e86e20b2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"normFacKappa", "[", 
   RowBox[{"T_", ",", "kappa_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["m", 
      RowBox[{"2", " ", "\[Pi]", " ", "T", " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "-", " ", 
         FractionBox["3", 
          RowBox[{"2", " ", "kappa"}]]}], ")"}]}]], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.725903233978291*^9, 3.725903234529202*^9}, {
   3.72590329933727*^9, 3.7259033744662123`*^9}, {3.725903425315297*^9, 
   3.72590345391444*^9}, 3.7259035095889387`*^9, {3.7259042736930733`*^9, 
   3.72590438528347*^9}, {3.725904585712357*^9, 3.725904602375341*^9}, {
   3.7259046524478083`*^9, 3.725904655802013*^9}, {3.7259049470602913`*^9, 
   3.725904955299295*^9}, {3.7259054650727663`*^9, 3.725905473267367*^9}, 
   3.72590560841838*^9, {3.725905652122993*^9, 3.725905672842835*^9}, {
   3.725905723547326*^9, 3.725905730566146*^9}, {3.7259089678981647`*^9, 
   3.7259089691700897`*^9}, {3.725908999721383*^9, 3.725909039251156*^9}, {
   3.72595591440261*^9, 3.725955915645768*^9}, 3.7259573426883097`*^9, {
   3.7259573802285233`*^9, 3.725957394680827*^9}, {3.725957491331352*^9, 
   3.725957496237446*^9}, {3.7259579700309763`*^9, 3.725957997193788*^9}, {
   3.725959751082412*^9, 3.725959839978695*^9}, {3.725959871291285*^9, 
   3.725959885923421*^9}, {3.7270061717870007`*^9, 3.727006286266118*^9}, {
   3.7270063913384523`*^9, 3.727006466664749*^9}, {3.7270064969609833`*^9, 
   3.727006601936904*^9}, {3.727006633456595*^9, 3.727006653416595*^9}, {
   3.727007537451445*^9, 3.727007542009945*^9}, {3.7270076211402073`*^9, 
   3.727007622842175*^9}, {3.727007756953475*^9, 3.7270078137288437`*^9}, {
   3.727007919403038*^9, 3.7270079211758537`*^9}, {3.727008016648714*^9, 
   3.7270080433617153`*^9}, {3.7270080792252502`*^9, 
   3.7270081609205723`*^9}, {3.727008253171165*^9, 3.727008294280734*^9}, {
   3.727008498361691*^9, 3.7270085162806892`*^9}, {3.727008583489607*^9, 
   3.727008592040756*^9}, {3.727009648469528*^9, 
   3.727009681202277*^9}},ExpressionUUID->"756c101e-4d24-4f1c-b120-\
e771448d347f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir", "=", 
   "\"\</SPENCEdata/Research/Satellites/FAST/kappa_dists/journals/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "dir", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "Liemohn_and_Khazanov__mapped_Maxwellian_density.wl"}]}], "Input",
 CellChangeTimes->{{3.726480566976571*^9, 3.726480579131708*^9}, {
  3.726480732169458*^9, 
  3.726480761429207*^9}},ExpressionUUID->"07a1f08c-1ba2-478b-ab62-\
2c05df49a319"],

Cell[CellGroupData[{

Cell["Distribution functions at source", "Section",
 CellChangeTimes->{{3.727011590174267*^9, 
  3.7270116018620987`*^9}},ExpressionUUID->"3d940f35-0a19-456e-9705-\
6a6ddd5b94be"],

Cell[CellGroupData[{

Cell["Step function definition", "Subsubsection",
 CellChangeTimes->{{3.7270097256728783`*^9, 
  3.727009729089171*^9}},ExpressionUUID->"52b3d36f-2342-4c3d-ae1f-\
14df4a3e6a11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourcePieceFuncMax", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "+", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.7270247388884983`*^9, 
  3.727024739273291*^9}},ExpressionUUID->"a71ce8ea-8cc8-4e56-be4b-\
fb05712b173b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourcePieceFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "+", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", "RB"}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.727018120579465*^9, 
  3.7270181256196413`*^9}, {3.7270248242665987`*^9, 
  3.727024824897677*^9}},ExpressionUUID->"06537277-f2ca-415d-9771-\
a6f6e0ec9b8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kappa function definition", "Subsubsection",
 CellChangeTimes->{{3.727009733096661*^9, 3.727009745488661*^9}, {
  3.727018519672544*^9, 
  3.7270185210158157`*^9}},ExpressionUUID->"1acf9a4f-3308-4b59-b587-\
9c66c1d00e16"],

Cell[TextData[{
 "Kappa w/ modified step func, in units s.t. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "th"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "620349a2-b9e6-4cea-b17d-9fcf693f295b"]
}], "Text",
 CellChangeTimes->{{3.727009696600786*^9, 3.727009706089224*^9}, {
   3.727012010827714*^9, 3.727012017636922*^9}, {3.727018643948222*^9, 
   3.727018646519607*^9}, 
   3.727024836646822*^9},ExpressionUUID->"0e3d5792-8339-4c21-87d9-\
41a299c5a98a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourceFuncMaxwellian", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]], 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["vpar", "2"], "+", 
       SuperscriptBox["vperp", "2"], "+", 
       SuperscriptBox["vbth", "2"]}], ")"}]}], "]"}], 
   RowBox[{"sourcePieceFuncMax", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "potExp"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727008176528145*^9, 3.727008195095921*^9}, {
  3.7270115721929197`*^9, 3.727011574822938*^9}, {3.727011627607773*^9, 
  3.727011629382308*^9}, {3.72701172481579*^9, 3.727011728773847*^9}, {
  3.727011766647304*^9, 3.7270117670378304`*^9}, {3.727011872014805*^9, 
  3.7270118724064083`*^9}, {3.727011978692533*^9, 3.727011990494253*^9}, {
  3.7270247422030287`*^9, 
  3.727024742561391*^9}},ExpressionUUID->"f11ac1e6-c202-4569-8607-\
1e9394d1013d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sourceFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "kappa_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["\[Pi]", 
      RowBox[{"3", "/", "2"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["3", 
         RowBox[{"2", " ", "kappa"}]]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vperp", "2"], "+", 
         SuperscriptBox["vbth", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"kappa", "-", 
         RowBox[{"3", "/", "2"}]}], ")"}]]}], ")"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"kappa", "+", "1"}], ")"}]}]], 
   RowBox[{"sourcePieceFuncKappa", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727008176528145*^9, 3.727008195095921*^9}, {
  3.7270115721929197`*^9, 3.727011574822938*^9}, {3.727011627607773*^9, 
  3.727011629382308*^9}, {3.72701172481579*^9, 3.727011728773847*^9}, {
  3.727011766647304*^9, 3.7270117670378304`*^9}, {3.727011872014805*^9, 
  3.7270118724064083`*^9}, {3.727011978692533*^9, 3.727011990494253*^9}, {
  3.727018092898695*^9, 3.7270180942511587`*^9}, {3.727018129058786*^9, 
  3.727018136834855*^9}, {3.72701816887545*^9, 3.727018210458865*^9}, {
  3.72701826213864*^9, 3.7270182953942747`*^9}, {3.727018357059965*^9, 
  3.727018383913637*^9}, {3.7270248278997507`*^9, 
  3.7270248284420843`*^9}},ExpressionUUID->"4a36f1f1-8209-4d43-afdc-\
1206beccf092"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution functions at bottom of potential drop", "Section",
 CellChangeTimes->{{3.727011590174267*^9, 
  3.727011613350595*^9}},ExpressionUUID->"76a2b838-74a9-4437-804c-\
c25b5a01a22d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "RB"]}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "-", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "RB"]}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "-", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.7270121911806498`*^9, 
  3.727012203572393*^9}, {3.727012254723732*^9, 3.7270122708663807`*^9}, {
  3.727018303155917*^9, 3.7270183045627193`*^9}, {3.727024861659545*^9, 
  3.727024862178116*^9}},ExpressionUUID->"b3912a18-34f5-4f92-a9cd-\
3f47be8a96e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncKappaRho", "[", 
   RowBox[{"rho_", ",", "\[Theta]_", ",", "phiBar_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["rho", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
            ")"}]}], "-", "phiBar"}], ">", "0"}], "&&", 
        RowBox[{"rho", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"rho", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["rho", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
           ")"}]}], "-", "phiBar"}], "<", " ", "0"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.727016421243607*^9, 3.7270165523014174`*^9}, {
  3.727024866385644*^9, 
  3.727024867009685*^9}},ExpressionUUID->"4121babf-df66-4b76-94e4-\
55c95cf693d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncMax", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["vperp", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox["1", "RB"]}], ")"}]}], "+", 
          SuperscriptBox["vpar", "2"], "-", 
          SuperscriptBox["vbth", "2"]}], ">", "0"}], "&&", 
        RowBox[{"vpar", ">", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"vpar", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["vperp", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", "RB"]}], ")"}]}], "+", 
         SuperscriptBox["vpar", "2"], "-", 
         SuperscriptBox["vbth", "2"]}], "\[LessEqual]", " ", "0"}]}], "}"}]}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727009769898034*^9, 3.7270097802427683`*^9}, {
  3.72701156188899*^9, 3.727011564647419*^9}, {3.7270121911806498`*^9, 
  3.727012203572393*^9}, {3.727012254723732*^9, 3.7270122708663807`*^9}, {
  3.7270247509134007`*^9, 
  3.727024751273674*^9}},ExpressionUUID->"25d0f953-9dc7-4b9a-9541-\
84a482e191b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomPieceFuncMaxRho", "[", 
   RowBox[{"rho_", ",", "\[Theta]_", ",", "phiBar_", ",", "RB_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["rho", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
            ")"}]}], "-", "phiBar"}], ">", "0"}], "&&", 
        RowBox[{"rho", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"rho", "\[LessEqual]", " ", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["rho", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], "RB"]}], 
           ")"}]}], "-", "phiBar"}], "<", " ", "0"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.727016421243607*^9, 3.7270165523014174`*^9}, {
  3.72702475500165*^9, 
  3.727024755385796*^9}},ExpressionUUID->"d25fd375-ba7d-46fd-a9de-\
e41376e29ac1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomFuncMaxwellian", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "potExp_"}],
    "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]], 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["vpar", "2"], "+", 
       SuperscriptBox["vperp", "2"], "-", 
       SuperscriptBox["vbth", "2"]}], ")"}]}], "]"}], 
   RowBox[{"bottomPieceFuncMax", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "potExp"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727012282875024*^9, 3.727012301611073*^9}, {
  3.727024760729383*^9, 
  3.727024761312326*^9}},ExpressionUUID->"88dc8254-a8d1-444c-92a6-\
d51d2203e9ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottomFuncKappa", "[", 
   RowBox[{"vpar_", ",", "vperp_", ",", "vbth_", ",", "RB_", ",", "kappa_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["\[Pi]", 
      RowBox[{"3", "/", "2"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["3", 
         RowBox[{"2", " ", "kappa"}]]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["vpar", "2"], "+", 
         SuperscriptBox["vperp", "2"], "-", 
         SuperscriptBox["vbth", "2"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"kappa", "-", 
         RowBox[{"3", "/", "2"}]}], ")"}]]}], ")"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"kappa", "+", "1"}], ")"}]}]], 
   RowBox[{"bottomPieceFuncKappa", "[", 
    RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727012282875024*^9, 3.727012301611073*^9}, {
  3.727018307694338*^9, 3.727018430899806*^9}, {3.727024925484622*^9, 
  3.727024926065209*^9}},ExpressionUUID->"d392b517-e0a1-4762-9652-\
e425727d49e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxwellGrate", "[", 
   RowBox[{"RB_", ",", "phiBar_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["rho", "2"], " ", 
      RowBox[{"Sin", "[", "theta", "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rho", "2"]}], "+", "phiBar"}], "]"}], 
      RowBox[{"bottomPieceFuncMaxRho", "[", 
       RowBox[{"rho", ",", "theta", ",", "phiBar", ",", "RB"}], "]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rho", ",", "0", ",", "20"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727026380935857*^9, 3.727026407545138*^9}, {
  3.727026456543799*^9, 3.72702645696194*^9}, {3.727026502035056*^9, 
  3.727026563637093*^9}},ExpressionUUID->"099d400d-e923-4b54-9e2b-\
7dd37fe1d909"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kappaGrate", "[", 
   RowBox[{"RB_", ",", "phiBar_", ",", "kappa_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["3", 
        RowBox[{"2", " ", "kappa"}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["rho", "2"], " ", 
      RowBox[{"Sin", "[", "theta", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["rho", "2"], "-", "phiBar"}], 
          RowBox[{"kappa", "-", 
           RowBox[{"3", "/", "2"}]}]]}], ")"}], 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"kappa", "+", "1"}], ")"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rho", ",", 
       FractionBox["phiBar", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Sin", "[", "theta", "]"}], ")"}], "2"], "/", "RB"}]}]], 
       ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727024947668044*^9, 3.727024948756816*^9}, {
  3.727025222526896*^9, 3.727025343398382*^9}, {3.727026201052917*^9, 
  3.7270262564102383`*^9}, {3.7270263257971992`*^9, 3.7270263318342543`*^9}, {
  3.727026469816107*^9, 3.7270264737954893`*^9}, {3.72703038693745*^9, 
  3.727030388513276*^9}},ExpressionUUID->"57931a78-324a-453a-aac6-\
9a9cf86f617e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kappaGrate", "[", 
   RowBox[{"RB_", ",", "phiBar_", ",", "kappa_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["\[Pi]"]], 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["3", 
        RowBox[{"2", " ", "kappa"}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], 
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"kappa", "+", "1"}], "]"}], 
    RowBox[{
     SuperscriptBox["kappa", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{"Gamma", "[", 
      RowBox[{"kappa", "-", 
       RowBox[{"1", "/", "2"}]}], "]"}]}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["rho", "2"], " ", 
      RowBox[{"Sin", "[", "theta", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["rho", "2"], "-", "phiBar"}], 
          RowBox[{"kappa", "-", 
           RowBox[{"3", "/", "2"}]}]]}], ")"}], 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"kappa", "+", "1"}], ")"}]}]], 
      RowBox[{"bottomPieceFuncKappaRho", "[", 
       RowBox[{"rho", ",", "theta", ",", "phiBar", ",", "RB"}], "]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rho", ",", "0", ",", "30"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727024947668044*^9, 3.727024948756816*^9}, {
   3.727025222526896*^9, 3.727025343398382*^9}, {3.727026201052917*^9, 
   3.7270262564102383`*^9}, {3.7270263257971992`*^9, 
   3.7270263318342543`*^9}, {3.727026469816107*^9, 3.7270264737954893`*^9}, {
   3.727030128798563*^9, 3.7270301440899067`*^9}, 3.727030268569887*^9, {
   3.7270304200819607`*^9, 
   3.727030420201953*^9}},ExpressionUUID->"c96f676e-8dc1-4a14-b7e3-\
aefa7b218dff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MaxwellGrate", "[", 
       RowBox[{"RB", ",", 
        RowBox[{"dPhi", "/", "Tm"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"kappaGrate", "[", 
        RowBox[{"RB", ",", 
         RowBox[{"dPhi", "/", "Tm"}], ",", "1000"}], "]"}], "//", "N"}]}], 
     "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"101", "/", "100"}], ",", "10", ",", "100", ",", "1000", ",", 
       "10000"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.72703014586565*^9, 3.727030193433075*^9}, {
  3.727030437360034*^9, 3.72703044556516*^9}, {3.727030791268725*^9, 
  3.727030831298119*^9}},ExpressionUUID->"cac0b021-3838-4ea6-88f8-\
f43e39227c61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0.09255547041882364`", ",", "0.09254227354987986`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.0050569472443194`", ",", "1.0048148664456207`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.6498877122049913`", ",", "1.6503295407772192`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.7323527634288707`", ",", "1.7329417767461652`"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1.740799992863482`", ",", "1.741404793946965`"}], "}"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727030204491371*^9, 3.727030274033567*^9, {3.7270304241734447`*^9, 
   3.727030448235689*^9}, {3.72703080070172*^9, 
   3.727030835696506*^9}},ExpressionUUID->"00e70979-768d-4e62-9da7-\
b9eb7814f9c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["rho", "2"], "-", "phiBar"}], 
       RowBox[{"k", "-", 
        RowBox[{"3", "/", "2"}]}]]}], ")"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}]], ",", 
   RowBox[{"k", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727030666558567*^9, 
  3.727030736683331*^9}},ExpressionUUID->"70bc732d-2b6e-4799-aa52-\
148987e8f925"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"phiBar", "-", 
   SuperscriptBox["rho", "2"]}]]], "Output",
 CellChangeTimes->{{3.7270306820611*^9, 3.727030706963035*^9}, 
   3.727030737408491*^9},ExpressionUUID->"d9d394b4-d917-4798-b4c4-\
907100795c44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaxwellGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", 
       RowBox[{"18", "/", "10"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", 
       RowBox[{"245", "/", "100"}]}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", "4"}], "]"}], ",", 
     RowBox[{"kappaGrate", "[", 
      RowBox[{"RB", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", "100"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", "1", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Maxwell\>\"", ",", "\"\<\[Kappa]=1.8\>\"", ",", 
      "\"\<\[Kappa]=2.45\>\"", ",", "\"\<\[Kappa]=4\>\"", ",", 
      "\"\<\[Kappa]=100\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727030468561534*^9, 3.727030634664874*^9}, {
  3.72703084947512*^9, 
  3.727030983704854*^9}},ExpressionUUID->"9c8b10aa-5a23-40d4-8a7e-\
90a5cb0fb9ae"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XeNrZKqAzgnyKQnEoeGKSyJ2KmDGOA9ngrircUJX0UUB2SbH46LTSL7OsbHa
ZxRwtVhUaPsTChpO9podSVfAbLf+FaaZFHgk+b9uEqPjg1vpx9uzKfiu2N9U
TqNjTblWJZf4WILpWLY0HZnu+rz0HApOxTGUbtDp2D4guMaeODDy1QVDVTpK
bbEJaCe+fWVmc54+HRc9iqhufE76zetozW1POlodUYjNf0HBUnRqsa+lIztj
bTAWUNDOCNfV/UDHxkv2E3bEEXMlSQqf6BjtlrrNh3g+h32wrZmOKQU9r9P+
H7+sb9amm453k9xrJF5RcEvkiILVHB21eBZ5dRDztpxx3K7KQA9f2ORRREGn
Z3TP2osMTNNYW2JWQkGzsN5Nq2AGNgkk5u4nfp/aq3/sKgP9a31i/YlffVsT
nx7OwCz7rGVPiWOsGyw4CQwM423dJ/qGgh16YsViLxjIsNsUWEn8SvTq7eF+
Btr71l1SL6MgKv2cabKxIrr4pieVVVBQMC3zLsRUEcfXvBNuIu6AbAPyo8PG
ZxEHB4jVGvu0DWwUcWiXyW+RStKPv804va6KOPrZ+/Iu4h5T9i/VM4o4UlWv
0kOsOVGZ/CxVEefaYvtn3lLwaa3Yz2J+Jtp3RZlw35H3AKz8voVMLOwpnhSu
piDeaPU5UREmvp9vvUYn3uu0k99OgolD1oIxG4lnr8RKTSsy0aXMVcKfmPlZ
aZ2GNhOjE3tS5omPBK46FXuIiYrDxRdnaigQ/GA56/WBicUy9SvK31OQpLV8
UcgnJp7Y/f1OPbFOkqBcciMT3wlm//1K7HGsULu+nYn9F0wezxLX0Zb5rhpg
Yi0Z1CvqSL12z05P/GVidUOfYTQx59vdH8dXK2F9RIuf4wcK9H+OjJ2IUkIL
fgHhho8UCAgX1NrEKuGntminL8TvlYIfr49Xwtqk/PR+YjsTltvfJCXUMa9e
SRGfur+r6Vq6Ejo+Tu9cWk/BU4vXhffKlPDpZpGeE8TMzBshHyeUMOWURsKS
TxT8zZG7Ga3Cwj+r20ZWNlCw4O4GZRU1Fnb6+xuuJxa86pD38h8Wmk63xBkQ
izonf21ZzsIj0sXq1sQKImrqCmtYuEl9evoMsZa7dvldYOH3qAmtMmJPSZvp
VFsWquw3uWr6HwWfT0TueXWNhdMZFyMtGsl9X/y7c1UoC0XXPS7bTSz+q3rH
ozAWnp+JGHUi3urHg7ciWFjrWLzKk/jZBU8VjxgW5j6d8rtKfDFs2w/5+yy8
MLBQoZRYI5UKPVPAQrNNoQnLmyg42+7+RmeQhUPP8nyniVfV9jinDrEwh82x
oYh7C93/So+wkN/RfhVvM5lXie76P76z0GeZYasoMcvFvSjzBwvldS1mlhJX
9Lnlc/6y0O5ctaclseika5aoDBtXlp91SiNOWOiS3LWZjfsCn3wzbSHzxPbO
3qNb2bhmOG7tTuKtac1qvw3ZGPPn4EVb4jFj02xZYzbuGsqRcifGGxvKzCzY
yMgxEzxN3Csl3VvkwMa1Y3vV7hFrcGpU43zYuCT88vkJ4lcb1z6zTGXjiqRP
YpdaKVDpHWyreMxG9SRn1RDim9cT+XWesEm//dINJT7YLmjHzGRjmZu5QxSx
zOk2/pEcNr5+2nwmhdj7ub/dpWI2xoKiegWxhnq1QF4TGzdUTXvytpH8ZJ0c
GPwc7DP2mjxBrLChLPuVAAc7/o6/8SWOc1BZuGchBz3+OoSdJY65N5YdLczB
HTUCiheJwzUCFopJcHAkrkX2FnEQJOfwMjnInEo8/4z4wIHuRQPaHHzk4qQw
SNx/1dDp8noOyrNpoSPEezOePF+qy8HRzj/cMWKXSW8nF30ObrQMrp8mtjvL
l9u2hYPVh+Ps+NrJ/ApXdn5vycGDIy9GFYlrskNyPXZyUEvghyab2KhxVEjI
moPjq6+fUiY2lH+Ru9WWg70mTdPqxPBgq3CJEwf9WkWatImLK9OcHV04aDHq
IKhLvHFw8QvKlYNLZ+TX6RPrrGh21tnHwa16Xde2EL803/CieT8HdZK+Z28j
Xud9V9jnIAdXoVezMXFu1AIXSQ8OGv57YNaUWDNv/4vswxykfFpkLYn/ByH6
mLQ=
          "]]}, Annotation[#, "Charting`Private`Tag$328230#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4g==
          "]]}, Annotation[#, "Charting`Private`Tag$328230#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9xY=
          "]]}, Annotation[#, "Charting`Private`Tag$328230#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$328230#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk41dvXAHAJRTIcDsd8HGNUNAgN1mpShG7ERRlTISKKSj9DddFoHhOS
a2g0DyVCSqaQKUoRmYUUztfl3e9f+/k8ez3r2Xvtvdez5R09TE9ycnBwSK/g
4Pj/MSMpMdx3+w292AJm53uXYlDbdvLZacXToMYwlM7wK4bfoj66Woq+cLJW
/WP4nWKwvr60JKUYAro5uVREbjGsLatyEFSMA+c8rvX72MXwo1NRhFcxE4Sy
dk543y2Bj4PtY9yKxVARsPr5iapSeO+20ZJL8R2s6n7P9+lYGUSHMyJtQt+B
2bajqSneZWBfwNlQNP4OmvgZb/1ulcEfqgNcCmshQn5Z5sLLMmDdClBp0q+D
i7p6gWelX8GV7OY/cS6NwNaq1I7ofwUM79K6mM4WyKRfKTwQWAH1z4+5rJPp
Anve1z1V1yohMtqvndOoC86Vpj+pjKgE60v3dn++3AU/0hgcjSmVMLqnRyKs
qwuuy2g48ZZVwuoO67rZqE+wX2G8U/J3JexbtFJ/zdcDPzKmS566VEH5QcsJ
i/kvwPqeaMttUw3BGy5aaar0gujUXY18t2owpsXX8Fr0As2HzfK4Ug2fezrv
l+X3wudZJx/RpGqgzv5twvL4CqWejQlCn6shyfBx5x+vb5D8hH5gwPYNfPJ8
pFM10geuSroF4Z410HuU27iUox/u5izq9wXVQL+OvUOOeD+svG0esieqBkY5
xG4m7+8HMa1Mb+2iGmCHB/VcftAP5YGhjyYWa0A619J/i9V3CBY19n9w5y3Y
TvO8Sa8dAA+nBs6+snfg2O7Qde/rAHQFO12+1PwOTpWWjUf+GYB4tyoh5YF3
cDbIix6kOAiW3dMtL9fUQoBw7ymbwEEQT2BPfD5WC6mbCnnFdH7AIuXzW5Dj
PfSfO3E4JHMI5nfRnGhWdTD49/nnnq+HQOu0wnrjc3UwvOsfQetPQ8C2nJBK
v1EHP3kzP6xfMwxJXytomS/qYPHB6OHWs8PAW3OtkVu2Huit5/6S2TYCnj2e
hQaj9XBwc+CR/DejkG22UYAjsREOMSJyk76MQvCvuSb+okYwWXogHPxnFP77
Zhy3vbURzOuqWyxVx6BVZ7ppga8JHB1XmS7dGoOyLvs8Pv8m8Iu8a2pgNg7O
hRlbol0/wLOZJLOvfROwWq7ntvDzZmDt2SsltzABkT4vgzaXN0NsxEi/rdAk
tBdqXTvR2AwBmtu8evUmwTQsofn3WDP8dfZD+Jd7k/C0xDfp87oWmB5Z0dRj
/hMuKJ2+/CKrBRI9tyiOO03BxdMN9iN5rdB7Oj55uGsaPji4CM4ttEF8uH5W
0OA0PNSyFv4h0A5HSmdzJWemIe865/iwQju84TtSY7RmBr6kKImombTD46e8
4zm7ZiD20q4bCQ/b4eKvy7qX0mYgQv/XBxXTDqAF2LTxuv2Cg1frW9696gT9
WBaf+vIszLRJ5Z1t6IbSeT4oFZsHLxfNs8lV38DoRuop0QU2DG85erhk0wBU
Wv3hKpVYguXo/Sc9BIZB7cmiYcxVDvRI7jS/kjYGl/dvmP81tQJnQ2PAmuMn
vFx6Ze/rvxJvuChsk9s6DfyH/93jMM2F1YYnrwxlzIBJxfhXj2s8WB0opn1J
YBZiDL47KAqsxoiXr9P89v2GcVdNG/Dnxd/fjXp78A9sffJFJGDtGqSZ7VT0
2TAHt6/37VW6yo97hoZlS0bnoP3Kfo0pugAqOOks702YB4Uwy2X7NEEMXW/7
/P66Bdgt7aAofVMIsxszOE7dW4C2567SeneE0OPgv4bq9xfg1N7zovbhQjh+
4eDhn8kLcNs1hCs9VgjTNv57yzttATpKng6oPxRC3v4HQ27ZC+Bqzk7fUSaE
Oqvz+hWKFyD6bpTSsUkhtLBaDMxqWYBhjrfKiabCWJesxtZeyYbs3VVjwebC
+JCWKpbAxQbXq+U53pbCqDV1d88CNxvGVhZvN7YVRruArfVFq9kwyZNlwuEq
jAK3BHOUBdgwy3/T51SQMGaXRxp2M9jAIWHydnOOMK7v9qmP3sAG8U0dJ+vX
0nDLtlkxn6Ns4G++55MtREOflrzcBHMS7+EQEiJCw5RRs5AyCzaMPhnP2itB
Q+urmoPLlmwoV105/lKRhhwKIxf/Z8MGJ6am15MdNAxv0HA7eooNOYI3/e+4
0ND8NO/H875sMJjcFXe4hoZjoiaWCXFs8De+PH2mlobR2Zma6fFsyHtSdCi0
nobximf2Pktgg/QZDY7KFhp+OG8t+foe2d8Q02VzLw2v2M0kdaewIbpv5Q76
HA2lo5+7jWWyobftfW+3qgguS9r1BxSzwfulufKp2yIY2/3NN7yNDR3vrhsb
h4lgwrLWFrt2Nui05Z/fGimC+4Q9bTd0sGFpXLiaM14EuztEeGo72XBTtsku
5aEICrrEpP/pZkNqkH5C1wsRrAwMPKfbx4aGA9r8h0ZEMOLGo86/J9ig1MaY
0dAXxUWloNg1XBTUppY7mhuI4jWtL2nviF3dnT5eNhLFzuy6tde4KcjhySmo
MRVFK2sjm3keCrbrHvA9ZieKD54dsf7MS8FfyRcWgy+KYnedgspNQQouO7fy
9D4SxacdLh8CJCloXrwldVuQjqWVHVnDGynIVKE602h0VFqTpxGkQYG/qWt0
KZ2Ot/U590loUqCedXDtkBQdjX4eFju4iYJgM+7l3ap0HOEpcU3dQsGOR/79
c0jynfkouVOHgoy/z2Wf8KLjJg/vBvndFPwvz0J7Rzsdl7rSnYuPUHD1Zslr
6S46dj7xhg2mJJ+jpOFSNx21PU2r04jDab3HK7/R8VuvwsfbZhSke528emCc
jodGDCVszCmo23y+0WylGOpRfZ6TlhQw8iNOuG0Sw9q8iqZ2Owry8hvC7t8R
Q1um8rcqNwrmDv3r+CpcDD0zwhY2uFOwc+B/Wl+ixNBiZOp1PHGNqEaPdKIY
BshHWLufpaDrQoRyUoYYFvAtVtA8KVjStniVWCGG/z0ODTXxpsCg7Oto3LQY
ZjzhyLl1iYJvb2b2R5qLY6SDbavqPxSY8ZUPXrEUx4tZe839iN8evvHP6WPi
KJg4l9RI/KRbrmangziWZ3n5nQumwHfKaN+QmzgmnNx9qSiEAgHpzD07r4tj
Ks++JK2bpL7ex+BHnjhem9BL5A2jIFb+jc52IQbWLo6OCMVTsKvGUlFMhIHR
+vv/d5R4wHlCcIbOwMYJ9rc44s05YkPZUgz0Gl2UkE2goFHPJUZChYGmjX/M
VRMp4DouMDO/i4Hni01pW5Mo8Iq1fFx8hoE73uZcWZdKweE1EzJa7xiYvj6w
NTKTgm0e86aH6xjYx8+3r5lY+uPKUJdGkk/HL3htFgWjiZIz9z8ykLYjzT+E
OFjt4FuebwzUzRqAS9kUlBk8PNs1z8APszOKRx9ToBpqVeGnJoH3Ix+7DD+j
gIP7rX3VHQn8b2ukYGQhBXSxN46Z4RKIIx/sKonVVKqcbkdJYFOt8t0p4qMG
5c4WCRKYbBL4j0kRuc93ijxH0yVQyUPz2+piCkzEMgNpZRK4QUvR0beEgiSV
0FTHUQlkWxhp7nxJga6h4TfOA5JYnZrW7vKagrtSFerKhpK4lE3PjSbuH9/i
a2AsiSd9t5ypIL4dJiMQbiaJa3d3+IlWkvNvm9ohYy+JOoHXhV8RB9vFxWlf
ksSdGQ8VV1dT0Hp+wMTtsSQamvDEBdeQ95zi/6pdUAqVHi50raujYELmR3s1
TQpVxRtqDYk9k4wnc+lSeDP4UeoZYp8Eabm7UlKYF968+ilxUNSLQH0VKVTY
8rBsYz0F8SF/9hbrSWHjHYPKDQ3kvnmcrYt3l8JWunW+ZBMFCmjbeaxeCkfK
bV7kt1DQLR22Y0eTFLo6e6U3EYcvVKRItkjhz9gjfiPES3nyzp86pFCWP+On
bCuJVxqct+iXwnv/sWZDiSPXuEmaLkhhv6D6RauPFKzovGRzUEUa9Ysv1463
UfDVPeb71mvSGHUt1+hrJwUdfLsiTIOlceMnk6I54obMAT3PG9LY/YpzrVAX
BS/6tiQ+DpPG8ODhICSONW/9i5UkjRuGd99KJTbaJVguWCiNrYeKVG0+kXj+
G/GjP6RRgvP1VG03BdGPrxinGsqgc+rgQ/cvFJT+FqsNNZZBxtIF50DiXsjd
Q3502PrmnFwUsWrboPYeCxkUKWh1KiEuWzRhDTjI4L0kQxPOXgq+G8vPqVyS
wZjZgPQo4s1TNanPM2XQr4I79clXClq2Cs6Wc8mi/yOeptI+8h6AWTK4ShZZ
GfI1dcSJBpuu8K+RxdZbE896iJ1szbishWWRM7/S+j/i+ZA40d8ysriNuiKK
/RTI9shpqWvLYs2NTRLVxG5Bmj5xLrJIrQt5WvGdAp6mI/MeTbK4S7CIETNI
Qcq29atDW2RRwHZDbRqxTgoPI7VNFpNmGe45xK6eL7Wbu2UxxME9rp64kabk
qzkki6Mvxs+u+EHq9ff876llWUTTXZpniFl9yb/ObZLDNY7Zm7WHKNCbHZv0
jpbDvSfKO/OGKeDmK623iJNDQbP7tq+IG+SCs3QTSbzS6Jd3xNaHmI7LKXKo
pPq95jOxT9rR9puP5bC6f2QHzwgFz/569fJBlRyuMJh78zex7NO7oR+m5FA+
qsDjN/FyHiMiRpmJFyPaUXqMAs7k7YrKqkz8kCTwXomY58bx4qJ1TJy27TLQ
IOa3S/3SuZ6JW9Zrae0hllyjqia5hUn6Y0H+aeJtJ7Srk4GJl8PfHs0ldhex
+J1pyUSXdgkTGKegxzvK6sVNMp/4R//ABFlv4UYzzdtMbGxlJpgQC829N8q4
w8Rnzb8HzYn3X+bAyHAmrkl57uFE/DzQXdk1lomevk17g4iv3TnwSyKNiW8D
BWdKidUzqduXSpm4trQqUGWSAr/uE691hpkYUOugMUusWf/dLnOEiVZGZ9TY
xAMvTyzTx5jIvVlDnuMn6Vf3T+j9mmBisOnMCn5ipv2Jsqe/mFhf8iJcgfjN
oGMJa5mJMfG/Bo8Q80875PCLyaN1X+S1x8RJq+xTv+2VR4OE3evMpkg/sbzn
dHa/POauUIu1JN6f3aG6qC+PVdSXJRviSUPjXHFDeSzOKqx2Jsa726tM/pJH
QS9/KX/iAVH6QNlxeby8uJsni1idVaeScEEeLxZ49c4Tv9i59fmRTHk8F9SK
YdMUKA8Mf3qTJY//ulu6RRFH3LrPpfNIHlOY3dFxxM7dPNayT+WRN/LT5xRi
sYufuMby5NHemNsgh9gr39/6erk8+jtMRTUTq6u95y5ul8fhhLecgjNkf+K2
x6W5WKgxrlJ4jVhye1XuC24WznDviQshTjiuvMpqFQuHXXR9bhHHPpjMjeFj
4c31dWpRxGHqAasEhVnoPld6No34KqTmrZBlYVXb0onXxKdP968e0mahcow4
nU3844a+7T+6LLQ4fi/uP2KnJ4/yFXaw8FWEgfiKXxTYT3vZ2uuR/Gc2Cqwm
tvZbWfBpHwsNz1t104mNwhTtGo6wMNudNalJXJcbWuBqxkKehGP7thIbtI3z
8poTz/THaRPrSxQW7LdkYcOXgW16xPBwP1+FLQujRGeOHiIur8m2s7Fnoazm
pxgT4p3DawspBxZ6PJNrO0Kss6HDTuckC/81/njQkrjo8PbCjlMsxMx9AceI
tbyS+S44s1CtXSbflrggmtNexJWFuj/tBxyINxefKsw9w0I5fiGRk8T/B0QC
pNo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$328230#5"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.8796613004033026`*^-7, 9.210340184010054}, {
        0.06297875039518636, 3.1792769012631834`}}, {{1.8796613004033026`*^-7,
         9.210340184010054}, {0.06297875039518636, 3.1792769012631834`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Maxwell\"", "\"\[Kappa]=1.8\"", "\"\[Kappa]=2.45\"", 
       "\"\[Kappa]=4\"", "\"\[Kappa]=100\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7270304942263002`*^9, 3.727030503670727*^9}, {
   3.7270305463628407`*^9, 3.727030635468068*^9}, 
   3.727031590995737*^9},ExpressionUUID->"bbb2bdf9-2d27-4f68-a8bb-\
e6d6234e4e59"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now for some plots!", "Chapter",
 CellChangeTimes->{{3.725960168987678*^9, 
  3.7259601728517942`*^9}},ExpressionUUID->"17cafd48-d0cb-4889-8832-\
2c2fe6b983da"],

Cell[CellGroupData[{

Cell["\<\
Function at source, with lines showing which particles make it to the bottom \
(I think)\
\>", "Subsubsection",
 CellChangeTimes->{{3.727011547367176*^9, 3.72701155092634*^9}, {
  3.727011645582711*^9, 
  3.72701167276602*^9}},ExpressionUUID->"63bd1928-ed34-49b7-9c1c-\
b130a3e66040"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"sourceFuncKappa", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "kappa"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", 
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vbth", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kappa", ",", "2"}], "}"}], ",", 
     RowBox[{"3", "/", "2"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727018439961399*^9, 3.727018470641408*^9}, {3.727018575683305*^9, 
  3.727018582377638*^9}, {3.727024702383016*^9, 
  3.727024705745468*^9}},ExpressionUUID->"6a4a38c0-6d14-423c-b67c-\
85c7be772747"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kappa$$ = 2, $CellContext`RB$$ = 
    3, $CellContext`vbth$$ = 3., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`RB$$], {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {
      Hold[$CellContext`vbth$$], 0, 5}, {{
       Hold[$CellContext`kappa$$], 2}, 
      Rational[3, 2], 10}}, Typeset`size$$ = {700., {272., 275.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$230788$$ = 0, $CellContext`vbth$230789$$ = 
    0, $CellContext`kappa$230790$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`kappa$$ = 2, $CellContext`RB$$ = 
        1, $CellContext`vbth$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$230788$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$230789$$, 0], 
        Hold[$CellContext`kappa$$, $CellContext`kappa$230790$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`sourceFuncKappa[$CellContext`vpar, $CellContext`vperp, \
$CellContext`vbth$$, $CellContext`RB$$, $CellContext`kappa$$], \
{$CellContext`vpar, 0, 3}, {$CellContext`vperp, -1.5, 1.5}, PlotRange -> Full,
         ImageSize -> 700], "Specifications" :> {{$CellContext`RB$$, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {$CellContext`vbth$$, 0, 5}, {{$CellContext`kappa$$, 2}, 
         Rational[3, 2], 10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{747., {360., 365.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.727006751314726*^9, 3.727008048824212*^9, 3.727008201207872*^9, {
   3.727008324910478*^9, 3.72700837602871*^9}, 3.7270084283062277`*^9, {
   3.727008519874661*^9, 3.727008553578884*^9}, {3.727008599703631*^9, 
   3.727008622925211*^9}, 3.7270086553328247`*^9, 3.7270088237490253`*^9, 
   3.727009854865983*^9, 3.7270099138143063`*^9, 3.727011640287616*^9, 
   3.727011734026739*^9, 3.7270117702348413`*^9, {3.727011994203*^9, 
   3.727012005435152*^9}, {3.727018457747468*^9, 3.727018500895083*^9}, 
   3.7270185829912243`*^9, 
   3.727024706115561*^9},ExpressionUUID->"376ecdf2-d0ef-46c0-8010-\
65bb46fe3664"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Function at bottom of potential drop (for dPhi=941 V, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "m"], "=", 
    RowBox[{"110", " ", "eV"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c7bae214-66a6-4fb5-8007-08c1bc26bfd5"],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.727012324809824*^9, 3.727012334442009*^9}, {
  3.727013023150839*^9, 
  3.727013057414369*^9}},ExpressionUUID->"f6f091a7-07f0-4a23-b1a3-\
55b62f257f9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"bottomFuncKappa", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "kappa"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RB", ",", "72"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbth", ",", 
       SqrtBox[
        RowBox[{"dPhi", "/", "Tm"}]]}], "}"}], ",", "0", ",", "4"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kappa", ",", "2"}], "}"}], ",", 
     RowBox[{"3", "/", "2"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727012339587678*^9, 3.727012342131145*^9}, {3.727012431240834*^9, 
  3.727012534001828*^9}, {3.72701259716241*^9, 3.727012625723126*^9}, {
  3.727012749498288*^9, 3.7270127532250834`*^9}, {3.7270186051691437`*^9, 
  3.727018629824821*^9}, {3.727018803378119*^9, 3.727018805175976*^9}, {
  3.72701916292004*^9, 
  3.7270191658300657`*^9}},ExpressionUUID->"3bdd0c4d-7f81-49ea-b84d-\
5eea8b80a31c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`kappa$$ = 10, $CellContext`RB$$ = 
    2, $CellContext`vbth$$ = 0.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`RB$$], 72}, {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {{
       Hold[$CellContext`vbth$$], Rational[941, 110]^Rational[1, 2]}, 0, 4}, {{
       Hold[$CellContext`kappa$$], 2}, 
      Rational[3, 2], 10}}, Typeset`size$$ = {600., {270., 274.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$225805$$ = 0, $CellContext`vbth$225806$$ = 
    0, $CellContext`kappa$225807$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`kappa$$ = 2, $CellContext`RB$$ = 
        72, $CellContext`vbth$$ = Rational[941, 110]^Rational[1, 2]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$225805$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$225806$$, 0], 
        Hold[$CellContext`kappa$$, $CellContext`kappa$225807$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`bottomFuncKappa[$CellContext`vpar, $CellContext`vperp, \
$CellContext`vbth$$, $CellContext`RB$$, $CellContext`kappa$$], \
{$CellContext`vpar, 0, 2}, {$CellContext`vperp, 0, 2}, PlotRange -> Full, 
        AxesLabel -> Automatic, ImageSize -> 600], 
      "Specifications" :> {{{$CellContext`RB$$, 72}, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {{$CellContext`vbth$$, Rational[941, 110]^Rational[1, 2]}, 
         0, 4}, {{$CellContext`kappa$$, 2}, 
         Rational[3, 2], 10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{647., {369., 374.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7270126002747393`*^9, 3.727012626069765*^9}, 
   3.727012753561844*^9, 3.72701279530963*^9, 3.727013019355918*^9, 
   3.727013054288583*^9, 3.7270186307942247`*^9, 3.727018806460525*^9, 
   3.727019167430781*^9},ExpressionUUID->"e76e62f4-82a4-4cf4-9116-\
47a034031ce3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use rho representation", "Subsubsection",
 CellChangeTimes->{{3.727017796060034*^9, 
  3.727017799525655*^9}},ExpressionUUID->"a88ea384-5020-44bc-8cb2-\
b732d9cfb428"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rho", " ", 
      RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
     RowBox[{"rho", " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["rho", "2"]}], "+", 
        FractionBox["dPhi", "Tm"]}], "]"}], " ", 
      RowBox[{"bottomPieceFuncRho", "[", 
       RowBox[{"rho", ",", "theta", ",", 
        FractionBox["dPhi", "Tm"], ",", "80"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rho", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727016890043365*^9, 3.727016913967278*^9}, {
  3.7270169648480253`*^9, 3.727016966928919*^9}, {3.727017116354292*^9, 
  3.7270172431763973`*^9}},ExpressionUUID->"7e5ceeb3-796f-4ca1-b84e-\
0ada09375809"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Hv3yRYnufBq8y3NfLilU3q/jdkGDlPUTFTv2xw+QEh9jmmxWQCq+9lHbL/XI
4u3tgxsWTlSj4ZNLfjdWfSNGZrczVTbYWyTN0fmm2qxOFZ9Y2Z6YXUS0tZ+/
KrD7bR5VemVm1hVNunDVaePUC8VkgJBTp7F6gHkL3J+zgnd/zqMVHl1XdtYT
1+GrNK3Wsfsodvc7eH/52FYy7nmNl4gyi+unFl/3Vq7vJhZNRhWFa5h92ZP5
s3fxQlFqqedu9/Api9cS4LsgA/hOKBS+09mrr/72nKMSTVg/MrSXRgXZvyDn
6vZn/chtuwIfJVUVOmxvZprskypye+2i/odtXlmUB5838nmsSm+cXt/W5lFD
fui+6Xgt42ahnbq2oNxDnUbmSfbwVKgjm7RPptaPE7WYXmEctkhHky52+ZxU
5VhPMmK0HunWHDbHe29sePfeyGZOVXF/2UwGPW/y+PDP/RuzvTT1Jtl1kfYF
tucOuLJz/i8ONfQM2yxCV05J3p/syPyuuXCPjfCev/fYdFj8/b5y+1IfJ9V1
yjSpKy183MDfpGXtmsCm3dkWr6aMMJBWUaUuWzcEv9ZtJlttlwbI9t1qoT3i
x6+uZDXas7aPr32/VlKVN0TrlYmyhXvPyJuNdhr03eq3m+t12ol/3dSCuw9j
zKXge29J3v0zzXovK3X8O0jeQ8u5TafY90H18z+5NLkJ06uVaXP8C9i5aPxO
2413b0yR+yPp6yYqdGHrEl0noy5Sflb/24FLuy2Wzbrjr/talZ4OmnXoiLMQ
Hfhb/WXNeR2LHKPE9qMr1ekRleqD21KE6YuHeoZ1IdfNFeBel0bevS5Rxcl7
jiar0C3NhcRISIy2fRx3cH/fIRYDs49rnRmrRifHW12uPiVOZyfYC2leemB+
LD15dWGxCl0j329rH3NpGpjS4G5AX5tHw30XQ3j3XTRtOEb6WBcSoXHTQqML
WfwVON/xnYNoOXHfGLFg3z95g5ATx4fNz6slldk1CuYh/9T5kvVtbhz9m8Rs
PNIw6jPzf7S8nR4e3d9KFimafjEYwPwfvO/CAc4dl56Gc6ou+2QfzBKl9+vV
nwQFStL9wA8nT/vW7PcSp5qPVxuLGsrQk8AP3Z83frCPk6QbDtyN25klR18B
PzgoOd8a/lGaZixT0G7bpkhrTP/ywzMruyhhYTmqenR4euoffs7t8ZcfDPxm
+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
4VI90a8Za0/TFCjySfAKm08fLzSSHyutG9XFlekU4JObBg52vi5HyJHqz9JZ
palcO+lT5obbPU4lpr7eD8l7lvfzENa76Kr2gqQJPTA/P4mdt3lwzXqSqmMm
0XvcvSww75/vFL7uT6y7/4mU+/XtPfYIy3fVlzjUxD78Sb71d6jK1Vak5Vf/
8sbmDuFBEe6V5MyEVr1cU2WON5pVY5bv7vGLZG54nD2lQoXjjftw/78w3P+P
vNHm86vFYuRFImZQ4eP0Dw+PnGDoopObQkxerxxyQeif7zJiai/uf/OIpEwo
y5g5n/X/Xf8ZOgpD04n1qd7+Uway/ht+DEqavPcLuXLz6N7w/or0FPDDbTVj
j8CxeeRu7ZcRUlOUOX6YvLBY/9nPAhIT5Hw6vU2F44fyV1M3+s8sJHt1GuUC
r6lx/LCpQ7/XGW9h+u7c+fCw/Rnc766De7H7wT3ZyBt43/cj3r33W3n3ukfB
+ZzXOQ/iNxj8iaPjtrkum8H0JxXOM+H5pmtwrgm/M0nnfW/iC3//CtpD+Rzg
EfxeZDl+hwXnAKp597T/hHFuhnGjXDLg7/lLEziPif0ZBuNHPBAHY7gvLxTu
z+sP5zkFxaGn4d/L4f+H/I99zIVwD+d5uIcTz4vaw/kwPC+Gv4vf21jwzg9M
hXwx5d0zGcH77sYX+hMF/djA25dUg3y6Ju8ewoMw/rGAx2c4tyYoLyco3473
4DjC/98LcrwX/hnvHK+35J3iNcVlZPqKwe8eZCZy8h+qr2vflf/x59L25J8a
z+6dk4s1Xb+muJnIHa7f/CCTnWsdNfpKjVheJ+lOi2k32sPuyzVyCLv1rlyY
NjRY+58a/5rhqafSftFNiS7e/PWQU2EOV0dvrvSvE+/KlWm2nMnCU+PzufOQ
S6pfjm9yUaVzzodpZUd85eroOWeez+1VqkZ/RNev3bO1kKujh/fR9+fVocC6
lst553LjrEIveMbVkbjY8B3vNVk/59U9l68PbibbTPt+C0llcUdnpJjnOvdO
cjJ2yy4jV3YeQNC63qXba+ynoUr0bphF7M5H5dx442dVzvWMU6az0sob32lW
ceP9vDXVTa2vKi1sipjcz+MXN16sm5IKPIrjHfra9vQ8ZQ0qet2zoWh/HTfe
Z3D+dhHv/G1RXvWwDc1NJCOkz2/pr+ycPNbdOQPnwlA+B87ZdvPqRQ77Vhof
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
Gwfj4+6fhPEjHij/P0UYcrY=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJw1nAf8V9P/xz+fe+/nnns/lUQpKWREO5US0RIiI0ISScOI7JGVEGXvPSJb
RvbM3iOJ7JWQTfiJiv/r2ev8H49O5/V9f84999x7z3mv836fNvsftuvEpFKp
nJBXKqnqv0OlsrlKE+HbykplVF11rVK5VXhf4VuFv8kqldtVP6c2N4k+QvQb
9PcM4eHC1wm/Inyp8OHq90bhvYSvF/199X1MUanM0rW3iL6P6LeI/rXon6ue
I3pF1wxXGVjVmNT2XbVroN9uVj1S7W8WvlZ4mPDFwot07clq94QunSn63qLP
EL2x+jhWZVf1c53ou4t+hejXC+8hfKXwDcJ7Cl8rnKiP+fq7LlwVfke4FP5H
/b8pnAgP1MvqpP6+0722EH2o2q0qfKd+31/9zFKbZaK/pb9T4fPUtqPKt2rT
V/T7RG8m/J1+66yxddBvH+h9XqO/HxD9feGrhe8XXiB8lfBs4dt13X7q/079
fYfwaOG7hKcLDxAeJbxc/c/V35nwCuG3hWvCvwqfqXG+pn666X6/qd5QZQ/1
v55+35hnydxW/yq9M/ehqrJp5udmjjDWRarVXWVg5ndT53up734irik4KPP7
ayD8g+pzcr+vXpnfB3NssHBD4UbCfYSbCDcV7qJ2P6leQ2XbzN+8ofDWws1q
7v9n1T3U5yZq+4vKj9xHpYHGsEPws2yj9muoXUvh7YSbC68lvL1wC+FWwkOE
1xRuLTxW76mVHmQt/b2n6Ourbif6GNHXEr2l/t5Z9Faq24g+VHht4fWFdxFu
Lbye8F7CGwp3EB4l3EG4G+9Q4/xTdQ+V8eqztfrcSL+NUJu2qjuKfqDo64je
Tn8fILy28MbC+6pNe9WbqM1vqjfXs/dQf38I9xPuJTxcbTbQ3+3V5i5dO0bX
3q2/f9f7eEJ/vyn6arnX+B68Y5XvK57DfLtr1L5Q+yfVzxTVl4n8qOrH4vc9
XPROwoOEn1T7TdXn8erjGPX3hX57ijaaICeI9o/wpfp9R114mq65XHhn4TOE
n1HbqaqvZonr2rEqg3XNZWqzk9qcrt8eVZuTVV+kNo8JnyJ8sfATwqcKXyr8
uPBk4UuETxHeXHiY8LnC2wqPET5C4zlJff9b8Rgvq3mcx4t+tugtVa4WfZjo
RzKvhG8SfkP4Lz3jKyrNhY9T+2lqu4bKO2ozTW3uEf1I0U8RLVH5T+95qsYf
9Nuhoh8t2s9qs7/arytaT8as/nroOY/Vb++pHKHyuui/i95N9Pf19yG69kjV
XzNXVTeBbwkPUz+rq5+NhCflHivjfFX1eaLPFH5N+Hx4pPBV6m+oxnOB/u6l
/h8Ifp+z1OZI0c6AXwkfLnya8N3CRwlPFZ4tfJzw2cIXq58h6udYnln0o1Wf
yRwTPkL4dOGr1WZXtblQf9+o+zyqv4/iXqrHiz5b9KWinwU/Ff1e0Q8S/UH6
FD5Q+AHhu4UPEL6fby+8g/AxwtcI7yZ8kfBc3fcS1Xeqn82FVxVeXTjVO9lX
ZRu9r1tEP0T0k+Eh+ruRyvnCpX4/WGWI/n5AbSapzbmivyx8DmMXfkX4XOGb
hJ8VPpP7C1+pMeyiMZwNXxb9ePia6BeIvr3oB3KN6AepPkH0c0TfRvSxvEfh
QcJjkAXC2wmP597C2wqPEz5feLDwAcJba3ylymRkmfo8WLQThW8WniB8kvBo
tW+p9o2YW6KvUrO83ky4sfBqwonm0nfq55so09/QNVX4r+iLIz0T/lF4sXBN
+PuIq8LfCn/FXNJ3e0Rlr6pp7VQW8k5Ee1hluP5emlnuvQ9PySznXxZenFkX
eEl4S+GHaytFe+XbzPL2ReH/ZZZp77HuMsu0BcI7q+8WdcvFvzPzsw9EX1Ud
XKsyTPd9XM/0i57tVdGfyjxfrkSm6NpQ93ydk3n+XsUYRC/qnt99het1z4NM
/e2fe75sJXpZ9zfeUXiNuufcvZm/83T1M1ftdlJprlJPzFM3UCmEd1e9nsqK
zHP/U3imxvmXxjkPflvz3P9CcCd4TN3y/t/Mc/8z0f/LvCY+F/4qs57yjPCi
qA88i6zRvXbWfVqoHC/6pqLvBF8S7iK8LbxCuCeyS7i57vVNaTnRQvjb0rLq
4Mxypq/arCn64tIy6QTRe6neBR4o3IP3IbyO2vykNt3gv7p3V+Sw6D8i63LL
8GZqs6i0brGG8NelZerawj8KbyJ8UGYZuJWuXVf0n0XvjjwW/kG4q/AWwnnd
vGlCZtnYT+3XEv370vJ1ue63tkprlV1EX7Nu3XRJZl31bXhsZh2W9/99Zl31
FeGFmfXBp9EhMuuMzKXfMuukc4V/zaxvviXcSM93tMouyA/d67vSsrmL8LLS
a3kT4RVlXMv65rNL6xh1XTdRZUdd+4xo52icW+WWBUNV1lLZO7Gu2krlKOFT
Vecqm6vPWt28u7vwf6X5wj8qQ9THlmpzsu71ADqu7jWR71z39ztOuLPwYOEp
wpsL74kMEN5SeAQyQHgL4eHwdOE+wnshy/Tsm6nuDz8U/TzRt9H9DmPuCPfR
bwdm/m5bqM1hGsNIjW+g8AGZ58jmwhPUvk3dc+hQ5kLd8/IQ5kjdc3eq8FbC
e8Mb1c9D+nusrp2mur/o+4o+Wbin8K7CpwhvKjyUNan2B+u+o9X+ZNF7iL4L
c1t43brXw/VqM0FtDkcHyzwHewufxLxTm515J6LvqHov0U9kjou+k/4+S7if
8D7IP+G+wiOFTxXuLbyH8AqVXfVu+rEeRe8i+vaiHc56Et5SeBLzWngH1hfr
QHiI8DHMZeGthY8V7ig8CF6vMY/VmHfVeAarXq1uWTVEuFnd8n574dXrlls7
CDetWyf4JLNt9Jiu/Tiz/HxU+MPMesHDwgPUvmHdOlZ/4QZ1615VPcfI3LKo
m+j/lpZtmwpX65avPYrKSuUQmXS/xvkY8wMZJHpat27xUWa94BH4s/oapNJA
ZbfEsrqhSm+1z+rWJ97NLGPvU/tBojeuWx89VvR+PKvoxwj3FR4sPC4zn9gM
fU/334g1pb+PEm4nPED4aNao8EDhI4U3Fu4P/9G9n1W5ADmoe71X2ibZMbNc
XVf0rUVfpW69843M+untor+eWbe9TfjNzLrtHcIvqY9L0AewXXVto7r11G2w
EevWfbcVblK3bjEosR3zq67tIPpZoo/m26jPiaovRD7q94dUBqg8X3oeM4d/
UZuZNev27XXthYV1hnbqc+PEtnNP0S4qrP9spDE9rDJF9I1VP6JyuvBpyLjS
POdUdMXCvGgf1TcU1ufR6/eLuv05UXelzWSNYYuaec6J+nu0yjLhUbruxsJ4
NPNB/S9Hvuv3J+I8aKsxbph4vbTVWB5SmYytrPqJ3Pf5V9f+Upg/rlk138WG
baH+mpfmletUrQt8KHrDxPJgN5UO6uNxlenC/dTHxYV16Y5q0yHOvw31+4Mq
J2Ofqdyr0lelhg0Nr0Su6/cHcj/fCl2/RdV8ZjlzRqUP70PvoTPfWfRC14XS
PLmKPlH192omWtPSMnui2r+o9gPgP8KvCA8VfoIxqvyOLNYYW6j8IXyprhmh
skR4jNq3Uftewq3Uds/CtuV+oj+HfEAnV9uRKv8Tbqrfdyts82ODXFu4H2yX
sdF+ma9rp6PjiL6J7tlVpanoVyCTqh7Pi7ruPngNOrbqj1XG8E5UPqha7ynx
0yB7kGPq82n1uUHFtvm1mttN9XcNfqaytugHId9LFE5/A/r7r2K7bf+qbbfz
1M92NcuCB9W2l/p5XX+P07U3FW5zs+oPCl9zgOqZhft5SvUMlb+Er2NOV423
Up9P1uyHOb9qHRZ7bQ2Nu1ni9XiNrnus8PNfVLX+i57TSr+vpbK0Ylv4+sLv
+WrVjxb+TivQcwrriEsjn9lOpYuu65zY5sXuexB5xHdS/VDhdYV+93GwjneI
nvUpZCQyV3gOslN4Qt3f9Bm1nVj3HHie+affT1L/H6WW0YcHz8lf4zOgq62e
2P7HJ7Ou+rpX5Sjhk1S/oPIxOq36m17YR9Q88XuBT7XR7/epHAMfT+x/6UxR
21uD7Up0oduDbcmuwncG24w9NZ594Qtqf67GPE94gPp6Ndra+MlOFP1E4U+Q
j8Iv65pD0LmQOaw30U/GlyD8Bboddgl8StfOVb27ylXCb6p+o7B+ij42C/sT
3VjX7q+/X9a1nVTfHGzDbqL7PKO/T4P/lLZrsMNXizYR/ruuos8prJN1Kv2t
sfNZX2cX9u2crLG+pPKJ6KeofkXl06r1/4N1769Z84lthraiL9c8vA9ZjV0A
3xZto6p9bO2r9rM9pN8X1+x/66f/cpX19Vv/xPbGhsJ/I3er1hOWaSzvqPTW
3+10/0dVpjL/RLussN/1b/39ssoOVftjec/opc2qrvGjfqN7fluzndJefTym
cpZ+65aYR2BHv63xf6Q2d8Gv8JWhR+q3P0W/A3le8dydrXKc2v8WeUp3ldaJ
1xL+K/jYeVFvZH7frzIJflf1uu2p0jIxT8T3daJ+f07lI3iExj+tsM+Q9bQk
rqnTC88T7ALsxLF6/1/WTJ+q8oLat4nyA9nB+vszrsFS9/mv6ncbhP+t+p0v
1PVf1WyH8v4mVM0PX1A5mPkCVh/3FMbjVGarpFXL7jNZt/jMIv2IinnwPZEP
Iz/vUNmtYl52e+SBO2Nz5G63g+pbVO4U/ijyYeTWUNFuZX3C1zXmx1SPZwzC
T6s+sGrZdm8cz95qu1Zu3WAHfa/H9VyrVMxTx0e+uo9+vx2fYMV8FXnH+OCv
B0Ye2wKbJrdMXNle5Un4cNWy/tSK780YVqlaj0GfCcxb9fFV4TYtdd1euXWY
PVXfhr6iNt/p99Prts9nCR9auJ9Bsf8GUW7cVfV4Po94f+Hd8Xci4/X3F7ru
y8L3/kf1t4V1v89Ud9G3eaDq9zEqvhPG/2Tsf3b8lkfEb7Fmbpk+WnWr3HrF
oNx+0kHCA4Wb516PW6peI/fcHq1vcVvVuhTfEd8lfstb4rfnuw/O/U55n/sl
5pf7Vs3jRqlszfsUfZ7wxDjfejO3wOrvRH3HG9Tm+cLrn7X/nPBmanOG8FGi
rZNbj+qb20eJf3J1bPfc6wj/xmE8f8VziLlUr5q3IkM35VtrDBdULTsPyn1v
7nuA6K+LdghzQPTWuXnOmNx6LTrtYbl9qfhRX1W7Q1XuFj5U9LVz85/x6ufF
uK6ej2vt+oq/7Zj4fTvlHjdj7q66v/psAT8XbppbfvVS3Sw3f+6d25eKH3WU
+r+maj3pQ72fzno/d/OuRb+sajl+dGKZwLPzXbbPvSbPVf1Gbrk6J64t5iR6
JnKqUXzns+JcfTSuRfp5WPcZqPn8lr7TNRrL7jX7S28VnoddC9Z1nxbmDQ+K
/m7NthV6a/vEdtOWqvtE39NVGsv1uXkW/t7r1f9hNevT4+J6fyKuSebznYXl
HeO+S/Wzhe2h2wvLOMbaEV2Udad+GmrMq2BfRd85/BX/+Slqc39hfCx8qLCf
fFqcm2DkzuGFfdnP6VneV3/Xok8KnyQ8gzUo/Knw49ga6Jil/Vpfin55zXuC
d4j+dOFnuC2uZZ4N3YqxN656zt9dGKNndVJZld8Sy9c9hY/X77ML++6mx3ne
PM7r66vWDz+N6421NiPqGNCZU5vGecW8Z/6jN54n2tu55Rt6IroWewdLox7S
tmL6xVXrkF1jGzD65ZVV69ifxDXG+rou6jPQ4SXbRn6C/j6ssA7/FrxT32iz
3POVebsk9omcbRvXxY257838vyn3/brHNvSPLj0fHa7qtbJFXC/wqZuqtvvQ
c4dHXReehu/q2rh+WEfQkdPXxXcIb5mZ+53C//pHHrhPbLOShxTWA2dUbWui
H3IvbMf9CtuP8NKtc49jVNRtZkZeODN+I3jvzRS+ieoPVH4XPl/1u7n1iM+q
5rPw2NER0/9xen9Pl9ZxGqJ7lt5rLIQ/LL3HwDz/SeXtOPffifOfuT85zn/4
Kr5Bfvumar8e+zvY01MK28vMtfmRr7J3NovxVc3zjoh8Dz0YvaZjbD83zs8/
on6CrXVE7J8+2Q+6W+XDqvn6cZG3M/deLa3PY5txHX5pbHxs6vmxz9+Cx8m6
wz7toXWytso6iWUZfr9atIWx5bGL+a2NynqJ5Rd/rxvb43fA/1Co3iG2o83g
2C9t0L+xmbFNsAGxl+mrHu1H/AI7JrYj2cvDRwAtq7rNOcH0RpEvcb+v47vi
3dLX+vG+OyfmW0fG9jOCMTxgUuQD6GtHRJ0NnersYPnC/Po9zjHe17LYP/bT
z1XvoTaNdlDjitf0r3HtYxdBZ2+a+b4kzvne0Ucxv2Jd6o84J7HH6Pe7ink1
vhL0InwZtEePRYe5IVgPge9hW6LDvMkarVqGopei3yMrWd+/RT4wKeqx61Zt
FzEv4EPwy4mRZ35VtazlWmT6ndgwVes446Keg83APdB7J0RMe+Q08nq1SH8l
tllUtYxfKd+rHisYvWBC1A3wKxxZuD0y5LgoR9AH8Jm/UbU8oYaOXoGP7aWq
+Tm2Nv2iV9yl8lbVPgzsFHSSD2uWN8ga7JZNon+jWbRt0RnmYJtljjHgO2An
45rgG/KNiTMo1Hf74HdQyMaerzJNvyWirxesk36fux1tsB2xITW8lXtnqybe
P2sRbRn0kBdq9ungz2Ffrknivblto58B3YwxNo/jxA5fI/oo6KNl7Oc73bOW
28+wOPeYGM8Pqhvk9kV8ofr7mnnLl8I/1TwHGuk5PlA5UX0tEv1/NduPC9Fx
apYVjVP7FfAvfAV/rZnf10V7T2WK6A1UL1A5gfWoNn/X7B/7UXiVPO5z6Pdv
VE5Rm59F2y3z/Gwt2mKVU/FPiN4v8zrC3lsz+sG+EX15zXbMt+g7NdsTz+KD
zBz7gZxH3n9ZsZ29StSROkXfC/rnAnzSmffE8cV0jnoC9mjr+M6X6fd78cVU
/B1aRXqv2G5p1MfwJ06p2J/YIepm8/EHZ95bZ651i/OQ+3SJY+iemNeiA+Pv
wAeH/23PxL9BR5/DFoVvo/d1iPfaPfH8ps+fI99grpbRJ0B76jL6B5h77OlW
K94TTuMcWxzx18LX5N5Xxb/AvGU/mJils0W7Onf/P0b64op1Kd41/oq+Ub/i
nWMv0wd8hnfPN+Ad4u8A//8+aaPEcgneht92flxr+JXgpY3is3xUMd8KsU/6
Bq8fx8KYGOcjzOmq5wN7DQurnv/0D89lj5DYra0T81r63Dz20waZVnodIbOG
JNH3G+UQL26niJE71PyNj5c9O3wexGPgS8cv3StxTMjapdcsdauI+W2zxLEo
zMs+8Z30TPwbdOLg0H3Re1tGv0qfKEsZH750ZNrOUSbuEjFyjfW0Ws1rijWU
17yOLscWibxrtOjr1CyPThbuXbMMuk14v5rlzmHCHWuWfczTTeOcJE5lUvwW
2yeW68j0IXFsyNztEvMv1gt7HNsk5ltVPccehdfyesLnFl7fzIsBcZ4koo8o
vL7WF76g8JpjLvSP84G5ek9uvw3vZ0nw+2dfaVjitdhe9EsLr++hou2aWDdp
Ivphhdc7sTjYgf+vwx6WWI/dI/EaY321Y16UXrPDE69P3sNqoh1VWI7w7diP
x2YZETHfsYPaXFFY5kDjN/z/IxPPG8aMzUksEf6fLSK9VZxXtGOP4yp9i91q
lvv4KdgbzqO8PTaxzMW2x2ZGDrOX1LY0r8AvgE2OPQ5tg0hnvbJu8TnCZ7aK
vIJ5xHxC58KOw9eA7MXuOyix/svewZjE9il+nWMS27n4CbCZsXOxRQgsXRJ5
ziGRzxA3hl8Dnwb2E/FS2FDsMeEfweZY6f9P7AP7Jfd8Za6eg85Ys272l2TF
a2pzFnxR3/+y3HpPd+ErcutqXYQvz60bLVc9Jbfv7RnVk3PbBL3U5src+xjL
VJ+a24fE9+oZv+P6anNJbp1sHeGLc+/LIcceTizLEnzMuXX/jYQvza2fIdMe
SSzX/hPtjNx61grVp+XmWf+qPj03zyJutlncJ0Ketw2W6fi3zyksi/F7n19Y
/uIPYbzIWfRf9GBkPfYNz4cc/6Hw+l+pk6i+pHCf+LV4H8hT7AnGjoxGT1kp
MyrWFb6PPLav3v+03H7pr6JOs1D1DaJ9klvXQZ7wvfnWP8Rr0X+4aGpufRAa
vy2O8mVGbj5eZa8g9zOsRcxa7n255sIX5taV0SnWCH7ezzWeS2vWydELWgY/
y0+i31izXYOv79/4bp/N7TdGP3lH3+VO1RMS6xFrB8sOdJ8Pc783dJ95ud85
enerqHs/pP4PrVn3fl74hJp14HnCZ9Ws36JbvZlbv3ont48AXRy96b3c3w5d
7NPc7zhV39fllntv5fYxYUssyG3HYj+8ntvvxHx7MrcfHFvx5dx7DSeL/n60
f08XnpvbL8HcQ29jf+huZG20i08TfhV7kfZ6H8/n3gM6Mba/ou79jI9y29XY
Qh+zPnJ/U3TGWYnbo/fdlfjdfpZ7TjAfPo5zg3U6J/ceCX6Op3PvkeBr2V7P
fn/pvcJfc8se5E5X9blM5Rxdu6poKxLzv0FqO1xlln5rLPryxHz0bdV3puYj
TUT/NzFPehcZUtr3Op+2qX3kq6jNssT0earvSs136qL/lZg/EQT9c2L+lAj/
mpj/vaH61tR+0M9Urk8dc/qpynWp42G/VrkldcxpVdf+kpi3vck9U/saG4i+
NDG/bCj8d2JZ1L/0PhN7TOtkHjdj3kD4g8S8eG3hdxLz4g2JE0ut07TIPD7G
1jrzs/Fc6+N/S8zT18WvmHh/oI3we4nlx1sqt6eWi3NV7kjNrxupzT+J/dEf
qb46Ne/+UOWq1Pz9P9U/Jebx66n9gsSyZ7no3yfeU2uV+TvxjQbq+T5Rfa1+
/5jnTi0zsCcWJ7YpOmpu/JV7TTGfsRnQbbqKvjT32u8h/Hfu9b6x8P9yr0fi
B5AHyIINVP+Ze82em9reYF2cmdi2OSmuhUVx7TdhjQbrqKyLL+Naxo7pFswn
XyttC7GWX8xtL3WPfOaLuK5Za8gw5FdTXfdbbl2LdcpcZ54Xeif/SyxjF6m+
OXXc8dboSyoz9XdQmz8Ty+RU+LfEe5Gfq74htQ7xhcqMNOoHavNHYvm/UPVN
qeV0JvqSxH7tFhrPktzylHgG+Cw8dl3q3HogPO/33Hxvhfr4IfGc/Ff4x8Q6
1JfMi9Syv6b+f0+sj6yVeQ4xf1pmnlvMqzUzrwHm/4b4OEvHfV2RObbrMPRb
/F2lY66W1bz/tVXUT9BNsii/4Pf4t4kNmKax7qdrr80ck3V0xbofeh/+KPap
/ykdl9sOn27pvImN8WuWjjFjX/jv0vG6/9a8f9S/avsC+cC+VVt02NIxYPjz
rw0e84zM8XTHIxMzx9AdJ3x95ti6Y4Ub69rPS+chrCL8Wen8hF9q9uOSn9EI
/3/pHIZc+P3SMb6l8Eel8yUCvsDS8b6rC39VOidhNeGFpXMSmuAnL523cF3m
uL9jKtYNmOP4P9mjX146JrkNvsHSMX8jM+dDdMV2yBxnN1F4VbX5onTuxN6Z
cyO6iH5Z5pi7Q4UvzRxPdwi6Ez7G0vFbA0rvtTP3Nsq85lnvG2fmA+jfbTPz
F3gLfv3nqvZNsX90R+6/u2fmO/Cc9pn5L7y3a+b1w9rZJDP/hfd2zLw2WBcd
Mq8Z1kvnzGuDddEp8zxmDncR/iqxbo2e9GwcQzfRv0ls/7TLzOvh81mwvwOd
5M+a/dWbRd0MGvuSp2WOTRsuPCVzPOCe0d7E1sSmW0/v6tfS8W1nZo5f20f0
qZlj1kYKn5U5lm1f4VMzx2DuITwtc/zgKOHpmeMHWQtLa963Im7p/MxxoONE
vyBzfOJ44QszxyQeIHxJ5pjHCdHOxcZFEbwoc6zigfpzA/YfSsdK5sF+mb5R
P8F3g735rvjBt7p+MrIOuZI6Jp0EoFdT2y6Z6rmpbXFk9cup5XVz3auWWo9E
Nj6bWj7CI59OzSeRz8+kltG0fTu25/u8mfobwf+eSs0D4Z1zUvPP/4RfSW27
/Kxn2UfP8rr+LjOPifGkqt9Ibe9WsTVS72sin59LLaPRR15KrZOgg7yYWg8h
xnVCcEw1Ma4HBcc5E5d7SHAMM7GpY4L9fuT+jApea+T+7BO8pojvIa6LmC7i
e4gbG1BxPO3BarNlxbkA2wTnoKHnjNTfL6SW1c+nlte9Uusu6C29U8sA1iDy
/57UOgA8+8nUfJu8p13V5zoV50YNDY6HbKbrktR7z+gRs1PrErzDLUrTkRv4
EZAdyA1sV2QHcgb7DVmDfEZvRkYj29Gbke/t1d+fjCGxrEbPRl53TG3voUP+
k1s2I5d7pNY50De68MzMDbXpllpWIac2Sa1/oHt0Ty23kFmdVC9VmZ5Yd8Bm
QH/YNLXOh77XM7Xehs5G3ta+eg+dK9Y7sD3QPUJqWwI7Ar3s/tS62RqZ5xDz
B53xsdTvHz3r3tS6VtPMc4t5ha50X2p9afXM64Q1gpx/PLWsh3/urfJEal3y
0dRj2yy1TkCbvvq9O/MjsXx+KD4v+uQIlQejLvZAfCdl6rXKOkXPfST1s6PH
PRzfLToLfiL0ls1Ty3jmyeDUz8D4sbk3ibrWZsHfiW+E/d0p2AbHzt402NbG
nmsW9Q10vXOjDxmbb81guw+buEGw7YZ93y7YxscWbxNsj49Irfui9+6VWj/m
/WOjtw6201fLvOZZ79j3tWCbGRt9w2A7HR9552DbGbu8DLbNsVkbB9ut2O6N
gu33hsE+d+RDPdjnjr9xS2SdylTdrwj2U6M3rBrsi6f/1YJ94uiQ+OTYM8A2
nxxtMex2fBUh2D5HTybnDvmIfdwk2EZm/+G7xHsQ+B5WD7bhsSN7B9uS/+jZ
76nZb7Z3avl6aNQtiRtBxmFPEQODHTEytWxGLg9PbTOwxvdIbScwb/tEfRRe
ukVqXRMeu3W0x+CBW0V+Ci/tm9qmglcPTG13YXNtmVr3hZ8PSm3jwUu3SW2/
IQt2TG3PYMtsl3ptsC62Tf1d+abbp+ZN8J8dUq891t2Q1LIEuTAgtQ0DP9wp
tQ6K/rlzat0UvfTA1LoFekX/1PYYfH6X1Loseuyo1DoH+sY+qXUXvsu41PoH
usduqW0z3uew1PYbttueqe0i1vjuqW0weO/41PoKusoBqfUM5Ne+qfUMdIyh
qW0n7KZdU9t12HSjU+s36Db7pdZv0G3GpNZv0G36pbYzkaFjU+s3fPf9U+s9
6DzH1h2n8YHmyks1xyUTk0wc/guaS7dUnItxZbCOR77GpeRdVJwfcXmwvkc+
8tXBumKH6CPFZ9o++l3xq5JDcXGwjkFO3G3BunHr6CfHT09+yoXB+gZ5dvcI
T8K+i/5YfL0bRn8mOj75dLcE67fk380M1v/JvyMvkRgb4tCJ/0TXQtedGPyM
exfOWyGOklykA/GTRz3nNOGDhK9T/Ujp+BxiY24K3t9BZzs6OGeE3Nufg3OL
yH8k/5b4fHKmDgjOXxhTOKdjRdSNjxF9BPeNexD4y9ePPnB86+tFnzn+dPIE
7wi2Kd7QN7oys91BHgo5M2MrzpE5K1gPJA/llGD9kNyTycE6J7KauAXWy2V1
xzYcmTun5sxg3ZLcz8eC893IhTlDeO+K81ZODdZjyZ05PVgvJe9marC+Ss4R
+UjkBZDzNT44X4McjSPxZyJHSu/zIjt+iPu/7BOTf3RBsC76fdybZk96UeFY
QeywxYXj99jnIXfp/GA9Fh8PsYvwFnKdzgvWdckHOTY4f+1VvbezM+vG5Nqc
EJzjRg7OpOBcOXJGjg8xn45xCg+pOEf1j+BcMPLUxsVnwUbbNjg3fLO6c5fe
rNnvh/8QuYYfD7/f8VpzW9edJ/t2zb4+/ITIX/xm+APh553qzud6TW0uLB2j
Rb4G9t3uwXnl2HfDgnPDsQH3CNYVybnbKzi/iVy84cE5Mp+k9lc0QeerOzd8
EbZEaV1t/dSxcMTT43tnTrLxx371gtK5bE/UHF9NfDxxRi8XzgUlHur1wnHw
xCJ9XNqn95Taf4WOQz+p7fqrgvNYPymcS0A8H3GYxL2Njfb1FcF5r9jprD3W
HXb6NcG5vfgNLgnOt90x6jzz1P/5dccybafnuVD4udKxseQd/y84H5CzHfoH
nw9ADvKfwbl++DvxA+HL4cyHPiHm0qr9gOAzBE7BJ1o49pCzKQYGnydADhH5
fuT6YZtvF3wmAHFEg4PPCsB+x9e5QcWxRkOCzxngrAbOhiAfYbL6f61wDCPn
OWwVfDYCPoEdg3P8yeUcEZxbR87mSMaKjUmMeeHYXuz0XUTvBN+uOxboKdEv
En6hdGzsxcIvlo63JSd07+A8PvwSOwWfY4C/YufgMwqYO/i88DeT/zg6ODeQ
fMz9g20Tzr7YMjgve17p8y4eqfmcjc9Ff6ji80C+CM4LIwf2k+CzRMi9fSo4
55rcHPIbsT+Jb+LsAmKcyAv+VG2erzgfgfMg2Fskt/fJ4LMFfhU+o+6zP8gF
flT0yyvO+Z0THH9IvtszwXnf5Go9F5xHT07cs8E54MSEkLNCrMX+pfNByH3o
mdtfg6+GHAZsfuz9cWpzaN35OQcJH153XhC8mpwV8oGQNUfUnf+DLDiq7vwf
8oz+qtkXMD33+SCct9E1d24tebWsPeK0iSliXZHDwnkZ5HFw1gb72pzbwFkO
31WcP/tI8HkO5I3eF5y3Tk7fvcE5/uT0kb9HfCnxepwpQcwe+WTME+KxiSsn
t5HYctYVPgX8CfAmcnPwDxD3TQ4+MdMLdO2UunNT8dmMjX4bYvTIHyVObyv1
3QeemzrOiNx8Yoa2Le2HPCF1Ph05C5yFQP7jm8FnofRR2yU1n6tB/uNbweel
kFv3WnA+AnmFDwWfEUFO4oPB50iQS/tw8DkS5DDODj4HYLvSvuIpqfP+ng8+
S+HowufVrMyNUL0gOE6VOCPOtiHWiPy+V4PPJSA3823hB4XfL5yXNKvqmFZy
W9gjJk9zbvB5L+QCk/vAs7BOyJFfVHHeB/n6Cys+z+Edtb+1Yj/ZwGgLcLbG
y8G57Zy58ZLwFRWfp/FicC48Zxe8Hhz7hG5HzgbvhzMWHhd9WsW5HuSmEMtx
Y93fhT0fbBP4NvYJcoJcFWIViDfmPBHiF8jJIa6XNXV87vx88vE4F2JecI4k
Z/W8G5wjyXlBXwbnon6ma3/MnHPN+TwfBMfAcD7Ph8F5oB/XHB/MO+cMnB+C
zw3gDJwfg88W4Oydn4LPHOBMoW+Cc7o5L4hzhYij4CyjxcF5VZxl9G1wTj3n
BS0MzpPlrIn5wTmenGX0WXCeLHkf5I6QK0J+IucKsS9PDhJnGTAecs+/Dz7j
gvgf4q+JBSK3kdxgfNbkXXJWBfEJV6Bj1J13d1Lh84vIcWS+Tao7r+YStTmm
7jhpYvk5M4V4hv1yn1nAeQXjsRNzrxHyOIkdIX5gp9x+c3zmo0rbpB00t+fW
HHteE31Ybh83/m1ihDlXhzhh9mM5t4c9WeKFOXOGmGH6nhn7R18kH56cTOQC
usXv8VlOqjuem9znI4LPIhiRO6+YnOJ3ao5155wLdCBizPHPk6PKARH468nf
bJh7Hxxdijh5fP7ki3EmBfHU5IhwThR5IuSPcpYLMe/oS2fXnUOLfoK8Prdq
uUAsLjG35JURf/ha1TlS5E2QK7FfaR8K/hP4MPvdK8/LKBw3T8w8MR3EDBPX
Qb7eR5EvYY80Lh2rBd8mn+L8qBch0y+seg+U2JtDUssI4l2IdeGbknsyJ8oX
4szJ+yT/hZyXZ+K3Jg6TfCNiv4kDv7zqWADkMvtQ5M5yjg35s8S/tItzhvGj
GzxedQwscp94oaTu3G2+CXo1+QAHRR5Ojg95RvCxC+rO82HeEvtC3AtxuOhX
YyrWz4nRJz4fG23V0jF3xPiQw0icD/OZ+Btibz4vnG9ArgF6CTFL+NB4/zfU
HbfEnCEniPwJcnk5w4eY/d947rpjncmdnBR1A2KFyJEkXmhpaXuN+U58EG2I
txlcOh7gyNT50ORbkxNNfhtn+5wV5TixSsQpkbvGGT7kr5ErzPlC5KoSQ0Lc
1MTU64i8rvurtmH/KxxbSt4wZxORO4zMIq6e3Fzy2zhPiRy3hYXzGcbF5yJ/
bUHV+RzEHxKbw145sViHps7X5JwhcjbRSabXfTbQ/wG2tpZQ
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtnAXYFcUXxnfvvbt39rMb9S/YYIEKiAGKWKhIqYiYhJISEgJKCwhISEgK
qIiAQZgoqaKI2N2BjYlgx//98e7zfPN8c3ZmZ2vmzHvec849qE235l0LURR9
Wooi/UW3J66foIOV4ih6sxxFe1dE0Yc6tlzti9X+l+qnqv0/tS9Oo+hAlWNU
P1PH7ihGUW2V/pK7S75fbb1VVurcEyWvU9vVKter/oD6vKfxp2vMzzXmGvXp
r767qxystndV3lf7Prr+F2pfq/YhkrdkUTRRcgfJszXWCSo3qW8PjVlTbReo
LFS9k8rZ3K/G+1jtbdT/k5Lv5w3J3VQe1Xipxn9SxyerfZP6f6ZSRW0HqTym
9rLaV6h9itrvVtuPqp+isf+n9r5qP0LtfXWssdo/kFxJ8peSn5L8oPoXdWwn
9X9P8mTJseQvdO4KyXdKLkj+UvILkofq3v5R6aFnmqZzntX/1io9VX9IfU7U
szVTOVnHbpa8RP/PVXlB9fbqs5Zr6frrdf27NN4ayTtKfk7ynZKfUt8rVLqp
70ydc5+u1U3lQbXV1rFj1P9olQck/6n2p1TfWec/r/Pv1rF5Oreuyi1qu0H9
H1W9Kd9U9b469rT676L+G9R/nvofrXu9iG/CddVntdp3UPuzap+r9pWSKySv
lTxT8gz1O16ll8a6Tv2PUHs1ldlq+0PH+qt+lPr3V/+mOjZdfY9jPqmti/ov
0bMcpHKc5LMlr1HbZUWPNV7HaulemqrU1LE+kr/RePtqvK0a71WNd4LaLlG5
suj524frq/0GtV+g9nt0vJ7KaL692g9T+6Eq49X2O3NG9QNVBkv+TfJa9b1c
hUU2RfIi1c9QuVf11jpWXddqrnJm0evhQs2Hv3X/nzCfNcbI1POjj9rvUP+R
ao8kfx77G2WqB5UGkj9VuVHtz+heO6s+nD5q+1fjL9GxUZzKfFc5LfY1juR9
lv1uz1dJVC+p1I29Zhar/p/OX6rzR+v8eqrfovexUvfVWfezVO2x5IfUfqva
/wmad5JrlD1/OqvfASpdVN+gcpH6nSR5muqXMX/VL1L/ZTo+RtUeaqus0lVt
r6gs1/UKan9Y7WPVXkttP7AGVZ+o9l/1XnZSuVH3Mlxlm+o7oH9Uv1nlLvX9
Qef2UN8xvB+dvyK1bqD9+fx5btKx99X+kO6nKPlxnXObrjElsc5AV4xSOV31
mqmvfanKw7wv9V+u4xOZA7r2/ioDNfYolVt0/mtqu059R6o8ov6J+j+hY5PU
/2SN9bP6/BL5nRyu9qplz6WGsfXYkUXfK/fcU20/6Z6H6fyW6Be1naOyWn2v
Uftzqrdh/ai+nO+v+tlF19vp2GLVG6qsk3yt5Hs13jm6n9kar4/G6yf5SMn9
JDeRvJvkXVUax9ZZc3XuiSqDY+ukSfre09R/x7Lvt7+e5T8906Y4X7Nqn1th
ncb8nKNz6/B+Yu8Bd6p+ksrQ2Pe8A/pA5SzJn6lU13nfaMwvNNatko+X/B3f
VPIEyTenvl5PjTFD5z+md/O7ynzd/0DWs8aqo/KP+l6sspf61lG5XfXLVSqr
rYrKr7HX0CMap4nKVQXrh15q+1nj3azxLtV4B0s+pOy1zT0OT70ee+mcmTpn
gORVzHfJIySPSK3ve0ueJXk/1fdX2RZ7DT7J+tX7Wa3xp2uoFyXvIfktyUsl
7yV5T5ULVd8ae+2yhodrvMUFr310wAjJSyQv1LvZpnMvVN8DYr9L3ulItS9V
e1fVe6B/1a+Zxtyg+3te5ST1/Uhllb7XsZnnyrWSp6V+f0N1/vyCdQM64mbJ
D7IHqn4A+k/yCsmnpH7HvNsZKv9pvJm6XgPd014FPwvPNFb9H+caaq+Tee/+
l/2Tdaiiw9HuOjZX9dEq6hLtwXxJvf4qSd4H/a6Ox2We+x1Y45Kn6nrr6Mf+
pf9rVY4Ga7Cfq314hdcx63ej2l5Q2Ufj/SR5Z/YvlVG6v4c05hi1bda7+krt
36m9huQ9VFqqPg7Mo/oZKs3BNzxzfr/0Len82qrvqdJK8mSVd1R/W+VM9f9F
8huqv65SW/IWybNUn6nyruSLJD+j+tMqx8bWT+frWafr/vfVPY7TPZ6Xef3t
JPkWyYP0fKdk3pv2i6PtL26W2i/W81bSsVc01ssqh6vp59hrmzU+Wuc+XPD3
OkDnnKH6N+pzuvrurXIla1/lQ7WP4Po61i62flvO+ygYQ7AXsifepvHW6Nix
qh+nMlnys5JvSz3/b5Q8p+C9kj1zguRVkpuqvYlKd411auy9HwwwUe1Pqf1E
1U9SuR3Mk+v3J5lvqm+MjF3AMJPU/gx4NDX+ukHygoLf765gVtaS5BZ6noP1
vLUkb831/RN8r4Ix64P596BvfZVG6jtDz19bY07h/avtXJXW6nuKxjhC7aPV
/piOXaT+u0qupnKh6juq/fbUe+NgnTsP/BSMkcBGzKnHJR8D/ih4zhyo+2mj
b3cFeAudqvOnq7RgrqrPparvl3qtPs7+qv4z1P8a1Qeh8zTey8FrgT2mha7d
Wfe3Rv1qSj5H/29V/7ZqH6BysuSBkluzV/J9NfZpknfTtb6WfFfq/buqzt1P
x3qhe1U2SG6a44/HuT+1zWF81pbK1Wqbr3JlMMYCW/0JnmZ8lRNUPwD8qfO7
63pXqW8/1pja3lLpq/fVSWV39KPKGNUfKdheeEClXsHvZKWOX1I0Fh6BPlO9
pUqHgjHratUvVelYMIbbRfdyh97HQl3zyIJ138Vg1qJ14BLwmNoOV99DVVbo
eIui907w98Vqn6n2qujG2HOTOcpeA+ZfqHtrqzJBz1eD763+9biW2j/XsYfV
dhj3L7kxY+r9DKiwHkd/P6S2Q1VOVr1RPp9mM780xjGSX9a9tFI5Gf2pPgvU
9wqVIawFHWuoccaq76EYeTkePE/n36lj/XVoIfu25DmSb5D8EvuN5LclL0PW
2I1UvtG5Ba6H/lb7O2p/KPK34Js0i23DHM9cVzlf57wteXTZ+qpS2fbXUtaM
yquxv8lC1Ruo3BnbhtjIeOr/psZfov6Pqa1Z0VgZm3KRnq1j6rl1PPgN/aX+
L6v/Ih1bD16R/JLkhei4stdrrbLtK3QROgnb6y/wiMb6SOUWdL3K47pWczBU
wTblctUvVGlbMGYZre8zuMIYopbGGKv/r/G+1X6r+t2g9pMz20Z75/r3QJWz
JP8k8TnV++v8Cp1zAfORvpIzyY1i641qKmfH1h+sT+YIc6Otzn+Utceeo/bm
OtZF1+ul899Qv51i666j0KGxdVh3tffhe6p9t9i68mj2q9g6c57qZ1E09oHs
3+o3SO/uINX/xt5R2/noMtUP0bFKYKEK2/XY80+y91bYJn5RfU7S+QNU/w6b
R+Voyd0kb8YGU6kiubXkb4vGSCvAL+gjHZsR2f6ZrvoPahtXsH38veStkifn
+mGZrn1ewfd8neRH1P6T2ifo2I0aryf2qo5fDWZU35dUBuV4/BH2PpX6ev6m
6AS9n4Hqfwz7nPqPkjxI8nGsS8lPaJzzNX519d8s+WrJ90r+Udcbz/XU/8YK
8yaVcv3JmmWt8s4O0vsZVWG7FHsUPmKMzv9e548tmA/4WPIvkicVrO+Xqm/D
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
           "]], 
          Polygon3DBox[CompressedData["
1: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
VoPdxbawOewpVpONirmQzY29F6sVe9vYf7H5sf6ySmwgW8MmsR6sr892DRvA
arHZbDJry5axwfGds9rGjmPb2AJ2nDVj82N/yFazA6x+7BvY02wpO8gasmmx
92PLYl/JGrCpbA+7P9Zu1ohNZ8+wB9gJ1oItZC+ytUk6/9+YTefvpjnpWvC6
asWWshNyuXLlYx2LNd531lr18NvcJ1dHbrzcdrmFSbo3zbBC8b1l0n3qK6wl
WxT7D7Yu9oT6M7Pp3xPxd8V7jr0s15wt0D7K1sReIL4L9Wb+dK8Xe76dctXY
CJbLZrEd7BY2nG1iM2O/6136Wv8t95ujprvnW2O/qio7/he5/Y5/ZmxbtjH2
f+ygYx8Ye0hNMmaLOtf4PPGeqCvkeseczc8Y29rYR9gptt3YTrFPyabzVMxX
Bx2bqF/c2Erxtwg7w+4wtiS/XrsHu0m+C7uQXck6s3KsFyvFyrGerBLryIqz
0qwdu5Ldzi5gZVkndj3rzEqwMqwju451ZRexq9jt7M+sG7s49p2sCyvP8rrf
AeqG/Ok8FPNR/J27mW1lv2XSv3mf158fc7nj6z2zduo9dUBNYLmqkOdXLPYR
6u786TOIZ/G+zEE1UXuzKiJ3XvztrCbJHZK7kR+Kv9dj/6O9Qb6TOh776tiv
GlNQTXXsbfZZfBf6WTUvzLg2Pttyftr5drjnJWyWc3Zhj7GxbDGbyW5nj7Ix
7Gf91fxxdU/B9G+TRdoztDtrr5IbLfel655Q01xvd/yd4dqTXXNS7EXl3pHb
K/eFzDE1RWaXukTufzQUM70=
           "]], 
          Polygon3DBox[{{2487, 1949, 1948, 2486, 1486, 1487}, {1954, 2092, 
           1378, 1488, 2488, 1953}, {2367, 2400, 1286, 1088, 999, 774}}]},
         Annotation[#, "Charting`Private`Tag$154368#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1077, 1282, 2509, 1078, 1294, 2519, 1102, 2588, 1307, 1116, 
       2590, 1320, 1130, 2594, 1333, 1144, 2601, 1346, 1158, 2611, 1359, 1172,
        2623, 1372, 2548, 1186, 1385, 2558, 1200, 2636, 1398, 1214, 2638, 
       1411, 1228, 2642, 1424, 1242, 2648, 1437, 1256, 2656, 1450, 1270}], 
      Line3DBox[{1079, 1283, 2510, 1080, 1295, 2520, 1103, 1308, 2529, 1117, 
       2591, 1321, 1131, 2595, 1334, 1145, 2602, 1347, 1159, 2612, 1360, 1173,
        2624, 1373, 2549, 1187, 1386, 2559, 1201, 1399, 2568, 1215, 2639, 
       1412, 1229, 2643, 1425, 1243, 2649, 1438, 1257, 2657, 1451, 1271}], 
      Line3DBox[{1081, 1284, 2511, 1082, 1296, 2521, 1104, 1309, 2530, 1118, 
       1322, 2537, 1132, 2596, 1335, 1146, 2603, 1348, 1160, 2613, 1361, 1174,
        2625, 1374, 2550, 1188, 1387, 2560, 1202, 1400, 2569, 1216, 1413, 
       2576, 1230, 2644, 1426, 1244, 2650, 1439, 1258, 2658, 1452, 1272}], 
      Line3DBox[{1083, 1285, 2512, 1084, 1297, 2522, 1105, 1310, 2531, 1119, 
       1323, 2538, 1133, 1336, 2543, 1147, 2604, 1349, 1161, 2614, 1362, 1175,
        2626, 1375, 2551, 1189, 1388, 2561, 1203, 1401, 2570, 1217, 1414, 
       2577, 1231, 1427, 2582, 1245, 2651, 1440, 1259, 2659, 1453, 1273}], 
      Line3DBox[{1085, 1462, 1463, 2513, 1086, 1468, 1469, 2523, 1106, 1471, 
       2667, 1472, 1120, 1474, 2670, 1475, 1134, 1477, 2673, 1478, 1148, 1480,
        2675, 1481, 1162, 2615, 1483, 1484, 1176, 2627, 1486, 1487, 2552, 
       1190, 1489, 1490, 2562, 1204, 1492, 2676, 1493, 1218, 1495, 2678, 1496,
        1232, 1498, 2681, 1499, 1246, 1501, 2684, 1502, 1260, 2660, 1505, 
       1506, 1507}], Line3DBox[CompressedData["
1:eJwNyedGBQAYx+H3cCoOEe2tC2jSoKVBg4YWDaqjRXXSoPShUqSUktSXuobu
KyIiItLz4fF7vf+a9M5EJhERK3QnI66yI655z4qo05NURK3mU08DH7YmPbU1
agHNtPBpa9MzW6sW0k4HX7Yb/y53J0X0cOvXq9/2fu2jmAHubIP6YxvWIUoY
4d42qr+2cR2jlEv/SZ3izzaj0zz4l+kscyRY4Nx/XstZZIkkaS5sy1rBKmvk
8Oi/oetUsskWx/4pzbBNFbs8+e9pLgfsU80hz7YjzeOVF974B0ZRKYI=
       "]], 
      Line3DBox[{1091, 1289, 2514, 1092, 1301, 2524, 1110, 1314, 2532, 1124, 
       2592, 1327, 1138, 2597, 1340, 1152, 2606, 1353, 1166, 2617, 1366, 1180,
        2629, 1379, 2553, 1194, 1392, 2563, 1208, 1405, 2571, 1222, 2640, 
       1418, 1236, 2645, 1431, 1250, 2652, 1444, 1264, 2662, 1457, 1277}], 
      Line3DBox[{1093, 1290, 2515, 1094, 1302, 2525, 1111, 1315, 2533, 1125, 
       1328, 2539, 1139, 2598, 1341, 1153, 2607, 1354, 1167, 2618, 1367, 1181,
        2630, 1380, 2554, 1195, 1393, 2564, 1209, 1406, 2572, 1223, 1419, 
       2578, 1237, 2646, 1432, 1251, 2653, 1445, 1265, 2663, 1458, 1278}], 
      Line3DBox[{1095, 1291, 2516, 1096, 1303, 2526, 1112, 1316, 2534, 1126, 
       1329, 2540, 1140, 2599, 1342, 1154, 2608, 1355, 1168, 2619, 1368, 1182,
        2631, 1381, 2555, 1196, 1394, 2565, 1210, 1407, 2573, 1224, 1420, 
       2579, 1238, 1433, 1252, 2654, 1446, 1266, 2664, 1459, 1279}], 
      Line3DBox[{1097, 1292, 2517, 1098, 1304, 2527, 1113, 1317, 2535, 1127, 
       1330, 2541, 1141, 1343, 2544, 1155, 2609, 1356, 1169, 2620, 1369, 1183,
        2632, 1382, 2556, 1197, 1395, 2566, 1211, 1408, 2574, 1225, 1421, 
       2580, 1239, 1434, 2583, 1253, 2655, 1447, 1267, 2665, 1460, 1280}], 
      Line3DBox[{1099, 1466, 1467, 2518, 1100, 1305, 2528, 1114, 1318, 2536, 
       1128, 1331, 2542, 1142, 1344, 2545, 1156, 1357, 2546, 1170, 2621, 1370,
        1184, 2633, 1383, 2557, 1198, 1396, 2567, 1212, 1409, 2575, 1226, 
       1422, 2581, 1240, 1435, 2584, 1254, 1448, 2585, 1268, 2666, 1509, 1510,
        1511}], 
      Line3DBox[{1269, 1449, 2685, 1504, 1255, 1436, 2647, 1241, 1423, 2641, 
       1227, 1410, 2637, 1213, 1397, 2635, 1199, 1384, 2634, 1185, 2547, 1371,
        2622, 1171, 1358, 2610, 1157, 1345, 2600, 1143, 1332, 2593, 1129, 
       1319, 2589, 1115, 1306, 2587, 1101, 1293, 2586, 1076, 2508, 1281, 1461,
        1512}], Line3DBox[CompressedData["
1:eJwVz8kuQwEYhuG/pVRR09ZU8zyPt+EKRGKJvaWpe2qIRIKNnZ0rcAWuwNK8
Mzahni7efO93Tr785+RWNpbWExGximJlxHUqoqI64qwqYlEuoMibMMfnccJn
5WkmYkb+6G+2F7ZJPa+3yGa88iym+DSO+aScwDe/tyvYJfS98h3ZiBdeizF+
6c64PNJH5Qi++J1t3jb0Xb1BZvHM0xjiwzjkg3IAn/zWbtOuxHdQX/4nN+rk
k55CH+9HgffKHnzwG9s12z++Xf5GzzN45El08W4c8JzsxDu/slu2O3fnV99C
jXdpPPCSd+28A/t6m2zFP+JBLlQ=
       "]], Line3DBox[CompressedData["
1:eJwV0UkrhmEUBuBHpkgp/oB5tmLDBgss2JBiQxk2JGwQSikyl8SChcyzzPPW
L/AL7JVSSpFyfYurc5/n3O/m+9I7+hv7okII4/zGhHAeG8JGXAhrpDDKGSN8
uG+7P8tFJDPEZGIIp+YgbzqrOk9yIUmsuA+YJ/TzqjOj8ygXMOyeYPZwTDcv
OmM6D3I+cXRxRCd37n3uc769t+cRTRuHtEamzrR7u96dPZdACwc0s+y+rtek
c2vP4U9uNPdpYElnQafW+409mx+53pxw2zPrGNcp934tZ/EtL7rXyLtUM6BT
7P1Kzoz8Hu5f9kp5hwo6dNK8XcoZ9Op82svlbcpo0kn1Nut2YU+P/D/2UnOL
Eqp0ptzjvZ/b03iX581N5ljnHwrKQIg=
       "]], 
      Line3DBox[{1276, 1456, 1508, 2661, 1263, 1443, 1503, 1249, 1430, 2683, 
       1500, 1235, 1417, 2680, 1497, 1221, 1404, 2677, 1494, 1207, 2718, 1391,
        1491, 1193, 2717, 1378, 1488, 2628, 1179, 1365, 1485, 2616, 1165, 
       1352, 1482, 2605, 1151, 1339, 2674, 1479, 1137, 1326, 2672, 1476, 1123,
        1313, 2669, 1473, 1109, 2716, 1300, 1470, 1090, 2715, 1288, 1464, 
       1465}], Line3DBox[CompressedData["
1:eJwVzTlKg0EYBuARkj+QUtwtxN4L2Fl5AHMCrazMATQuneBeSSrxHu77vu/7
XgjRaEAQU/ikeHjfmW8+prEj3dZVFkLo5D4K4Zobprjjlvd4CA9ykSW6mSm9
SYYQmbXEQsg5b7PDMHvskjN/lMus0MOgvVlZbpay+6Hvc8AIRxySN3+Sq0za
WZMZ5mgwa7f7qR9zwihnnFIwf5brbNDLPE3u0/by+jkXjHHFtD8u5Y83L3KT
LfpYoNl9xu6XXpEIoZJxvVpW8Wv+6hzT4/Trf7S6H7L3rde4z/qnVk4418s6
it68OUd6ggG9SMp91m5B/wetRkZC
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1851, 2129, 2508, 2041, 1850, 2509, 2042, 1852, 2510, 2043, 
       1853, 2511, 2044, 1854, 2512, 2045, 1855, 2480, 2513, 2046, 2184, 2686,
        2246, 2247, 2200, 2230, 2348, 2388}], 
      Line3DBox[{1862, 2401, 2586, 1861, 2519, 2054, 1863, 2520, 2055, 1864, 
       2521, 2056, 1865, 2522, 2057, 1866, 2482, 2523, 2058, 2185, 2687, 2250,
        2251, 2202, 2232, 2349, 2369, 2394}], 
      Line3DBox[{1872, 2064, 2528, 1871, 2063, 2527, 1870, 2062, 2526, 1869, 
       2061, 2525, 1868, 2060, 2524, 1867, 2059, 2716, 2304, 2336, 2335, 2337,
        2697, 2402, 2233, 2203, 2253, 2252, 2296, 2505, 2696, 2365, 2368, 
       2399}], Line3DBox[{1874, 2403, 2587, 1873, 2404, 2588, 1875, 2529, 
       2065, 1876, 2530, 2066, 1877, 2531, 2067, 1878, 2667, 2131, 2068, 2186,
        2688, 2254, 2132, 2204, 2234, 2356, 2384}], 
      Line3DBox[{1884, 2073, 2536, 1883, 2072, 2535, 1882, 2071, 2534, 1881, 
       2070, 2533, 1880, 2069, 2532, 1879, 2669, 2405, 2305, 2134, 2338, 2188,
        2493, 2668, 2235, 2205, 2133, 2255, 2187, 2711, 636, 2374}], 
      Line3DBox[{1886, 2406, 2589, 1885, 2407, 2590, 1887, 2408, 2591, 1888, 
       2537, 2074, 1889, 2538, 2075, 1890, 2670, 2135, 2076, 2189, 2496, 2699,
        2136, 2206, 2236, 2357, 2371, 732}], 
      Line3DBox[{1896, 2080, 2542, 1895, 2079, 2541, 1894, 2078, 2540, 1893, 
       2077, 2539, 1892, 2592, 2410, 1891, 2672, 2409, 2306, 2138, 2339, 2191,
        2494, 2671, 2237, 2208, 2137, 2256, 2190, 2506, 1763, 988}], 
      Line3DBox[{1898, 2411, 2593, 1897, 2412, 2594, 1899, 2413, 2595, 1900, 
       2414, 2596, 1901, 2543, 2081, 1902, 2673, 2139, 2140, 1903, 2700, 2257,
        2141, 2207, 2142, 2358, 2391}], 
      Line3DBox[{1909, 2083, 2545, 1908, 2082, 2544, 1907, 2599, 2417, 1906, 
       2598, 2416, 1905, 2597, 2415, 1904, 2674, 2146, 2307, 2145, 2308, 2309,
        2497, 2701, 2144, 2209, 2143, 2258, 2299, 2721, 2364, 2366}], 
      Line3DBox[{1911, 2418, 2600, 1910, 2419, 2601, 1912, 2420, 2602, 1913, 
       2421, 2603, 1914, 2422, 2604, 1915, 2675, 2147, 2148, 1916, 2702, 2259,
        2149, 2210, 2150, 2359, 2260, 2396}], 
      Line3DBox[{1922, 2084, 2546, 1921, 2609, 2426, 1920, 2608, 2425, 1919, 
       2607, 2424, 1918, 2606, 2423, 1917, 2483, 2605, 2310, 2153, 2311, 2312,
        2689, 2262, 2152, 2211, 2151, 2261, 2300, 1815, 2375}], 
      Line3DBox[{1924, 2427, 2610, 1923, 2428, 2611, 1925, 2429, 2612, 1926, 
       2430, 2613, 1927, 2431, 2614, 1928, 2484, 2615, 2154, 1929, 2703, 2263,
        2264, 2212, 2265, 2350, 2386}], 
      Line3DBox[{1937, 2621, 2436, 1936, 2620, 2435, 1935, 2619, 2434, 1934, 
       2618, 2433, 1933, 2617, 2432, 1932, 2485, 2616, 2313, 2315, 2314, 1931,
        2498, 2704, 2268, 2213, 2267, 2266, 1930, 2713, 2379}], 
      Line3DBox[{1941, 2547, 2085, 1939, 2548, 2086, 1943, 2549, 2087, 1945, 
       2550, 2088, 1947, 2551, 2089, 1949, 2487, 2552, 2090, 2192, 2500, 2705,
        2271, 2216, 2238, 2352, 2389}], 
      Line3DBox[{1963, 2633, 2446, 1961, 2632, 2445, 1959, 2631, 2444, 1957, 
       2630, 2443, 1955, 2629, 2442, 1953, 2488, 2628, 2316, 2318, 2317, 1952,
        2501, 2706, 2274, 2215, 2273, 2272, 1951, 1820, 1779, 2398}], 
      Line3DBox[{1966, 2447, 2634, 1965, 2558, 2098, 1967, 2559, 2099, 1968, 
       2560, 2100, 1969, 2561, 2101, 1970, 2489, 2562, 2102, 2193, 2690, 2277,
        2278, 2218, 2240, 2353, 2370, 2395}], 
      Line3DBox[{1976, 2108, 2567, 1975, 2107, 2566, 1974, 2106, 2565, 1973, 
       2105, 2564, 1972, 2104, 2563, 1971, 2103, 2718, 2320, 2344, 2343, 2345,
        2698, 2448, 2241, 2219, 2280, 2279, 2298, 1790, 2377}], 
      Line3DBox[{1978, 2449, 2635, 1977, 2450, 2636, 1979, 2568, 2109, 1980, 
       2569, 2110, 1981, 2570, 2111, 1982, 2676, 2156, 2112, 2194, 2691, 2281,
        2157, 2220, 2242, 2360, 2385}], 
      Line3DBox[{1988, 2117, 2575, 1987, 2116, 2574, 1986, 2115, 2573, 1985, 
       2114, 2572, 1984, 2113, 2571, 1983, 2677, 2451, 2321, 2159, 2346, 2196,
        1577, 2243, 2221, 2158, 2282, 2195, 2712, 2378}], 
      Line3DBox[{1990, 2452, 2637, 1989, 2453, 2638, 1991, 2454, 2639, 1992, 
       2576, 2118, 1993, 2577, 2119, 1994, 2678, 2160, 2120, 2197, 2502, 2707,
        2161, 2222, 2244, 2361, 2372, 2390}], 
      Line3DBox[{2000, 2124, 2581, 1999, 2123, 2580, 1998, 2122, 2579, 1997, 
       2121, 2578, 1996, 2640, 2456, 1995, 2680, 2455, 2322, 2163, 2347, 2199,
        2495, 2679, 2245, 2224, 2162, 2283, 2198, 1806, 2507, 995}], 
      Line3DBox[{2002, 2457, 2641, 2001, 2458, 2642, 2003, 2459, 2643, 2004, 
       2460, 2644, 2005, 2582, 2125, 2006, 2681, 2164, 2165, 2007, 2503, 2682,
        2166, 2223, 2167, 2362, 2393}], 
      Line3DBox[{2013, 2127, 2584, 2012, 2126, 2583, 2011, 1433, 2010, 2646, 
       2462, 2009, 2645, 2461, 2008, 2683, 2171, 2323, 2170, 2324, 2325, 2504,
        2708, 2169, 2225, 2168, 2284, 2301, 2722, 2383}], 
      Line3DBox[{2015, 2463, 2647, 2014, 2464, 2648, 2016, 2465, 2649, 2017, 
       2466, 2650, 2018, 2467, 2651, 2019, 2684, 2172, 2173, 2020, 2709, 2285,
        2174, 2226, 2175, 2363, 2286, 2397}], 
      Line3DBox[{2026, 2128, 2585, 2025, 2655, 2471, 2024, 2654, 2470, 2023, 
       2653, 2469, 2022, 2652, 2468, 2021, 1503, 2326, 2178, 2327, 2328, 2692,
        2288, 2177, 2227, 2176, 2287, 2302, 1843, 2376}], 
      Line3DBox[{2040, 2183, 2666, 2492, 2039, 2665, 2479, 2038, 2664, 2478, 
       2037, 2663, 2477, 2036, 2662, 2476, 2035, 2491, 2661, 2329, 2331, 2330,
        2034, 1657, 2294, 2229, 2293, 2292, 2033, 2714, 2380}], 
      Line3DBox[{2130, 2053, 2518, 2481, 1860, 2052, 2517, 1859, 2051, 2516, 
       1858, 2050, 2515, 1857, 2049, 2514, 1856, 2048, 2715, 2303, 2333, 2332,
        2334, 2047, 2693, 2231, 2201, 2249, 2248, 2295, 2719, 2400, 2367, 
       2355, 2381}], 
      Line3DBox[{2181, 2179, 2180, 2685, 2027, 2472, 2656, 2028, 2473, 2657, 
       2029, 2474, 2658, 2030, 2475, 2659, 2031, 2490, 2660, 2182, 2032, 2710,
        2289, 2290, 2228, 2291, 2354, 2387}], 
      Line3DBox[{2382, 2720, 2297, 2275, 2276, 2217, 2239, 2695, 2091, 2342, 
       2340, 2341, 2319, 2717, 2092, 1954, 2553, 2093, 1956, 2554, 2094, 1958,
        2555, 2095, 1960, 2556, 2096, 1962, 2557, 2097, 1964}], 
      Line3DBox[{2392, 2373, 2351, 2270, 2214, 2269, 2694, 2499, 1950, 2155, 
       2627, 2486, 1948, 2626, 2441, 1946, 2625, 2440, 1944, 2624, 2439, 1942,
        2623, 2438, 1938, 2622, 2437, 1940}]}, {}}},
   VertexNormals->CompressedData["
1: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
kNzHvOWuVDWY7J3E1std1t5JMycW2I0uGu7soDx3sgcm1xfOtXQ58RIUWCRT
OHbXwEBA0U/9yGp2NBmtO6aXk4P+3znG6fVxg3rHkd558wlH0H2YTGgwew59
5tqM7GDad3LJDYpdu+TpMXl5U2sMsnu3spYzeg6q/etLv89Bz7nYy+M9em4P
73FMf0IqQxXC5RD/iSaEExWfBYaXtBGOBSy7TiJc5faxYXomfBg4EO7VXpK8
yA+HZfgxeRejfRHy09N1qnXIb1R/1Tx6UYX8um6MfA75We7mKCaXOEkOQjxg
7K10R7z4FjHNwz03+Ncj3gx5vbVBPKLyZ0P0KX/EM6n8JAnEOyrfWvG8sOsH
eYHxB3lhO54XXs3KCyk/yAsr8bzAR80LeJ9wxaw+ITVPSc2yh9oPzMH7gYV4
34Nq5/dT/9NOat+PH+/7xeB9P6r9gNsfhNuvjvf38vD+3iW8v0d9rgT8ubrx
51LD+3gFs/p4U/jz8s96Xup3p9qzvjulxv/Vs+K/Mf68qbOel7p+46z11O82
tWZ9t0nNI+RZeYSKD88sfKjrR2etp/5edRH+feMh/PtGnlnzUql5ltovzZrV
L6WuN56Vv4bw7wDX4d8BUr9boOa1GjyvSeJ5jdpHzZ2FP3VOa92sPGiIvy+k
oeGfO2f8OuEj/t6QGreb5//PuE3lJ+0sflLXC86K81T9/tj1D/3UfvhyXA8D
rscI92827t8y3L83cb/w4X5JxP2iPqv/TOWn2qx+8iSOQ8Ss/rAe3kddMqvf
m4v3aR/P6t/m4HKXWf1Yqp57s/qrE/h9+2b1S5fi/dLaWf3PU3j/0xnvZ9ri
/cxSHAfqfjmM7xfq+3FmnOeaOM/P4jyf/XtqKj+pvwteO4tXb2b9vpX6fdHs
32lSv9dinfV7Q+r3b0tm/W6Out79B98vffrB9zkfZ/0eh/r9SeSs35VQv68g
/uD7gat4Xzcd7+tS+Uatw8vxOjxz1nxqah1O84M6PGVWHX4Er8NpZ9Xhj/E6
XAyvw1fMqsOX4vs9Cq/DLfE6vPz/dPfl4VR2398qZIgUJUNRMpSSVJS4lxJF
IZQiKhTpIREylCmhECXJEBkypwwZSp5kVopIKCIVMkYloV77nH30fs97Hf16
fk9Pz/f9676ude2zz9rrXvuz12ffa6+NcWYFjsP1cRyuiONwURyP3cLxWDyO
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
M/35R+4llN9EvCHnNf2sfWoxnihR4cnP9lPGcTcQ5V+G6jSR8jG1xsj6GOE6
4Rtq/rNOeCSuQ6uB69DewXVoT2IeCpiHDmAeuhp/v1u0lszvGn7A71xwHc5r
uA6nO67DuQPXpZTCdSm/4bqUPzvecLx/YoX3T97j/ZOf7Qdw/UBOXD+QE9cP
pN6X24/35ai/z9rj/XbKd09nvP85A+9//qw+v1redEJEttPADg7wu28N8VkP
82by+6K8rJL5pmYOmivghMkridvbPhKPNALI+U6nHp2/k/2CyF6mX6BxJ5a4
eI8cR5WK1YiJurgRaYr6/u3KqhN48hXfQ/Hqf3kPxd8lX9BQ8iJ2qR3c3SLG
nXZsKxwJf+KHxnt0q4VIzpAEuHK/HDm9hgFu+weSxvspuko1V+8FoeN1aKdE
dCZhXkAer9elHJZPG9yIsydarBmF9SbGK9jje36xFD8h11jJFPz5x/mfPyuf
he+LTKDKsw0IXJn59bAERIdpf/aImglqTeT31SyWnplc8pzwq4s815GXT1hh
/XfRpzTmvHQl7hfYJj6wNZ7QX5+uU6Xfi4/o5faMcdtN95fjK8o9jGxU+bRd
ax9e9RhtJK7Rf2NNUy8iYrD/zPY61bFK15U4nH4rb+0Nswl9auduFraN4CXy
/Uv3Zp77cV7f8nWOxx/udSHinnlUZKRbTvTTNq8tNOE4D6HCuN8mPfB73qxU
1SX2oTnzCBetRVMT9Gf+9niSljze13G6kZQFNFV8lrNnsgJWNvI8fXZB4J2C
4mKQ52VoWTpdDMrxPF2wMFhyj8MTQls5+0CAUN3EPJ2zp2Dn2z/sCJGnbK/Y
Z32/14xO3zG1Qnk2MbbJ2Etb4vffaxZFt76+xvkwONXuSs/nsYYPIeR5OleO
z61XeBHUrTh45ty1JZCL56mWkpR2j0kV0Vkh5Gib/mxinuYeWKxQXHaMeN1T
vId/+vf7yAxqj+dmsHEQn0VOLt/65Mdx9c/KN+N81/NU+a59fZFd558KwKPS
kkM3ecRBE89Tg6shb3rMHhIEb2E/C2fDxDytZ1g8LXXkKPFp5MSwTr7zhP6H
ZhiLmOxnJeYn6elyw1+/v6MR57VaUeW19rvdNud+VEoMLZ4jwKnYODFP/aLz
b4lxmRN0xucW3uH5ft8WQ/BmzXITRkJWyCgm04r3h/ocjgsRUh88SGzfom78
KO17P/E1ISsV1k0h8qVlgwNMv5+L3CF2SPde8ZD89qOirX4Lfv+9VLTkiul3
hA4usYW3yWseKnDuBVDY5djyD8TVtUwf1MVW2cAQi8QB22hj4GTVcUD/25Wb
4XdGaxkk6juI2JrxAdOg16T3uv5qPWnJFXG8zUcVb3MqyxTLj1nDihd3GAPH
TOFGt7o9Gtf50tX8HJFLQR9uCqiUCML1FPK4LBw85Uwt6gle1tcbO/IfESP5
k9+7+rvGS0vO2Bxtv5cuEoT5FflYu0JgbZyqJ7KDyZ3racd8rOCdHK81wWYO
PZUbjiM7LBIzPPLkkhg8nj7M5hYtBM4HyXZIETUtkPKvI7zW2TZ00j0hBrEd
bmoXM150cSI2yDlqyfb/e+9RpSWn99pFfzIoHM7uMmNHT2n7MNI9aLGDKx4k
FlkCxG2sRk+hJ+T766ce1ahUVhABtZisWvSk3F9vqxraWXmolrBwKB1AT8r9
9RdjVeObX9oTRR6+aehJsQ/zgVccV3W4CG2tqHno+bvtQEve2/JwbMNWY5B6
B1dyN9tAv+w/gz+xIiGi9w0MoH9/rGfqOluw5SDjz7OuT2XZyVyQ9ExYeDB7
OUzH+POr9aElNzE2fS1epg173mx3ruiwhamdZDyxt38dVtfACuynNOqdb0jA
DYwnuWBxVTQ8l3iZVTUrfPGLCTyhdX/i7xpXckmN8h8F5jCck3ejWCAWYgPJ
uGHhmXiyuV0Rmng+RLZp2cH6J2TcaHlDr5fOOEp0iFp3GimtmMANX86rTu7F
iYRrrtm3lNQXE7jRriThmnZMg5jiK1jm+n/de7gR7yfMp9pPoKXnbbzPYEF1
302fm/vUcOMYqOL6lNVc4AnKGxcunmy/5T2Ne7hOCDcwcyRHQ7v14TXSveeA
x19OYrJ+EkzoPl+/EwWj8g+0G/YFQqTt5P9LSz5L64My+v0nTdlR1J/bzMn7
acf3SXXg+6TY8X1SjXTFC5DeldczWNE4/Oon15+W3J2H9zKyYw5PCT2yq+wP
7Pmr5ZT65GxU9cl/tp+1NOqHc/iRzyPfwOeR6fB5ZFr9aODzicb4fOJhfD6R
Ul96GlUdbEpdcXaquuLtNOp4/+y4IvD+WOn/8p4aI7yftoXqnhda7bsvNJZU
fa6GpK4rD9Fz0c3Lk9+zhvfHduP9Mfq/eL+GBj4fYYLPR3zE5yOozx1sxucO
qOssrcB1lsLxuX4LfK7/Hj7XP6OckYSD1ySW5SNcrAol4+FWfC57pe1/nsu+
kpTMgeKtlhPmbij+OpBEbm+Hz2m2Up3TNML5exk4f48X5+/R4zw9AufpqeI8
PWucjxeP8/EicT7eeZx354/z7kJw3t3/AdyHRMo=
    "]],
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{322.48696398926137`, 269.9368932416265},
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.11440448467326238`, -2.5149644476483934`, 2.260943484687589},
  
  ViewVertical->{-0.15013705347428655`, 0.6160202191288141, 
   5.162152914265059}]], "Output",
 CellChangeTimes->{
  3.7270169674458647`*^9, {3.727017132888047*^9, 
   3.7270172446103783`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
VX2O8Jy76Bs66vBD+LOv+D/7oJk0\
\>"],ExpressionUUID->"6cbeae14-e71b-4d7d-b446-0f5518dc54fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"bottomFuncMaxwellian", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "1"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<vPar\>\"", ",", "\"\<vPerp\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RB", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbth", ",", 
       SqrtBox[
        RowBox[{"dPhi", "/", "Tm"}]]}], "}"}], ",", "0", ",", "4"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727012339587678*^9, 3.727012342131145*^9}, {3.727012431240834*^9, 
  3.727012534001828*^9}, {3.72701259716241*^9, 3.727012625723126*^9}, {
  3.727012749498288*^9, 3.7270127532250834`*^9}, {3.727013013256352*^9, 
  3.7270130142973824`*^9}, {3.727015507353057*^9, 3.7270155103542643`*^9}, {
  3.727015564434416*^9, 
  3.727015579656803*^9}},ExpressionUUID->"1b37fb4b-bf01-476b-a782-\
5b355a594ea9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`RB$$ = 1000, $CellContext`vbth$$ = 
    Rational[941, 110]^Rational[1, 2], Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`RB$$], 1}, {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {{
       Hold[$CellContext`vbth$$], Rational[941, 110]^Rational[1, 2]}, 0, 4}}, 
    Typeset`size$$ = {600., {301., 305.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$142840$$ = 0, $CellContext`vbth$142841$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`RB$$ = 1, $CellContext`vbth$$ = 
        Rational[941, 110]^Rational[1, 2]}, "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$142840$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$142841$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ContourPlot[
        $CellContext`bottomFuncMaxwellian[$CellContext`vpar, \
$CellContext`vperp, $CellContext`vbth$$, $CellContext`RB$$, 
         1], {$CellContext`vpar, 0, 5}, {$CellContext`vperp, 0, 5}, PlotRange -> 
        Full, FrameLabel -> {"vPar", "vPerp"}, ImageSize -> 600], 
      "Specifications" :> {{{$CellContext`RB$$, 1}, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {{$CellContext`vbth$$, Rational[941, 110]^Rational[1, 2]}, 
         0, 4}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{647., {366., 371.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7270155162527037`*^9, {3.7270155715177383`*^9, 
   3.7270155807752237`*^9}},ExpressionUUID->"57947129-e67e-44c4-8e0c-\
a080b82dbc44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Jim wanted to know why the density is so low for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "B"], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "75aaa064-c4b7-4668-9ddf-b6654091813a"],
 ". Here\[CloseCurlyQuote]s the answer:"
}], "Section",
 CellChangeTimes->{{3.727012949654603*^9, 
  3.727012999408696*^9}},ExpressionUUID->"e07ee6df-3b9f-4a64-a247-\
3b7c283fa534"],

Cell[CellGroupData[{

Cell[TextData[{
 "First, a plot (for dPhi=941 V, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "m"], "=", 
    RowBox[{"110", " ", "eV"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "652ba070-251c-481b-918f-6ba74193c597"],
 "):"
}], "Subsubsection",
 CellChangeTimes->{{3.727013001214625*^9, 3.727013003438697*^9}, {
  3.727013064694264*^9, 
  3.727013077558278*^9}},ExpressionUUID->"7097f877-a17d-4e8f-b194-\
f116e00e414c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"bottomFuncMaxwellian", "[", 
      RowBox[{"vpar", ",", "vperp", ",", "vbth", ",", "RB", ",", "1"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"vpar", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vperp", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RB", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"3", "/", "2"}], ",", "2", ",", 
       RowBox[{"5", "/", "2"}], ",", "3", ",", "10", ",", "30", ",", "50", 
       ",", "70", ",", "100", ",", "200", ",", "300", ",", "500", ",", "700", 
       ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbth", ",", 
       SqrtBox[
        RowBox[{"dPhi", "/", "Tm"}]]}], "}"}], ",", "0", ",", "4"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727006660769256*^9, 3.727006749375313*^9}, {
  3.727008347721089*^9, 3.7270084271999083`*^9}, {3.727008530841353*^9, 
  3.72700855299986*^9}, {3.727008617033497*^9, 3.7270086548314667`*^9}, {
  3.727008798184896*^9, 3.727008822918643*^9}, {3.727009900810616*^9, 
  3.7270099134491034`*^9}, {3.727011638352862*^9, 3.72701163972736*^9}, {
  3.727012339587678*^9, 3.727012342131145*^9}, {3.727012431240834*^9, 
  3.727012534001828*^9}, {3.72701259716241*^9, 3.727012625723126*^9}, {
  3.727012749498288*^9, 3.7270127532250834`*^9}, {3.727013013256352*^9, 
  3.7270130142973824`*^9}},ExpressionUUID->"16128b78-8f94-4868-9439-\
e1f43671cdee"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`RB$$ = 50, $CellContext`vbth$$ = 2.7, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`RB$$], 1}, {1, 
       Rational[3, 2], 2, 
       Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 1000}}, {{
       Hold[$CellContext`vbth$$], Rational[941, 110]^Rational[1, 2]}, 0, 4}}, 
    Typeset`size$$ = {600., {233., 238.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`RB$121369$$ = 0, $CellContext`vbth$121370$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`RB$$ = 1, $CellContext`vbth$$ = 
        Rational[941, 110]^Rational[1, 2]}, "ControllerVariables" :> {
        Hold[$CellContext`RB$$, $CellContext`RB$121369$$, 0], 
        Hold[$CellContext`vbth$$, $CellContext`vbth$121370$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`bottomFuncMaxwellian[$CellContext`vpar, \
$CellContext`vperp, $CellContext`vbth$$, $CellContext`RB$$, 
         1], {$CellContext`vpar, 0, 5}, {$CellContext`vperp, 0, 5}, PlotRange -> 
        Full, AxesLabel -> Automatic, ImageSize -> 600], 
      "Specifications" :> {{{$CellContext`RB$$, 1}, {1, 
          Rational[3, 2], 2, 
          Rational[5, 2], 3, 10, 30, 50, 70, 100, 200, 300, 500, 700, 
          1000}}, {{$CellContext`vbth$$, Rational[941, 110]^Rational[1, 2]}, 
         0, 4}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{647., {299., 304.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.727013015138589*^9, 
  3.72701305072788*^9},ExpressionUUID->"86c4734e-e13c-4edf-b8ff-cc5168a1b30c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now, a NIntegrate over the corresponding region:", "Subsubsection",
 CellChangeTimes->{{3.727013085934367*^9, 
  3.727013097806308*^9}},ExpressionUUID->"a7e3172f-1b24-4419-ad39-\
1b488522c645"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"2", " ", "\[Pi]", " ", "vperp", " ", 
    RowBox[{"bottomFuncMaxwellian", "[", 
     RowBox[{"vpar", ",", "vperp", ",", 
      RowBox[{"vbth", "[", 
       RowBox[{"dPhi", ",", "Tm"}], "]"}], ",", "1", ",", "1"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"vpar", ",", 
     RowBox[{"vbth", "[", 
      RowBox[{"dPhi", ",", "Tm"}], "]"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vperp", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727012846345937*^9, 3.727012891326188*^9}, {
  3.7270129215865297`*^9, 
  3.727012925767714*^9}},ExpressionUUID->"673e1621-bb30-4086-80c0-\
30dbc29053df"],

Cell[BoxData["0.09159041504222797`"], "Output",
 CellChangeTimes->{{3.72701290098068*^9, 
  3.727012926259026*^9}},ExpressionUUID->"dde8b9b5-c87d-4edb-b4f5-\
3daa4b740b0b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare with my analytic expression:", "Subsubsection",
 CellChangeTimes->{{3.727013261516994*^9, 
  3.727013270101235*^9}},ExpressionUUID->"ef4fb595-c4fa-48f9-9044-\
57651376cf30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LKMwellDensFac", "[", 
  RowBox[{
   RowBox[{"dPhi", "/", "Tm"}], ",", "1.000000001"}], "]"}]], "Input",
 CellChangeTimes->{{3.727013312855378*^9, 
  3.727013346957449*^9}},ExpressionUUID->"2d315d4a-f13c-442d-943a-\
bc8b23a60ac8"],

Cell[BoxData["0.09159041918639176`"], "Output",
 CellChangeTimes->{{3.7270133242352543`*^9, 
  3.7270133474292803`*^9}},ExpressionUUID->"0952c927-cbbd-42b8-92f6-\
eb87276b52e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Exactly! So that\[CloseCurlyQuote]s it\[LongDash]very low density. But how \
about a full curve?\
\>", "Subsubsection",
 CellChangeTimes->{{3.727013247013158*^9, 3.7270132533897038`*^9}, {
  3.7270133559485693`*^9, 3.727013363947873*^9}, {3.7270144564067507`*^9, 
  3.7270144619319468`*^9}},ExpressionUUID->"bac963a0-80f0-4e55-96ab-\
9bf37410c839"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]", " ", "vperp", " ", 
         RowBox[{"bottomFuncMaxwellian", "[", 
          RowBox[{"vpar", ",", "vperp", ",", 
           RowBox[{"vbth", "[", 
            RowBox[{"dPhi", ",", "Tm"}], "]"}], ",", "RB", ",", "1"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"vpar", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vperp", ",", "0", ",", "5"}], "}"}]}], "]"}], "+", "0.1"}], 
     ",", 
     RowBox[{"LKMwellDensFac", "[", 
      RowBox[{
       RowBox[{"dPhi", "/", "T"}], ",", "RB"}], "]"}], ",", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]", " ", "vperp", " ", 
         RowBox[{"bottomFuncMaxwellian", "[", 
          RowBox[{"vpar", ",", "vperp", ",", 
           RowBox[{"vbth", "[", 
            RowBox[{"dPhi", ",", "Tm"}], "]"}], ",", "RB", ",", "1"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"vpar", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"vperp", ",", "0", ",", "5"}], "}"}]}], "]"}], "+", "0.1", 
      "-", 
      RowBox[{"LKMwellDensFac", "[", 
       RowBox[{
        RowBox[{"dPhi", "/", "T"}], ",", "RB"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", "1", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Direct Integration (+0.1 for visibility)\>\"", ",", 
      "\"\<Analytic expression\>\"", ",", 
      "\"\<Difference (+0.1 for visibility)\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727012846345937*^9, 3.727012891326188*^9}, {
  3.7270129215865297`*^9, 3.727012925767714*^9}, {3.727014464534471*^9, 
  3.727014501740058*^9}, {3.727014535363777*^9, 3.727014704364011*^9}, {
  3.7270175592407103`*^9, 3.727017562254395*^9}, {3.727017638023679*^9, 
  3.727017716669779*^9}},ExpressionUUID->"54090dd7-6846-40ec-bd7e-\
8dd1fd8c16bc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk4FN7XAHAhJFmGYZjBmITSQputnJMiZCmyy1qKZC8qP0uLNUvWkory
jdJCkZS0USKyU2oqWcpWRKmZ4b3vX/f5PM+55zn3Oefe56p4Bdrs4+fj42Ms
4OP7//Vafl56uH6iYdQMQ2RRXAOs2Ljv9n7V/ZDQeEbhX2oDzMgc0dugGg4a
Ufv2TeU2gPOpuTm6ajww94q3z15vgCU1zz0lVHPhzvjVwj0tDTDUoyq9SLUY
3j5x1UyhvYaOwa7RhapVMBQs4Fx59zW89l/tKKj6CvK1i450zDdCVjotY0/C
K3CVXbLy4eIm8Kjgf3N/7BXYJLy5XirXBL853eBb2QCH/zuz8s6aJmAlR6u3
mDRCunNxrp5HE0Reb/2d69sMbXv9Mn1eNAEttLoxu6cNNPlntSMy3kDTHRff
5Yq98KHymEm0fQtkZB3v4rfohbU2MkMxe1vA+eiFLR+O9ULvNjmBtJAWGDHq
k0/r7YVtf8Z/tKa2gEi3c+N05jsYMjmvMf6qBbZxnTSfivaBaajo3qxNb6HW
1HHcfvYj+D69oiBMa4W4VRFOWups+DejPshWbgVLyrn6RfZsaPAMnn6s3gof
+nou1txjA4OiKZyh0wqcAAcrVuAnWKySJ5rp0Ar55qU9v0M+w9wo22TB+VZ4
F3RD9/n3L+C2Oyn5nUobsHcvtKzm6wfm84SC2BVt0K/r4Vkm1w/+gsn8a9e1
wQifbNIl436Q3ZH6sXRbG/xLj+07VtgPGZeSjRceaANGuWPUOqevsNvJ/6tT
WRu4TQrVFTUMQLvmob7h7e3g1eXZe+HTAFQ0hj25u6sdfKprxjJ+D0C/SHth
vEs7BMSGUGNVB2HmTvhF68B2iJZi++yJGYQhZybdObcdCrQrF8nqDsGmRXPP
fb63Q3+wt3V88TAMndI+0JLdAYMOYXeCng7DwOY8g5HCDvi2+bSE87thMLQJ
XilzuwN+LCp+u3LxN4jTrn+Y8bIDuIUj1u0B3+Dr8oTeTbMdQG0P3qm48Tuc
OHoyxsGtE0zXxuy6VzcCNxMFwnU2dsEO2tny/I8jEGFobwzbusBqrlAq7vcI
aBQceuJg0wV2jS/aHDVG4aVjPP+jgC7w8hK2mUseBeYV2bcWJV1wPCPVxsx2
DBRi/lneUuqG21P5tp++jMMp6qf6bloPsIy20pX/jkNY6aKD8+o9kHP2e7+b
5AS48ks76ur0QLTWxhC24QSo8RrW9tn1wM6At+kfL0xAwNiLucHMHpj8vqCl
z+4HCL7eMion3Qt5QetUx/b+hJxORwpL6R2w95+79K13Erp/xrk+3d8H59JN
SmIHJ+FE+sVnjZF9sKt6ulxhahKuyRy1+X62D+pEd9VbLJ6CSKtDAV41fVB6
a9FY2eYpKMhVF91O+QARv47pHb0yBelHmnnNzz4AJXpP5yL/X6A2XDFybg0b
THJYoprz0+CRNsG8UfgZqmdFoVp2Fl6bKX58IDAAFokFPjJ//8FTPaFHieHD
8Mzpt2C1/BzkrjN+H+QwCitucs2zT/Bh9vfRWpWxCThmvGr2188FyOnUyTVU
nYRHc489wqMEcDxiptmrewrErP8z8pwUxDCJU+KdJtNg9WTsU+BJIbT3HMoN
LJ2BbLOvnqriIljk0/zLhf0bxvy09kDUItxZOSbM7vkD629+lI5eshiNv+cE
Rz+bhTOnvmxddkIMlU2CdNZE/oWuSOM1P6ni+DxgOm+Dxj9YmuY473FFAm+9
EFjgdv8fbGF4qjKSJNHZM/GssxoHOu/4MQxTJHHAyD6bpsEBn61hMh7pklj+
Q8ixazkHzvjFCxblSOJZTwfFHas40P3g1oDmVUlMuRVRq76eA352/4oMaiTR
Sy5T4toWDmSlZi5zmZBEc8kV0TUuHPjG91Itz0YKvWaSeo+f4cD1Lc9H4+yk
sH/rG+WeFLL/RG1ZqKMUgvfPo9ppHBgVqNK3dJNCWUcd369nOTAhVGLF5yeF
alaLt23K5cC0WNIRn1gpTOjR9H9eyAE+eauXa8ukMOZHc6zqfQ7IaXfva1pC
wQZTjxK3DxwQa71w5LokBS1OP7L/30cSH+gZHy9NwS1fRo0usDkwcnOsZKs8
BT9lVHd3fuZArYbA2CNVCo4lHf1rOMiBvUytkJsGFPxN1cn5Mc6BMomkqBRf
Cq7iPxpWP8cBs4nNudb1FIyV11i1R4kLUZbHJg82UFBg8mKgtzIX7t68vyOh
iYLZ78/+OMDkAuPgGr5nbRSs6ZG7EcziwsQw03ctm4Ls+NO0Y2pcyPoiYED9
Q8HDJgq79q/mArvzNfu9hjQ25Ce33d/MhdBHdmo+Z6TxoMWogIkzF7pfnbK0
TJPGz/rhS6VcuKDbeS9sfYY0llw0qOwjnhuTesF/Thrpkd+1AvdwIUmpxf3y
VWlsVl6TmebBhYJYk/O9D6UxomOX3X0fLrzZriO247s0xhaW2V0K4cKyTtrU
GhMZ3OEaUTSawIWGglovOzMZLDke4VaUyAW/Q3s7jlnIoO6C3mTXJC6UCZVV
1NvIYBDd1qgpmQv6etvDXdxlsHDV8eVXUrmw89JhblyEDPbKP9TbmMWFYwfa
hdg3ZPCpgqDiv0tcaOUm089IUJF+rG9k4T0uFKtzeq5QqDjmfebBBeIoG7+s
aioVk65dpWpXcEGzxHTJMJ2Ka+Osop0ruRBnu3B+iwYVT0YmyZdUccHgRlT/
H6Qie11i2eoaLlxzCL7uHUJcdC9rtI4L/7trr2PQRcU8o+LB9V1cOJH04Cmj
l4rUCf2LJcRxXgrmc++pyG9lKcDo5kI6he367DMVg2+19C3o4UJRyL4T28eo
2O7nXve6lwuNa8OabQVk0WKGUWT+gQu0e2e9/bVlseRwvTzlK5mHe2/SLqbI
Int1u+mLH1z4s+M/r8fpsrh6bEvwyp9c2DTwvw0fM2WxVV/eLJu4XmZNHyNP
FncJTQr7THKh9/BZtfxrskhT+Ngg8Iv0V8f+cd4TWSx/0Z2s9ZsLZjWfRnIn
ifuE7+zkcuFz3ZRxhp0cFhmalFQJ88BWtHYw0lEO5XeJ3xAR4cFL68TT+13k
cF1NebAT8c33yvWbPOXwMXe17T/i8J8W24b95XDnf8e99UR5IM4oNtp0Sg4V
f9V/uCnGA4NQFxi6K4e/Qp5s95PiQY5Kna6+JA2ty8Z3b1fgweZ6R1VZaRqW
vg0oTSQeODAuMUWl4fS5ZR1NxGvLZIev02kYEHk/x5rOg2ZD32x5dRoWz/6c
3M3ggaCr+NTsZhrG+X2QcVDiQUiOY2nVQRrW3Hv8TY/FA+vF44obXtGweTp1
X8xyHmwMnLWxbqRhSsqPyhpiRodAgm8zDRP7JXtniUfyFKYudtCQKcXKCFrB
g7gVpi+FPtOwn8/6yx5NHtSYXQ3onaWhUzK/qNYqHmgkOD05vkIeb52gBd/T
4gHfwpcez1PkkZU6ULxZhwdU2Tqv4nR5lPd9RPMnXqH+fO+ZTHnUX2h2II94
t1ntAfvz8tgvM3z1N3Fxyv2gkSJ5jOV7lnZLlwdWssUxlBp57Oo2s6Lq8yBf
PaHAa0Qe//ruEmrexAM9c/PP/NsV0Epca2X/Fh6k0p9oqpkr4Fjjs01iRjzo
H1sXbmapgClieSs3Ep9JUxRPt1XA06tO3kgk/tz500DRQwGpjD8qa7aS87rn
5uocJfFDTGrYNh60hw1Y+ZcqoGZjzP0hEx74XY563CVBx55G33+hO3gwrjjU
9YJCR/PbM5ZZxEH5lhPlVDrun+clVhAfOc9QTqXTMXTo1aNp4tjMhzEm6nT0
WaAgEmbBg3Pxv7dWGdLx8msnmwBLMm+BAY3nDtGRzj+hbGPNg6Xo1uPSRMeL
LXSJ9zY8eM9IMzBooeMDva1Hp4nT/z65rNBGx9Traa3itjyYu6ty4F03yb+0
2WQr8ftlg7P2/XTcYm5tW0qcsdhfweYvHWflZ/+E7+bBgp6je0zVGaiiptso
YM+DT4eyv64/yUC+iU2m3xx50C26+axNHAMTLK9t5nPiwZviAcOgRAYuPBfN
pBE//LIurzSNgV+1Ht3eTpxj176Tlc9AxteBif+ILTZL1EpUMlDEyEbU3ZnE
iyWeGxli4OzSoSV1LjzIKo20LDBXxIQL7RqubjyonpFtSLBURHbtj8wAYjaU
G5EfHToUPpiMIdboHNQxslfE05Sw0/8R13CtWAOeZP/qi+ITxF8tVf6oH1XE
0Y1zdyLdyf35WV9wp1gRT1g2BaZ78KBtvcR0raAS/sru6Mz0IvcBmA8GhZXQ
/zfvWBFxnpl2pNhiJTwUQJOpJN7rZivoLKWEYVEmyt3Es/G5MjOKSujudDVP
zpsHSn3KGzR1lNBeUGP1OWL/WK0jub5KOF0jsiR9Lw+EWnbNBrYoYcr80ipX
Hx5c3rhSJKFNCeOTtyzzI9a9LEQr6FRC6biFieHEfkGPdFrfK2FldoF2BnEz
ZVm41rASforgE3lFnOUwO/NzXglZ9oatq/fzgPXl0q9gbWWsDF8v+IfYcHp0
IjRLGZ3k/DIP+vJgoWh1k32uMk6qcYYPE79RjivRy1PGCjWlDTHEzjuYXvOX
lTHIbE11FvGRK7u7kkqVEeIpvo+Jb+98/KjwuTJqD4T6L/Ej572VmvD2pzIO
R+YuKyGev0s7m63GxG2ZOw6/PsgD/kv6qmoaTHwnM/m2nVgo0bXq/nImPn1i
vvQDsZh7wceelUx0N9WumCBWWKyxQmEdEzVX+kZL+5N+eOu8uARMjFnl89SF
+JC0/UyxIxO/iNdRhon7QjOdHiYxMVKEX3HkEKm3crWt1hkmSlSrWUwSS/55
bXEthcRfkTgyS2x8jA8z0pmY57z5oVAAD+7EHFLzy2Fik3mI4FLikynbf8lf
YeKPmoSrzsSaxZwzR6uZmBQmofaS+Ph776e635iYbg0L0gJ5oNX01b34OxO9
+q9/yiIeeOQ9Tx1l4hPDr9V5xFYXvQ1/jTORZ9rieY2Y6eFdc+sXEyc+90Y/
Jq4b9HrAmmdiPMv2zwix2KRnmZisCqY4CX8zCiLvm7BHweetKlhXpXdwmDjI
8cLeAGMVLDdcXjtGbHy9W4NrooILgmbFpognzC3L5cxVMDTX6BKXGFP1n1vt
VMHgbnaaVDCpT4Y6UOOqglf/zZTrE2uyGtXPH1ZBUxeacBLxw03r7+wqVsGM
m/vPK4bwQG3g27u6EhV88GKmTIX4bPJFQd0bJJ94av0y4gPvhZyVbqngzjeD
g6uIZSPeCY7eVUHL0EMChsQh96KcT9WqoFJVxb09xJorXi+s6lLBinOpf/KI
8+XcXBmCLNx3VfT4klDSf/3n5Q8XsnDsULK5FPF5VzVhJ2EW9p2YlaUS5xRO
lGeLsvBwROE1BnGaZrSwhBQLX+SHFmoSn4CCuwuUWLjhgr6wGfH+/f0iwzos
TDfjXo0lHko0cTutx8JIxTLqaeK9N2/cW2rAwsofF04lEHtMhrh5GLKwNF7V
OY3Y+bhAxbttLCyf0BnIJ7ZIU3V/s4uFUYJ2R6qIG8sTKvxsWTiglVHzkNis
c2zRIjsW8gWt4KslNpGvrDB2ZOHN22HRdcRw1Vj0iRsLlU+VurUR19Zfd9/j
wcKP17lpncSbvi2p5Hiy8HZ9dW0Pse6qbnfdfSxs0IqRYRPft9av7PZhYUBR
isEX4g0hl0QPH2DhCgcJjwHiiix+D2k/Fgo6CJ8YJl5b5VNZfpCFu8vCC0eI
/w+RBFzU
          "]]}, Annotation[#, "Charting`Private`Tag$182478#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$182478#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$182478#3"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0, 0.09159043721904292}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.8796613004033026`*^-7, 9.210340184010054}, {
        0.09159043721904292, 1.8407999331784781`}}, {{1.8796613004033026`*^-7,
         9.210340184010054}, {0.09159043721904292, 1.8407999331784781`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.09159043721904292}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Direct Integration (+0.1 for visibility)\"", 
       "\"Analytic expression\"", "\"Difference (+0.1 for visibility)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.727014619611906*^9, {3.7270146657700043`*^9, 3.72701471333995*^9}, 
   3.727017611622933*^9, 
   3.727017816721861*^9},ExpressionUUID->"202c9276-8100-4baf-aa7b-\
b77c3eb31ddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"2", " ", "\[Pi]", " ", "vperp", " ", 
    RowBox[{"bottomFuncMaxwellian", "[", 
     RowBox[{"vpar", ",", "vperp", ",", 
      RowBox[{"vbth", "[", 
       RowBox[{"dPhi", ",", "Tm"}], "]"}], ",", "10", ",", "1"}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"vpar", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vperp", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727014762362831*^9, 3.727014786020095*^9}, {
  3.727017877694687*^9, 
  3.727017881147736*^9}},ExpressionUUID->"ba57b911-3b3e-4b44-bb16-\
fa871ab9adee"],

Cell[BoxData["1.0050568986665955`"], "Output",
 CellChangeTimes->{{3.72701476697864*^9, 3.7270147870326643`*^9}, 
   3.727017881986618*^9},ExpressionUUID->"1269bd6c-196d-4b66-b809-\
6eb813e930a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["2", 
   SqrtBox["\[Pi]"]], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["rho", "2"], 
     RowBox[{"Sin", "[", "theta", "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["rho", "2"]}], "+", 
       RowBox[{"dPhi", "/", "Tm"}]}], "]"}], 
     RowBox[{"bottomPieceFuncRho", "[", 
      RowBox[{"rho", ",", "theta", ",", 
       RowBox[{"dPhi", "/", "Tm"}], ",", "10"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"rho", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta", ",", "0", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727016361774798*^9, 3.727016398955309*^9}, {
   3.727016566749991*^9, 3.72701664648249*^9}, {3.727017406352771*^9, 
   3.7270174408087883`*^9}, {3.727017491111714*^9, 3.727017491397727*^9}, 
   3.727017905646495*^9},ExpressionUUID->"0d5073ab-41f9-4549-a944-\
caeeb893cb80"],

Cell[BoxData["1.0050503374252575`"], "Output",
 CellChangeTimes->{{3.7270166128069277`*^9, 3.727016646861671*^9}, {
   3.727017417659481*^9, 3.727017447747045*^9}, 3.727017498932169*^9, {
   3.727017894574349*^9, 
   3.727017912303136*^9}},ExpressionUUID->"ff710b7b-f4e8-4b96-b310-\
30838289a8f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 873},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 405, 8, 31, "Input",ExpressionUUID->"49cbe70a-4516-402d-896d-ef6ce52ce651"],
Cell[966, 30, 360, 10, 35, "Input",ExpressionUUID->"c7a9c9c6-ff8c-4ed6-ba7d-fe0e29bc9316"],
Cell[1329, 42, 390, 11, 49, "Input",ExpressionUUID->"b66a2800-d344-49be-b0de-7e9e86e20b2e"],
Cell[1722, 55, 2419, 47, 76, "Input",ExpressionUUID->"756c101e-4d24-4f1c-b120-e771448d347f"],
Cell[4144, 104, 505, 13, 78, "Input",ExpressionUUID->"07a1f08c-1ba2-478b-ab62-2c05df49a319"],
Cell[CellGroupData[{
Cell[4674, 121, 179, 3, 68, "Section",ExpressionUUID->"3d940f35-0a19-456e-9705-6a6ddd5b94be"],
Cell[CellGroupData[{
Cell[4878, 128, 177, 3, 45, "Subsubsection",ExpressionUUID->"52b3d36f-2342-4c3d-ae1f-14df4a3e6a11"],
Cell[5058, 133, 1309, 37, 39, "Input",ExpressionUUID->"a71ce8ea-8cc8-4e56-be4b-fb05712b173b"],
Cell[6370, 172, 1342, 37, 39, "Input",ExpressionUUID->"06537277-f2ca-415d-9771-a6f6e0ec9b8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7749, 214, 227, 4, 45, "Subsubsection",ExpressionUUID->"1acf9a4f-3308-4b59-b587-9c66c1d00e16"],
Cell[7979, 220, 480, 12, 35, "Text",ExpressionUUID->"0e3d5792-8339-4c21-87d9-41a299c5a98a"],
Cell[8462, 234, 1080, 26, 51, "Input",ExpressionUUID->"f11ac1e6-c202-4569-8607-1e9394d1013d"],
Cell[9545, 262, 1987, 53, 71, "Input",ExpressionUUID->"4a36f1f1-8209-4d43-afdc-1206beccf092"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11581, 321, 195, 3, 68, "Section",ExpressionUUID->"76a2b838-74a9-4437-804c-c25b5a01a22d"],
Cell[11779, 326, 1502, 40, 49, "Input",ExpressionUUID->"b3912a18-34f5-4f92-a9cd-3f47be8a96e4"],
Cell[13284, 368, 1445, 42, 57, "Input",ExpressionUUID->"4121babf-df66-4b76-94e4-55c95cf693d1"],
Cell[14732, 412, 1474, 41, 49, "Input",ExpressionUUID->"25d0f953-9dc7-4b9a-9541-84a482e191b1"],
Cell[16209, 455, 1442, 42, 57, "Input",ExpressionUUID->"d25fd375-ba7d-46fd-a9de-e41376e29ac1"],
Cell[17654, 499, 785, 22, 51, "Input",ExpressionUUID->"88dc8254-a8d1-444c-92a6-d51d2203e9ee"],
Cell[18442, 523, 1495, 46, 71, "Input",ExpressionUUID->"d392b517-e0a1-4762-9652-e425727d49e6"],
Cell[19940, 571, 988, 27, 54, "Input",ExpressionUUID->"099d400d-e923-4b54-9e2b-7dd37fe1d909"],
Cell[20931, 600, 1904, 56, 95, "Input",ExpressionUUID->"57931a78-324a-453a-aac6-9a9cf86f617e"],
Cell[22838, 658, 1907, 54, 95, "Input",ExpressionUUID->"c96f676e-8dc1-4a14-b7e3-aefa7b218dff"],
Cell[CellGroupData[{
Cell[24770, 716, 816, 23, 31, "Input",ExpressionUUID->"cac0b021-3838-4ea6-88f8-f43e39227c61"],
Cell[25589, 741, 908, 27, 35, "Output",ExpressionUUID->"00e70979-768d-4e62-9da7-b9eb7814f9c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26534, 773, 548, 17, 56, "Input",ExpressionUUID->"70bc732d-2b6e-4799-aa52-148987e8f925"],
Cell[27085, 792, 267, 6, 41, "Output",ExpressionUUID->"d9d394b4-d917-4798-b4c4-907100795c44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27389, 803, 1355, 36, 55, "Input",ExpressionUUID->"9c8b10aa-5a23-40d4-8a7e-90a5cb0fb9ae"],
Cell[28747, 841, 49157, 910, 708, "Output",ExpressionUUID->"bbb2bdf9-2d27-4f68-a8bb-e6d6234e4e59"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77953, 1757, 166, 3, 69, "Chapter",ExpressionUUID->"17cafd48-d0cb-4889-8832-2c2fe6b983da"],
Cell[CellGroupData[{
Cell[78144, 1764, 294, 7, 45, "Subsubsection",ExpressionUUID->"63bd1928-ed34-49b7-9c1c-b130a3e66040"],
Cell[CellGroupData[{
Cell[78463, 1775, 1653, 38, 55, "Input",ExpressionUUID->"6a4a38c0-6d14-423c-b67c-85c7be772747"],
Cell[80119, 1815, 3112, 58, 744, "Output",ExpressionUUID->"376ecdf2-d0ef-46c0-8010-65bb46fe3664"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83280, 1879, 492, 14, 45, "Subsubsection",ExpressionUUID->"f6f091a7-07f0-4a23-b1a3-55b62f257f9c"],
Cell[CellGroupData[{
Cell[83797, 1897, 2042, 48, 71, "Input",ExpressionUUID->"3bdd0c4d-7f81-49ea-b84d-5eea8b80a31c"],
Cell[85842, 1947, 2934, 55, 762, "Output",ExpressionUUID->"e76e62f4-82a4-4cf4-9116-47a034031ce3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88825, 2008, 173, 3, 45, "Subsubsection",ExpressionUUID->"a88ea384-5020-44bc-8cb2-b732d9cfb428"],
Cell[CellGroupData[{
Cell[89023, 2015, 1031, 27, 50, "Input",ExpressionUUID->"7e5ceeb3-796f-4ca1-b84e-0ada09375809"],
Cell[90057, 2044, 165618, 2709, 287, 131341, 2146, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6cbeae14-e71b-4d7d-b446-0f5518dc54fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255712, 4758, 1964, 45, 71, "Input",ExpressionUUID->"1b37fb4b-bf01-476b-a782-5b355a594ea9"],
Cell[257679, 4805, 2547, 49, 756, "Output",ExpressionUUID->"57947129-e67e-44c4-8e0c-a080b82dbc44"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260275, 4860, 440, 12, 68, "Section",ExpressionUUID->"e07ee6df-3b9f-4a64-a247-3b7c283fa534"],
Cell[CellGroupData[{
Cell[260740, 4876, 470, 14, 45, "Subsubsection",ExpressionUUID->"7097f877-a17d-4e8f-b194-f116e00e414c"],
Cell[CellGroupData[{
Cell[261235, 4894, 1788, 41, 71, "Input",ExpressionUUID->"16128b78-8f94-4868-9439-e1f43671cdee"],
Cell[263026, 4937, 2459, 46, 622, "Output",ExpressionUUID->"86c4734e-e13c-4edf-b8ff-cc5168a1b30c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265534, 4989, 199, 3, 45, "Subsubsection",ExpressionUUID->"a7e3172f-1b24-4419-ad39-1b488522c645"],
Cell[CellGroupData[{
Cell[265758, 4996, 694, 17, 31, "Input",ExpressionUUID->"673e1621-bb30-4086-80c0-30dbc29053df"],
Cell[266455, 5015, 172, 3, 35, "Output",ExpressionUUID->"dde8b9b5-c87d-4edb-b4f5-3daa4b740b0b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266676, 5024, 187, 3, 45, "Subsubsection",ExpressionUUID->"ef4fb595-c4fa-48f9-9044-57651376cf30"],
Cell[CellGroupData[{
Cell[266888, 5031, 254, 6, 31, "Input",ExpressionUUID->"2d315d4a-f13c-442d-943a-bc8b23a60ac8"],
Cell[267145, 5039, 177, 3, 35, "Output",ExpressionUUID->"0952c927-cbbd-42b8-92f6-eb87276b52e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267371, 5048, 358, 7, 45, "Subsubsection",ExpressionUUID->"bac963a0-80f0-4e55-96ab-9bf37410c839"],
Cell[CellGroupData[{
Cell[267754, 5059, 2196, 54, 78, "Input",ExpressionUUID->"54090dd7-6846-40ec-bd7e-8dd1fd8c16bc"],
Cell[269953, 5115, 31870, 593, 517, "Output",ExpressionUUID->"202c9276-8100-4baf-aa7b-b77c3eb31ddc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301860, 5713, 632, 16, 31, "Input",ExpressionUUID->"ba57b911-3b3e-4b44-bb16-fa871ab9adee"],
Cell[302495, 5731, 196, 3, 35, "Output",ExpressionUUID->"1269bd6c-196d-4b66-b809-6eb813e930a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302728, 5739, 990, 26, 54, "Input",ExpressionUUID->"0d5073ab-41f9-4549-a944-caeeb893cb80"],
Cell[303721, 5767, 297, 5, 35, "Output",ExpressionUUID->"ff710b7b-f4e8-4b96-b310-30838289a8f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

