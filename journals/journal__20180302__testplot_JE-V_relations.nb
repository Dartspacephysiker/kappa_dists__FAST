(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    215219,       4174]
NotebookOptionsPosition[    213428,       4137]
NotebookOutlinePosition[    213766,       4152]
CellTagsIndexPosition[    213723,       4149]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir", "=", 
   "\"\</SPENCEdata/Research/Satellites/FAST/kappa_dists/journals/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "dir", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "Liemohn_and_Khazanov__mapped_Maxwellian_density.wl"}], \
"\[IndentingNewLine]", 
 RowBox[{"<<", "jvFuncs.wl"}]}], "Input",
 CellChangeTimes->{{3.728317943862924*^9, 
  3.728317961519827*^9}},ExpressionUUID->"078bac40-a46e-420f-a12f-\
49fd1ae5f140"],

Cell[CellGroupData[{

Cell["Figure 3 from Dors and Kletzing [1999]", "Subchapter",
 CellChangeTimes->{{3.7289867272744913`*^9, 
  3.728986734794132*^9}},ExpressionUUID->"941958a9-3551-4ae2-9393-\
f774133ee4ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nmPlot", "=", "1"}], ";", 
  RowBox[{"TmPlot", "=", "500"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"in", " ", 
     SuperscriptBox["cm", 
      RowBox[{"-", "3"}]], " ", "and", " ", "eV"}], ",", " ", 
    "respectively"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.728986738478112*^9, 3.7289867645576563`*^9}, {
   3.728986840084119*^9, 3.7289868436076813`*^9}, 
   3.72898698992439*^9},ExpressionUUID->"d7bcf323-2fa3-49b6-b60a-\
eb646b231d35"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.72898874775815*^9, 3.72898877868744*^9}, 
   3.728988900138753*^9},ExpressionUUID->"6e56ca50-06fd-4417-9b06-\
2f610db2bbee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotKappas", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"22", "/", "10"}], ",", "3", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotRBs", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10", ",", "30", ",", "100", ",", "10*^6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotter", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"JEVKappaPhiBar", "[", 
               RowBox[{"phiBar", ",", "x", ",", "Tm", ",", "nm", ",", "#"}], 
               "]"}], ")"}], "&"}], "/@", "plotKappas"}], ")"}], "~", "Join", 
          "~", 
          RowBox[{"{", 
           RowBox[{"JEVMaxwellianPhiBar", "[", 
            RowBox[{"phiBar", ",", "x", ",", "Tm", ",", "nm"}], "]"}], 
           "}"}]}], ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Tm", "\[Rule]", "TmPlot"}], ",", 
          RowBox[{"nm", "\[Rule]", "nmPlot"}]}], "}"}]}]}], "]"}], "/@", 
     "plotRBs"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7289868846598988`*^9, 3.728986900376893*^9}, {
   3.728986932888578*^9, 3.728986978023628*^9}, {3.728987037347642*^9, 
   3.7289870582828503`*^9}, {3.728987493109235*^9, 3.728987554498321*^9}, {
   3.7289879005855427`*^9, 3.728988026807*^9}, {3.7289882730725403`*^9, 
   3.728988277517962*^9}, 
   3.7289884121032143`*^9},ExpressionUUID->"e30b142d-d2a7-4389-a4c3-\
4caa43773e3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RBCols", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange", ",", "Black"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kappaStyles", "=", 
   RowBox[{"{", 
    RowBox[{"Dotted", ",", "Dashed", ",", "DotDashed", ",", "Automatic"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"styles", "=", 
   RowBox[{"Thread", "@", 
    RowBox[{"Directive", "@", 
     RowBox[{"Tuples", "[", 
      RowBox[{"{", 
       RowBox[{"RBCols", ",", "kappaStyles"}], "}"}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.72898707572156*^9, 3.728987113672327*^9}, {
   3.728987154448354*^9, 3.728987256496633*^9}, {3.728987301740033*^9, 
   3.728987306356193*^9}, {3.728987434698975*^9, 3.728987443314342*^9}, 
   3.728988416133713*^9},ExpressionUUID->"3cdcdc13-baf0-4a98-88a4-\
09370b46e318"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sort", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{"plotRBs", ",", 
       RowBox[{
        RowBox[{"Length", "@", "plotKappas"}], "+", "1"}]}], "]"}]}]}], ",", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"N", "@", "plotKappas"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"Length", "@", "plotRBs"}]}], "]"}], ",", 
      "\"\<Maxwellian\>\""}], "]"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.728989118399633*^9, 3.728989129516925*^9}, {
  3.728989240174694*^9, 
  3.7289892425020533`*^9}},ExpressionUUID->"f784d5ab-a4f1-46fa-ad7a-\
1dddc4a4c368"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "3", ",", "3", ",", "10", ",", "10", ",", "10", ",", 
     "10", ",", "30", ",", "30", ",", "30", ",", "30", ",", "100", ",", "100",
      ",", "100", ",", "100", ",", "10000000", ",", "10000000", ",", 
     "10000000", ",", "10000000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"{", 
       RowBox[{
        InterpretationBox["\<\"2.2\"\>",
         2.2,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"3.0\"\>",
         3.,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"5.0\"\>",
         5.,
         AutoDelete->True]}], "}"}],
      NumberForm[#, {3, 1}]& ], ",", "\<\"Maxwellian\"\>", ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{
        InterpretationBox["\<\"2.2\"\>",
         2.2,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"3.0\"\>",
         3.,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"5.0\"\>",
         5.,
         AutoDelete->True]}], "}"}],
      NumberForm[#, {3, 1}]& ], ",", "\<\"Maxwellian\"\>", ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{
        InterpretationBox["\<\"2.2\"\>",
         2.2,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"3.0\"\>",
         3.,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"5.0\"\>",
         5.,
         AutoDelete->True]}], "}"}],
      NumberForm[#, {3, 1}]& ], ",", "\<\"Maxwellian\"\>", ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{
        InterpretationBox["\<\"2.2\"\>",
         2.2,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"3.0\"\>",
         3.,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"5.0\"\>",
         5.,
         AutoDelete->True]}], "}"}],
      NumberForm[#, {3, 1}]& ], ",", "\<\"Maxwellian\"\>", ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{
        InterpretationBox["\<\"2.2\"\>",
         2.2,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"3.0\"\>",
         3.,
         AutoDelete->True], ",", 
        InterpretationBox["\<\"5.0\"\>",
         5.,
         AutoDelete->True]}], "}"}],
      NumberForm[#, {3, 1}]& ]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7289891116107683`*^9, 3.7289891302323503`*^9}, 
   3.728989275448367*^9},ExpressionUUID->"2f64cbde-0d86-4268-983e-\
582eb87eb48f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.728989147175045*^9, 3.7289891644157257`*^9}, {
  3.728989213755755*^9, 3.728989214965453*^9}, {3.7289892998949537`*^9, 
  3.728989302581711*^9}, {3.728989339871819*^9, 3.728989528441902*^9}, {
  3.728989572416192*^9, 
  3.728989607328082*^9}},ExpressionUUID->"f2757763-936c-4790-b95f-\
7346c2af5096"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sort", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{"plotRBs", ",", 
       RowBox[{
        RowBox[{"Length", "@", "plotKappas"}], "+", "1"}]}], "]"}]}]}], ",", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<\[Kappa] = `1`\>\"", ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
         
         RowBox[{"(", 
          RowBox[{"N", "@", "plotKappas"}], ")"}]}], ",", 
        RowBox[{"Length", "@", "plotRBs"}]}], "]"}], ",", 
      "\"\<Maxwellian\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.728989895133081*^9, 3.728989926682056*^9}, {
  3.728989974690722*^9, 
  3.728989977024412*^9}},ExpressionUUID->"2eb66f5d-478e-458f-aa70-\
89e80bffe143"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "3", ",", "3", ",", "10", ",", "10", ",", "10", ",", 
     "10", ",", "30", ",", "30", ",", "30", ",", "30", ",", "100", ",", "100",
      ",", "100", ",", "100", ",", "10000000", ",", "10000000", ",", 
     "10000000", ",", "10000000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"2.2\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[2.2, {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"3.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[3., {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"5.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[5., {3, 1}]],
      Editable->False], ",", "\<\"Maxwellian\"\>", ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"2.2\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[2.2, {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"3.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[3., {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"5.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[5., {3, 1}]],
      Editable->False], ",", "\<\"Maxwellian\"\>", ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"2.2\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[2.2, {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"3.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[3., {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"5.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[5., {3, 1}]],
      Editable->False], ",", "\<\"Maxwellian\"\>", ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"2.2\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[2.2, {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"3.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[3., {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"5.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[5., {3, 1}]],
      Editable->False], ",", "\<\"Maxwellian\"\>", ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"2.2\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[2.2, {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"3.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[3., {3, 1}]],
      Editable->False], ",", 
     InterpretationBox["\<\"\[Kappa] = \\!\\(\\*RowBox[{\\\"\\\\\\\"5.0\\\\\\\
\"\\\"}]\\)\"\>",
      StringForm["\[Kappa] = `1`", 
       NumberForm[5., {3, 1}]],
      Editable->False], ",", "\<\"Maxwellian\"\>"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.728989142551937*^9, 3.728989165371544*^9}, 
   3.728989215819791*^9, {3.728989291524942*^9, 3.728989303502829*^9}, {
   3.728989341866637*^9, 3.72898943252028*^9}, {3.728989504089167*^9, 
   3.728989528907543*^9}, {3.728989580007362*^9, 3.7289896023378487`*^9}, 
   3.7289896350431633`*^9, {3.7289899020298443`*^9, 3.728989927161544*^9}, 
   3.728989978565703*^9},ExpressionUUID->"eeeba647-819d-4043-a5d8-\
1d9ad91f8e4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotLegStr", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<RB = `1`, `2`\>\"", ",", "#1", ",", "#2"}], "]"}], ")"}], 
     "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sort", "@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", 
         RowBox[{"plotRBs", ",", 
          RowBox[{
           RowBox[{"Length", "@", "plotKappas"}], "+", "1"}]}], "]"}]}]}], 
      ",", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{"\"\<\[Kappa] = `1`\>\"", ",", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"N", "@", "plotKappas"}], ")"}]}], ",", 
           RowBox[{"Length", "@", "plotRBs"}]}], "]"}], ",", 
         "\"\<Maxwellian\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7289884212752037`*^9, 3.728988486164073*^9}, {
   3.728988519805584*^9, 3.728988634356718*^9}, {3.728989023654293*^9, 
   3.7289890591492367`*^9}, {3.728989224397358*^9, 3.72898925259476*^9}, {
   3.728989613919684*^9, 3.728989614219973*^9}, 3.728989686899089*^9, {
   3.728989962050934*^9, 
   3.7289900082401037`*^9}},ExpressionUUID->"a17aebce-fe80-4f34-968c-\
458a17c49d68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 3, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[2.2, {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 3, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[3., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 3, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[5., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), \
Maxwellian\"\>",
    StringForm["RB = `1`, `2`", 3, "Maxwellian"],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 10, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[2.2, {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 10, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[3., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 10, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[5., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10\\\"}]\\), Maxwellian\"\
\>",
    StringForm["RB = `1`, `2`", 10, "Maxwellian"],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"30\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 30, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[2.2, {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"30\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 30, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[3., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"30\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 30, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[5., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"30\\\"}]\\), Maxwellian\"\
\>",
    StringForm["RB = `1`, `2`", 30, "Maxwellian"],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"100\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 100, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[2.2, {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"100\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 100, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[3., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"100\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 100, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[5., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"100\\\"}]\\), \
Maxwellian\"\>",
    StringForm["RB = `1`, `2`", 100, "Maxwellian"],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10000000\\\"}]\\), \\!\\(\
\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\\\\\
\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\
\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 10000000, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[2.2, {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10000000\\\"}]\\), \\!\\(\
\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\\\\\
\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\
\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 10000000, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[3., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10000000\\\"}]\\), \\!\\(\
\\*RowBox[{\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\\\\\
\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\
\\\\\\\\\\\\\"}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"\>",
    StringForm["RB = `1`, `2`", 10000000, 
     StringForm["\[Kappa] = `1`", 
      NumberForm[5., {3, 1}]]],
    Editable->False], ",", 
   InterpretationBox["\<\"RB = \\!\\(\\*RowBox[{\\\"10000000\\\"}]\\), \
Maxwellian\"\>",
    StringForm["RB = `1`, `2`", 10000000, "Maxwellian"],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.728989688600904*^9, {3.728989963060444*^9, 
   3.728990008791669*^9}},ExpressionUUID->"2e8d4aeb-37a8-4293-9366-\
ccceddc232e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{"plotter", ",", 
   RowBox[{"{", 
    RowBox[{"phiBar", ",", 
     RowBox[{"1", "/", "100"}], ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "styles"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "18"}], ")"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      OverscriptBox["\[Phi]", "_"], ",", 
      "\"\<Energy Flux (mW/\!\(\*SuperscriptBox[\(m\), \(2\)]\))\>\""}], 
     "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "plotLegStr"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728986776947736*^9, 3.72898691168086*^9}, {
  3.728988042606904*^9, 3.728988216006654*^9}, {3.728988310881237*^9, 
  3.728988340489485*^9}, {3.728988391992144*^9, 3.7289884048063717`*^9}, {
  3.728990014538571*^9, 
  3.728990017174913*^9}},ExpressionUUID->"81aca2bb-d9b9-40ef-a916-\
bfb4c74b1dce"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1:eJwVlHk41VsXx83zdJQhEedExgzReMvaytRA1JUhRSkipTTRnAZTSKFOg7qm
VDIPEfZWN6QoLl1+v+M45qnBkDLf97x/7Gc9n/WsvZ7v+q79bOb+oB0HhQQE
BMb55/8x4Nz7zLzDimSNJy3F8aZAPcV6wMNPkdxK3P3efB8FDbVYV8RHkSzd
cLA/ms/mysUZuzwUyaPxok0b9lMwm5uSNmOvSFLe1Uek+VAQ13fuic0yRVIb
7Z5y3ZeCQmfje208BhEX81JJDKTAN+TZv2EcBtm/+S17is+qj7VVjFoZZPGD
h5F7j1Bw4ata0sVPDLLnxM0C/aMU2IaLJyytZJDzfXEb3gVR0FrOizvygEEy
XZ0TGScomNO9Ey64i0Euqai8FzpLgZMxx83BmUHi3GOfXOJzioWOAXsbg4Sk
h0jP8dnWquSj6SYGsevzTp46R8EtD5rhbcogAdtrPkxdoEA7ZunDSikG+TrV
1qkcRsG2sYLcc1iByFySk38fRUHy5OyVmjIF4hqsUOIeTcHovM3OBcUKxMzt
t+Qwn5OkWyeeZymQ7M5HBfIxFPC0Z9dRbAUy9vWp0b44Ck66Wr9bc1KBmCSm
HNZJoOBBeXPbhJ4CUR7zF1ibTIEezjsTr61AzqV1X2jhc3FVrNJyLQUSwhbM
DH5Mwedqe+cDKgok4M9lojlPKBBtLK9tElUgnmU6kyapFHTUbQ7yeidPpGp3
Bu7MpCBCfcjgnzXy5GT+RaVlBXw/mGm+Uqby5E5K7rM2Plcs25tipStPnq6R
EYktpGDMtGlRrpI8+SvmpdxUEQV7bMokYsbkSE9m3Z3WVxSsOBrVZ5slR/Az
XVZlJQU0Nkgp05QjD6Thmf4HCjyeR0xrqMiRSx+ncsf53JrQt+OKnByRO+10
p/IjBc3+KcL2c7LEff+N4V0N/Pe1QO1gCyVLtFaByO1GCt74SeqNJMqSJPeE
FytaKXguP/BSR0aWNLF9srX7+P5M24hFCssS/aX1A9L9FDztSd37dVqGvPYN
1fjJ57RSL/mCQRly9XRraM0gf18+/x5DNTLkaUO6+tlvFMSXVJvvDpMhvQGz
c/ITFIR4pZfempQmnMYkKTFRGlZLPl659oc0QbvDl+uI0fAr/15eZ680ubC7
6C8bcRpOiN18tuIfaRKlOH81SpKGoy+D2c0vpYnOlLKnthwNB2cgVNVHmhx4
xsRsFRp23KXWPKmXIl/us6kkQxoYVs2F9n9LET9j5pZuIxo+D9WbjpZJEVtp
Q2RmTIODZZXexkwpErr+Z3WjKQ32vU9Ve8KkiO5P1WCdVTRYmp+a1F0jRS6i
JFrVigbDT/KvclIkidzBbbs2uNHgfdys/jdbkjz3NTyf5k5DwoKdXRAvSV66
VhrK7qZh1jVJ5vMlSbJuHzHu3kNDA09934inJOn5yB3/y4eG4DF9KTMVfr8X
P+cOB9FQqmTtmR8tQWrjM+MtI2j4XnLw+HSYBInzn9pFRdLA8gi/sfGsBGH0
P+04E01DVHJdbtMhCTKxpG3jq1gaPHWdRcdtJEi5DTPcMZEGgbV7s80FJEhf
19CbphQa7DxDBIpOihP8WNHVHtNQXrFy7cbD4uS0hresfRUNpprjxz/tEydq
dPjSLW9pUOs60j3oKE6YSc/PutTw9fj5VC/RFyd/m7csjfzEn/eE482IdjEy
fzpk0JdHAy9KW9XTVox44UlzhggHXL52Og2uFyNX0qrv7xfjQJ3D48jT5mLk
yyP1N8USHChQUJu5pcWvH/T18pPlwI0kee67aVFyfDjYdEiZA0Yp06kmOaIk
rrVbNdSAA6Gln02EVUWJU0yHRfNODuwQWHG9XE6UXPXVyzuziwMGdneoU6Ki
ZG8xAy1x5wCn2eX6wJgI2VE5l3pyLwcsRyiqvl6EFNWnDNj6c0BEt/f6vasi
JEP3fuK1SxyITZiil/8QJgqLBemL2RzwpT3M+nuFierFbDo6jwPAKr/xhCNM
5ioeHHpYyIGRnItmC+qEyZPKyNW1ZRzY+UE4fDJNmEjXTatvreGAqpDcirce
wiTKY2eOYCcHUoNYEW7VQiQludvYSaUdxrJfnM6rECINatf176u1A/pucVCq
SIjQmy4X9Gu0AyfQbmN5qhApXph9LUa7HZQDAmc1rwiRv9m9N0RWtEPEgeJj
/X8IkWZp+6BUh3YIdN/ifjpPkDiUS1aR8HYou/eP3adMQTJRl2h/LbodJFo9
V+k9ESQRc8DbGtcO6buCFlCxgsRCQ8m5P6kduDsT6jcEChLFFyV52zPawcmR
ayWqK0gM3zpbD71rh5Wbgg0SHgoQQd79db4SXPjb6u76FXcEiHclN4Ehy4Ud
qNzxc6QAKSm4vO8NgwvHNoidkDkjQHq1wgIsFnPh+er7r685CxDNecdBD2Mu
aBq92XZKTIBcqd6uUeLCBUUDbW4Wbx53iUTUtGVywUT3qNBg/Txu+rK6GbK5
sE371TKd1/O4OuOqdlYBF8KXbAt6lDiPVf0+vLhbyYVZxZMCsVvm8YOKxEWv
m7nQN/OWFVQ4hyPme16sFeqA1/U+fmYRs/jAtSmO/f4O+Pv1XEXW6VnsNxYs
u/hQB3x8dneh3sFZTNXcuDx+pAO41z9ULdk4ixcVDNmVhHaAgKW5uszsDF5O
3slFx3eAdbZQY1/QDH6/zVDX/w3/fuxf6x66TuNzbfUTSQt50Hz+j3gV22ms
Gyh4e0iFB+0BLf23LaZxfA4qs1rMg++2komRjGmc/nC4fJrJA4X/jv04/WEK
7z1f++2uCQ/+DEJpzjCFnTLG1cO28oCzvUNWXHcSxxllrjS5wYMsiapHlNIk
ZtdJ6Q1E8uB8VcrybJFJnHCXjKfF8EDD3NfBpes3VvJj6xgk8mCv8rebqY9+
Y9PfWW4+aTzgcaal0cLfeNL6sFnCWx70+CtLhQr+wn0Rlg2Sop1QyJpkbxuZ
wK7NJco2kp1wjW7T1+qYwGyNK7nXZDtBx+HR5pryCRwlcq9fQbkTfE21I5VC
JnDZbs/GPbqdMPDLTCL/+088vH6TWP2WTvh21UFsmB7Hcqvrf6sndoLla992
+/fjeFiuoHHH/U6IHbtUmFE8juMEL7jFPu4E0335+/fHj+NTB3quKD/vhJOW
KrjNdhw7GLBbD+NOmJ3knanNG8MuP8asTIY7QeboycH08FHcxznXamnXBXvS
Y4jwqVGsckT4lYVDF2RzMu7u2z+KzxpWj5ryv2qnrW02GhtG8TFdnaj1Xl2Q
oGeZkjA2goPeFA4+OdMF6t3iu6/uGcHteRLWqc+6YFfuKnaV73e8qfBiSpFi
NzQISGbNbPqOl600/SWzqBvsnOnKlczvOHxH/pEAzW5YM3ap5xn9DSfvukmt
NuoGNYv3JredvuFCLy8jDdtuaC/ZXb1/3Vec9nZpidK5bjiAL48Lyw3hoYg5
NnewGzjyO8Ushwfx+ueBTsKj3eDirbMopHYQv3qfUWE82Q22gnWWX8MG8SpU
2cAW6wG9TQuimn8P4M0XF22tWtoDw9XpWumd/bhJ3TbD3asHghvqHGyLerHg
ja6Tn+ge+LpY5kdCXC+2qpMOutzTA77+Dre6/XsxR1L919pvPeAh8rnp8pJe
vHrcvqp6vges1rW4vg7vwdyuhH47Vi8oZHTsM/Xoxh0vS+2+BfRC9oWfp9T+
4+HgUs31Q0J90OS+fn17fCs+E9Ah3+DYD72aXB/arhUnBE473HPvh8neS9Ft
c//ijNPFQoEH+kEj+C3V4v8vduc+4pmc7YdDUVtCG6y+4Hv9d3n6Gf0wV+ZW
jEf/wZOyokFD//XD9jVD3tapDfhbiMTmV2UD8DO05PZDm1d4qFbce6PjEIw/
2bArwqwE/9qtZvyXxxCM1bxddFKjGEd66A1L+A3BD6XPT7ZOFOAfGZvWjl8a
gmafxj0Tm3Ow4PB2F/P8Ibj81M/Ih/EQ73mS/nO/6jAc2iY+1RKaBtSM78PI
4WEw9umwKfWqhqOZZ20MX36DX0TOvK2vHS5eTn48NTsCUcHJpc45/TBS1Oqm
smUcNFkzyZJ3RuDWgyPHKxb+Ail3C3nPNRNwt1zWMkZlCrRdjg93xkxBL2nJ
6VOfBUZew1QLmgdhuslE6O5/oDKoUjbvLIgOG7Z5Ol4WRNla2x2jQ4SRrlmY
mKalMDKOSJppqBdFm1KcPSzMRZFtU8deoxlxdOy20M0tSuLIbttaGrlKIXMf
9+Z7yyWR0xG2sWOmDEo8GCK/1l4ajR6bWX2qUQ7Jat9fxbWTRZZNq14+S1BA
ehbHWRvPySOn9mPs9CwGWrvBiz1ao4D6/jAe1cCK6E+Nn27JnxjoeP6JltGB
BUjiYKWZ1ogislcrS2iaX4hufDANYP23AC24H8GTM1JGm6ztRa4vU0IG0m7i
bjYqqLLpkWPUH8ro3afnbA13VSRs2lUuuk0FuWRdf2V5bRG64/RntNdJVWR2
dl9+4AM1dPnKG+3oyEVIyPvdml/vF6Na6yxt32I15MrOMpgdU0eG4sIa+tzF
aPJtwm85iSWoo3rDrZ38fIyYqPMFC000edZmocCSJWi1xuuN55dpIdOwd+yR
lZpo0LtIcTJHC73lbD8F2looKXc8k2nDRGJY1mRDqRYaDMnPcv7MRLqPK7oc
rJkoI6vWCDcxke819kCZLRMd4HGzjFqY6NR1oR+6m5mIayf9UpxiomS30DlB
RyZqVj7wsqKbiXrbBrSKXZmoslApW/83EwVa2V5ZcpiJEkZCcgSXsFByUUvq
j3gm2qEdZxKkxUJPPxqUeSYwkbxbeg6HxULSK6c/v09ioijcmFOiy0JZH0QF
0h4w0aVYg9wjZizU8Z34uKUzUYARJ7fNmoWaprdbVb1iIj3vMVM7O36/WUkv
49d8HXck8go3s1AkZ+WFBxVM5D1jkRfnyEL6xp1lp94wkUtdTJ6NGwtlzp/5
w+AjEynOp5oVeLDQy6Z8z7sNTPTZrCxPaw8L9YTtvijSyERb2H15M/tYiH3l
5xsu3weJ+lkz/wMs5PKlu3drKxO9E1iQ/8WXhUoXgGQp35cwC/0V1v4sZFUp
unxZOxOhQ5Cfd5iFfnusdr7TwUT/A3Vag28=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
NkJ7OEWF+9hoqSI9PkqOjf4H/9WE5Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$191126#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1:eJwVkXk81Pv/xce+xgzZZRlTllS2Spt5k7VUlpstiSylhKRSaV+ESJdECtEi
XzslS15vF0WWkCIk22CYmc8YV03I/fX74zzO4/k4/5zHOdqHw1wCBUkk0tc/
+n8/dqElr/S4HO4v/5/5Zh0uqOdYT3kdkcNvigOnpqlc6GgGXWF/OdwYUG2T
+YdNFV8/d/OSwykbu8WE//BSSc7TRXs5bJq0kNWqxYW7Exeybdb8yUOJzl0a
XKhwXp/2dZiCwz9eeCGqwoWgqJe91wYp+E6dkkexMheUs2hKhn0UHN10K9/9
D19kqaZe+kjBmcm7TF8occE2RixFp46Czxg7tFgqcqGvdvjuiQwKXp2ACwLk
ufBbNzlGwI2C65cGjvis4ILT+kGPPc4U/OtTnRpPmgs5ZqsN0h0peJ3bKueb
f9jWsrLNaCcFLw4JWuRLcSHJa4Dia0TB16StyBwJLtASdB7VSVJw4dF5uYOi
XHDklZdcADJ+m+32JO83AZn8pavvq8k4w+amYtESAbPLNq7yr8nYcy7kSNki
AalSffP5BWT8PkrrQeUvAoZpS1v708m4gfFJvGKegEh36ybzSDL+be0iGskm
IKO25+u8HhlbhthkiQ4SoAelZ+/RyHidhIoGv5+A1/WJCuu0yLiW2XZm6isB
ne/snQOUyHj1y/GSpl4CRLpqm7tFyLj0+zwt4hMB3z84hB1qksVibJ/Zex8I
uK0+bfDJXBb7OVUvjFUSkKP9NEjSSBY/u9y7ueg1AW/X+ORY6sriBArQzr4i
gGfUrVKiIIvvjjuKi5QTcNCmWjyBJ4OlhYo6yEUEmITGTdgWyGD1smWFyVwC
BsAgp1pTBr83nzO4kUiAV/7thVVKMphU33JdL4GAvpQJl6syMtg67czx1ngC
eoJzhOx/r8D29N0j0rEEdMirBn7uX4HVgl23X7pOwD9HJPS491fgO15H3FSi
CMiXnSpcLb0Cu/jLLK32/bPPgo1orNAKrL/osSbdh4AX47k+rAVpHCO8pUDy
IAFPqw7JljOl8a17Yw1Tnn/+8u8NR++l8aXpl7wkVwLuVb4zPXBNGk83x767
a0tA1KFnVUl8KTyUa1G8dS0BmyWyNm4hpDBHZFvAPn0CfpSllY4wpDDpgdCE
ny4Bp0TvvDT5JIVbfynZXtEhILQwIr2nUArXhSaZ5KgRELhIP6fsL4XJcpK3
oqQIcHnQb57dLonT66O6vJkcoFj2VNg3SmKfK4901kxyoHO63Wi2WhJXDNpz
WOMc2GNRr2eVJ4mrlf8diRjmgD3jhfL4NUncnLvAO9TLAQvT03xdc0mctF15
Y20jB9Z+lH1TnCOBU+dSDh99zAHfk8btP9Ml8EV5fpNoBgdS5F1H6fcksIXQ
zJOcNA4suadKd16WwC3+5KruZA50DKv7cb0lcO6tWtWVcRyI4OlLGitJ4EVT
LzeVMxyoUrD2LosXxw0xB6NVHTnAqQw8uXBNHNvFz5QdduAA1SvmltV5cTzy
/YFEni0H4jI/lHQfFcfbS2KlDCw54K3rLDJnI46dHjJlpDZxgLTFp8iUJI5l
vainLDQ5YOcdRXoVKYYfVuYr7SfYUPt24xar42K4tlCgmz/DBiPNuZMf/cRw
75XJ12lTbFAdPTHG3CuGw1oTiLYRNnCO+L/T0BfDp1kZz0R72JByau+d299E
8QvnWL+aSjYMx9GUvW1FsUq8vrpUNBv2s0acmNtF8RulutK1UWz4sCcr9oyp
KFbkKo7ZRbKhnKy6mKQlim8oyYmeCmHDrVTZoaYFETzbufJ9sjcbDHMWcjcU
i+DIZof5hW1sOFfVuUFIWQRbFylJ7fjJAheSyc1aGRGsJqd8dJDHAgO75P7T
IiI4KPkvzhkOCwZ79t+c4gnj0SSrw48ZLLDg9ve3twvjH1FmnsWfWCCsy7iZ
dl0Y992gL48WsSAx5dfAOkII3w1FwgF+LAga8DKeZAjh8fFiPx9vFtCptbey
B4WwYuLRHa7uLOAWXzKW/yCEH25U8DTcwwLXVqEY/lMhnC4/eTXDnAXKgjIm
DV5CeCwlOeGoDAtyw6i3Pd4J4v31qXopr2aAV/S/M6VvBXGxZozRppIZQByz
QMlXgphlFt3cnT8DgyF2VrW5gnh7t2zKYtYMKB4LWdK8KogvXrSSlIqbgdsB
r8Mntwni5ratTPWDMxDiucvzTKkA/lGh7D65PA3VaZ/sPuYJ4LZwhY1d/GkQ
7/PepJctgMMmL/AreNPwzC1Mvj9RAKvlGagcm5iGIdeU9h0hAthGuYwW1z4N
TnuHLEV0BTB/6ELIo4fTsHFnhEHKIxLmuR3bMLJhGhotH2w3SSbhUg1O2BG9
aXBBtXs7Y0nYuGffC4bWNITvED0lfZaEs8/lDLRQpiF/88OaG84k3GYgecVo
jgmahv84nhYl4dbrO7vDKpggZ0AbKhhehkCZJ39dMmLCBt1QQWb7Mlw6+Ebg
X10mONLerFldswzuxoq5vppMiNFwDHt8fxlkThHZGjJMWJKLJCXuWoZD3UsZ
hjNTMLHYQA2r+A1tjzoUYnOnoKbd/4jx7SV4JjpvKbZiChprfr8tOLMEjbJ1
pVyhKWh7+WClXuASdJ0OdexamIShm631GlZLYPpckXF2ahJIFqbq0kuLgNZW
9Xg2TIJ1kWDXRNgidMikrD12dhLaEp9sfeS+AEb94QsxfRMwuO/7CjFdPqgb
fCGLX2RAgXj9434FPjTuVjpRfZIB0fU564qE+aCVkBB+OIgBq0yD9uwf/Qlv
FEv2Ju9jgI8i+07u45/Qnxzz91ltBgwPLkihlT9h1Pvd7Z0N4zAerCh5TuAH
/H6Y6F++PAbs63tEZwbmoDRyVNDSdRQsaoK+2bfMgWep+yXWzlFI5F2ueP56
DvxpX67Hmo2CkV/Z4cP35oCVu00kTWEUIi2U4KvtHJRYLreK9I7AEn/4bHMp
Dy4ZW2I19xGQDo1kPouZhW92v9xYu4fBrWRTen0QB7b85dYhJD0IHSSJgsWd
HNjUqZepOjUAds4DdRu1OaC4I15uZeMAmPMuj78cYMNcsG1R0YUBUDVr2fC3
Exvu04uVrzL74VvlgXeHt7Ig5B+FlYnwFQLgypyQzDQIlyu3MP7qhYiOD3ts
XzFgKc1zJku7G1hq0kTKXQYkCTfG2/G6ICh4T9JYMAMcpPy7mv/pAi/hzu4r
Ggxw5VXIe/h3geXWz+41MeNghPI4L3I6gfz8u5+R1xi4eO7cI2jWAUUX/z2t
+t8wzOnzQ69+eQ/dntu3f7vXB601rAO73CqAoTnkP2DXBzkJd/5zPF0OfMbl
+K+/e2GzOPdtaXIZrIpo6P8c3AvSMQ5GTzpK4GjcrnMdll9A/buD5trz+fC7
2uM1zH6CEv5/Y9KzD2Cf+bSvdW4HXM3USw399YT+77nKvx/ZvIFNoydd84Ma
6ev9v9tUHXpHl1D1Fpop6qf/wDKmXye+0Z+231Ninpikx0VkVjkXT9If3HDL
amVw6ZrUxUyJZC5dZeFYbhz7B13S00zW23ye/q6pIUuC9ptO239yZiThFz3J
Ws8GxwogSmnHr89omV419sSF0iiMlJhK1cvOAkgycp1ic40YKtLatzc+SgjJ
P+SywhIl0frbqYsd7SKIxR7Nno5egWy7v/sYLoqhpvs3uVxJMrJz3DKA3CWR
2JRx+iFfCnI6kb5+b540GqEvOKhlyaHZ8MXNp7tkkO93v7eub+WRRfemwpcp
ZJTUfu/L6MxK5PQtPP1ZAQWNzX3WcRBURBPb1s+uAjkUyjs5+4iihE6Wnfo8
OyWP2pUaKgs3KyN71eqU7uWV6CJxuOHALpU/PW8Pyxgqok/cn1WvI1WRgZSH
mIeNEmqsduwdildDTR/z01d5KqOf47MLgpnqaH/BzTcWN1RQS892n5b3q5Dx
eb+ykAxVVC6n2CgwpIEEfZvMf7SooWsjfPkRES3knl5gsMRTR2UmchaqD7UQ
vyHlp4y4Bkpsk08Lo2mjBFER54tmmih6DK+JrtZGm1fVWEWv0ULy1VdbM2yp
iOn7So5frIWwCXWTQCcVpZbM5WnbaCPfuojjyoE6iBlVVuDcqY0InZOXt3F1
0POCZkPo1kZFd3zb83g6KGB4qMDwszYiF9xRU5zXQUN2UoVi/dpIn5n+hvtL
B/UoBhS+HdNG9OAr88+EaKiuQqFI/6c2ei9IP09WoqEUblSxgAYV8YSyCxk7
aMiFdndDmBYVEYGZgq6IhmQ9nhUPUqmoeK7THVvRUBx0FVfqUpFJapdghh0N
XU40KDlhTEX/aW894ORMQ8cMB0u+WlORfnaEQk0ADen58ozs7KioviX1hN4R
GmIki5dWOFBR376ZpvvBNOS7aFZ6dy8VFcXQzoaH0tD+DwmlNh5U5OTUNbA6
iobklnONy72o6IBoxMbk8zTUaVxdqnWQihwdLe+SLtLQrvSJ0kU/Kip/fmzn
wFUaEm9fMg4OoCK0u/Gx/Q0aaiLJl30JoqKBrN38V7do6JqZvol1MBWZnyC5
6sTSEDpKLys9TkV7o0cLk+Jp6P8A0pMB6w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJwVkWk4FG4fhce+G0OWRBhTJMmWpcU8ypYo0oJkiUSKlND2V0lJUkpKobKk
JAxSKL9H1mRvrLMp2bKTyEiv98O5znV/O9d91I4E7T3KSyAQZpbz/z5+4fNL
WoA0jndpn56X7AWlNIsh12PS2FiENvh0mZvqQIPfWxoPtVddsFpmA7niFwdc
pXFY9kTEPYleWMxPy+DaSONen7eja8R74c7AhWeWa6Uxoyf5j6lILxQ56jzq
7iVh4gy1XYavF3zDX3VeZZKwGPs08w1vLyg8pchrd5FweE5riPUyXxpVTPyv
mYS/VekePMfTC1Y3hBLUy0m4pNkxO+8fB7o+9N45+YSEW/u77i/Nc+Cvxv0b
PAdIOOqWnuHwTw446DCd7R1JWIX+ZXZkmANphmu0kuxIOF1hPnZsiANW5u8a
dHeQ8Nrm60ZjAxy468ogeeqSsGxe+h72dw5Qbqsnl4uS8Mv7rw5f7+GA3XRh
/gWQwokuXrl9dRxInV+8UlsqhZMfVziX13JgasnSSaZYCh9zuvDqYQ0HEsW6
ZrNzpPClhWRjqyoO9FIWN/ckSWGNpOTue8CBkIMW1SYhUrih/ljN0FsOPPlA
757VlMLlQ8SAC885oAm0sHiKFPYzZBuZPeNAcUWc7AZVKWxsjDP/pXKgpcbG
0UdeCsvdB9//kjkg0Pqhrk1ACu+MddgV8JADnPqdQR7VRGwRcNSK5zYHopV+
an01IeKkp+cGpcOWfahl+IrqEvE2t88SWWc58HGte5q5BhE/TRhKNw3hwLRu
28p8WSK2eVik4BrMgcOWpcK3pyXxFub0zI0ADugHxgxY5UjizVfMBh54cIAB
WmmlKpI47kz44kkrDrhmRy8oy0viYMKuTrrF8l8JA3uvSEpioyP8f0x3cIDu
n8Zn81cCq1d9FPlH5UCTjOLR9h4JLDbXvT7ElAOfjoloTj6QwLVGMXXC2hzI
Jg69WSMugVMSt2Y2Epf9LFgK3uSTwEf1B5P/SHAg60e6++iCOBYlrUhWF+dA
RokHsXBYHKPE0JfBwst/eXeeQrXimG/2xMdZAgfi39UYHLoqjlMFuJNPptgQ
7pFZcndeDMvEc+scWtlgLPJ0k+mEGPY3vTYq1syG3wWPaN/6xXAv7adfVQMb
zgjGvtL/Kob1GSMeG+rYEPjmdBL9jRhmPdadYJez4SiXek7BWwznf99T//E1
G/Y+7DF51iiKRVjf/J0i2UAypxfZVIni71t4jhReZkPLz0bdqVJRvGrjaxup
/9hgb1ahuf2lKNa4ZvcVh7PBpj9L4cdVUWyjnbwsmA1mBmfnNUxEcQfPwYae
g2xY30x8n5cmgge/aC8qrGODZ7Be41ySCHbtT4vcsZYNCTJO36nxIpi4zuzX
cXU2LB5MFG+JEMFTx0Ii85XZ0NSr5DXpJoIjowS5stJsOD29TlRPXgRn547t
sl5gQYmshVvBLWGsUfXikVYdC8bfHQ1euCqM5SSPXBypYgHZ9cb17eeFcWdi
UsfLChbEpNbnt/kJYzs7NY5CGQvcNBwFZiyF8fFRDXrjGxYQTN1zDQjCOJIo
yLpxjwXWbuGEtyFCWO65DI+qCws+fNxkuj1ACNdEFBEV9rNAV2UmuNlLCA8+
j3YTc2SB4veTfcO7hbCj8+nHfTbLe45516xeJ4RJt8JEXE1YkHBmd2w0SxC7
3dLJd5FjQW8MRcHNShA37XqZer6JCftHvzkMbxXESdmR6s2fmVBv//RmqIEg
Tvfj1VhdzYRCKUXuXVVBXBiodvd1GROuJxLZ1QsCePjvF8PIl0zQTltI35gn
gC+Ghi2pXGHCuZKWjXwKAvi6mP5bzgYm7CXoR32QFMCC/t6OdzWZoGV9v+es
gABef86zfrM6E5j0/VFD0/w4s/650SUFJphN9vQ0NvLjQJc6vXe8TODX6I96
FMmPV3kM+fxpZ0Bcwh/Ghgk+nOkjlHU1jAG+DFe9wX4+fGjllyzPYAZQyR+u
P2Py4Q9Dog+MAxgwmfefnkw9H26/Ayta3Bng9IXvxnwGHyaGO1VnWzJAgVdS
v9KVD/81uZ7/j8SA9CBytHMNLw6MEV4YyeiB6dzXobSPvJhrXXfAMbUH0Ljh
UdG3vNi9jZqc97AHmCest39I58VEyaOVB2J6QO74iUWVK7zYzmNX3u6gHoj2
KT41uIUXs/0rbdnGPXDCxdYllMaDfQZ9fCwru6H00Vfr5pc82FszqeZ9WTcI
d7kZaT7jwRNu5jKUom7IPBAk0xO3zNMStt8zuoHtlNC47QQPPjL7ymwxqhsc
drPNBTR48KdWEVqqVTds2nFaKyGZgE2seH08KrqgyvzhVv37BFw6KHyA/30X
7EUfdrfcJGCVjukzqbldcGqb4BnxMAJWCnzLW/CkC7KNH5ddcyTgHTUKK/af
7QIV7U92ZwUJ+FL2oPLltV0grUVh5/QuQdYBpQHi5U7YqBHIO9y4BHIDyXXm
ZzvBjvJ+7ZqyJXif+Mzk2PFOuLHaLijlwRI4jI/fjN3XCYvSIYQ42yWotWEE
UDU7YYBbSQ4q+gvFQ1Gtpo0dUNbofUwvehGM/VwCV0l0QFXZ3485oYugFEiu
DuPpgIZXD1doHl2E0HHn17Wz7cCO+lKxevsibN7kO2PObgeCmYGS+CIX1Ov+
iT/NbQeLXN7WgSAubPjUtHLSrh0a4p5vTj64AIFTBmN3I+hAv7glXt5qAUqU
nDosT9OBdbx98J7hAqQnuGeM+tBh3ErkwU3SAvgk/y4m2tJB6t+pidAvf0Br
S9u6bBk67AtCGY7UP5BouvhRPeMrMPdwJIQ05qE0PEWgsqQNcoQrUnpk54F+
ZZH7I7sNLlakbcjlnweCV0nq3JM2UDbwtd//fQ4YLkO545fawF1uLDY9ZQ5Y
8kQPsnkb9DIXxNCKOZDcl8p3v6oVfvjLiZ7j+Q1jed1eG6EFisjzSXaTs8BQ
8m3fmdsC1xjd61Q5s9BlvkPSKaUF1tin7Kz9MAtuzw/d1bvQAr66lJuy4bNQ
HFUpp2zUAkO/9YQLxn+BhSlZHTk2w1ikveAIYwZ2T5TUVv9rALMyX5bN5xnI
KFqgaXY0QNx0RNGL4hmIUbbXcc9pAF2vgiNH4mcgVfaQDnJugBAzeei2moG+
BZkIxpsvsDjfG1ZHm4aFAJdsG4d6EA8MGc68MQVZtXvvfDpVC4czb2O+s1Nw
M4hop2ZeC7nMFw+9jkzBa5mMOTtSLTjs6rZU3jYFT5S2e4nSaiBB0ywtYXoS
EgsSvBXGq0GpT+hQ5OFJcOwaIzm7V8GBfKOkCt9xMBV25leUq4AmgkgOd8c4
OLNT9nv2YbB2ZJRvUhuHAYNDQmfzMZhMR/x4xRiDBdqXcWFbDIqGnzfecxgD
0YXD3JzZcmC9O1RzZPMo3IwliTZkloEPXJ7hk/wJzNngwivvioBJdBI0GxmG
xbl9XHHLItjvuWZleN0wXCsxkF/fVghWPPVmo1eHwb+r7NbqkQLQ3CETQ58b
AqkLpNxueRqM1GSqZn4bhLserynF77PhdFO9vdXbfjgUdNktdFsijK4Sn0i4
0w+Bycpz+4gJ4Otvf7fPvx/oOz2K+Tjx4Mrf0nZ5dT8YCQ7VJk7EgPnm9oNl
N37AYKPCBY8tp0HqBcdL17UP4rTc7oy43aLmXvp1VvFfLzxW3z6WP/mK2uay
dSsrvgsmHtnu85vA1H4VtjfDugsexL+4GmVVQZ3vj7jV/bcTvCKNDk+lVFCV
T1f2tPt3wqptEYVv7T9R/WJszzWZd8DSyFq12fxK6t9S52KY+gru6xr0T12v
oe4x+elpkd4EHoYKjH2BDdRf597dS7Z8D7cfr1cLS6ZTZ55tOxCt9w4WPvU9
KW+iU6drK1eGKBdDhYBh4XqeduqEbMuzXbOF4HrmZE+obzuV7t16eHZnHpif
iJ5r1e+gXs46pu1NSoaq8zKH09o6qX52Qn/az2VQz00MiTF1GFQdb45liUcN
NdzH6pXbhm/U31jSoHuARX3yC6W8WxymxpxOLXHMG6QG7y2tbyqeoqqQuaki
9yepKf6pn775zVFFXQyJbiaz1OyOqATn0L9Uyv7gkW+3/1DjjslryNJ4EInW
9KcdLVE3sfpyHs3zI/lh+dIlRx509F4WxUBQGOWq7tl9K5wP1a2el2icEkU6
0YncpkYB5Lgkd9lkXgJZtXHctblC6HY/D1djjxSytjNloIOiKJSZaReTQUIO
J5N0dr8UR+3h2TXJTGk0dYprfLZVEsWvdPFsnpJBZm1Gb14lSKETGlX0NHlZ
5MA6lZSZQ0K+ijLc75pyaGCLzpQySKMrB2PlqjfJo+CCM+1TQzJolq9O56er
ArJRLE1oW1qBmmDNvfMnVyKZx9G9ktpyyP5xuvW/h4pIS8xZyNlSHmVt8vjq
nrcKVTdnJym7KCD3VMLa4goltD8n6r3ZtZVoV9NofvaIMtI771Vw4oki2jRE
ERXgVUG8ntUmvz+vQpQ4OmNSXhUdTMrRWpxWQkOyWpcMc1TRfGXCnKTwalRn
G0CNN1JDtwUFHC8ZqqCbb09+S29QQ8bKZdsvrlVFu8sjGmqdyWjY8630fJ4q
it0V66/7nYwS82deqlmqoY/0F2a2YepoOLwgx7FFDQV8ebA+iJeCXuTUaUOb
GhKryb3M5Kcgn152jna7GnJp4LbvFKIgtrXYG6EeNeRE0LtCEacgupzPm499
auipIU9PtywFlRfJ5q6bU0Mpm/keWKyjoITJ8Dye1WS0amlCR9GBgvZS7mwM
UiUjlVnZmBt7KYjonJnHJJPRVIZf/699FBQDrXnvNMjo/YH7yc0uFBQRp5V/
Uo+MNDXmxaO8Kei4NjO/24KM2KdaZydCKUjTc1rX2pqMBtWynQ6fo6D++8K0
op1k9MI6h1Z/gYI8uYa0O7vJ6LOmdmDmZQraX3+bZrns5dTXFcOuMRQkvZSu
V+hKRjtLDWzqYimoRa+UpnqYjBZizmdtukNBtkkDNK4XGXVoRvhKJVCQcOOi
nr8PGZESt9ZcSqSgaoJMQYcvGW3boLZ25BEFXTVcp2/hT0bT5drXnZ9QEPKj
FtACyIhXyWOgOoWC/gckZ93s
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
z41n0BA6Ri9m/E1Fr4qTHNyf0dD/AIhA5ms=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#11"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#12"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1:eJwV1Hk01N8bB/BBdmHIUlnHNqRQFInnZq8vSqWQSrYiJUpZ2veULSKtsrTa
KWX73LIkZUkknxljLGONLMmu3/z+uud17rnnPOf9PM9V9Qzc4cNLoVCW8VAo
/z/9Iz6/yDsihStKojpc7UhQSLXqdzskhRX4Q7YlcV1fQ2gt8ZLCQq+F+Fq4
Xif79tluNylsuMdrvdMWEuZzU9Pn7KRw/RqzH/ZbSYjpjUix1pTCGgF7zZ3s
SSh0WnOvjU3FizsSO2O3k+Ab+rL1EpOKdW3FPFq5ln+iLqf7k4p/7HXQVXIi
4eyvFYnnGqiYkRKVk8m1zXXBBLVyKp7IzfCv20HCz1J2zNEHVJycFMGj5EzC
glb8dZ7dVNx88ZbJoisJ29cwXRycqPjSFPrj7EZCqqGGTrI9FUdO0OWzubbZ
XPRV35KKPw7GPTqwl4RYNwbVQ5+Kl2tMZn5yJ0E9Su1huQgVC3dfc8o8QIL9
eEFuBCGJH6ozj3/xIeHx9PzFT8WSOPLM4G4DXxLGFq13Sr+VxBuNwouSuE4U
/Tn5KlMS/4s5NehziAS2+vxGMlkSj2wLpwv5kXByj1WV8UlJfO4R55Z3AAkP
SpvbJumS+KLmqp0XT5BAJ/JOx6lLYssbzPbfXL/9EC2zWkUSHx1Y6Nl/koTG
ajsnbzlJ/Duizt88hAT+b6U1TfyS2GtZoDffaRI6arcEHqiSwL9QUGxGOAk3
FAZ1vhtL4D+tk5OOl7h5qKb7iuhL4OZ3qw3quS7T3J+6WUsCs/yk5h0ukzCu
37Q8V0YCC3pEWG67QsI+62KhqHFxPF2r9drlGglrj0X22mSK42ur/E9cjySB
QeikFiuL4x3MhnLXeBLcXt2YVZQTx9n2LQcGuP6Z0Lvjorg4Di4+khKWQEKz
Xyqf3cJS3OCpzvfwLne+pFf4tJBLcei+Ls/+JBI+HhKmj95dijuu7tJLeUjC
K4n+LA2xpfiw48otcc+4+cxaC9zkW4pX9g84rH9OwvOetP2/ZsWwxliFCJPr
9PcHJAoGuCb6c7Rfcvvl1XocfRLDKTd3EHWvSYgrql6395IYPn62L9ckj4TQ
AxnvY6dF8YKupdDzUhI2CD8xMvktimVjx9tOlpHwN/9eXidHFHNEqzMsy0k4
IXD75drvoni/QYV+D0HCsazg5OYsUdxT9WO9QQUJPnMQJu8lit+x25XmP5Ow
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#13"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
Pnjm81ZEFf0PZS/z+w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#14"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#15"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
rZ6vOW5rSUfoEFFUeISKHEKd3Ius6Oh/SpYJmQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#16"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#17"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
zMKCw8v59XY9eXGYgf4Hxv3Nsw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#18"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#19"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
ywxpCJ0gCgtOUVBx6iRDcysN/Q/jGg55
          "]]}, 
        Annotation[#, "Charting`Private`Tag$191126#20"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, AxesOrigin -> 
     NCache[{-Log[
         100], -1.0096985904120392`}, {-4.605170185988092, \
-1.0096985904120392`}], FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-4.605169904038897, 
        9.210340090026989}, {-1.0096985904120392`, 
        17.585344742745644`}}, {{-4.605169904038897, 
        9.210340090026989}, {-1.0096985904120392`, 17.585344742745644`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Energy Flux (mW/\\!\\(\\*SuperscriptBox[\\(m\\), \\(2\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
         OverscriptBox["\[Phi]", "_"], TraditionalForm], None}}, 
     FrameStyle -> (FontSize -> 18), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[10000]}, {-1.0096985904120392`, 
        17.585344742745644`}}, {{-4.605170185988092, 
       9.210340371976184}, {-1.0096985904120392`, 17.585344742745644`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 3, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[2.2, {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 3, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[3., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 3, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[5., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\), Maxwellian\"", 
        StringForm["RB = `1`, `2`", 3, "Maxwellian"], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 10, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[2.2, {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 10, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[3., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 10, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[5., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\), \
Maxwellian\"", 
        StringForm["RB = `1`, `2`", 10, "Maxwellian"], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 30, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[2.2, {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 30, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[3., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 30, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[5., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\), \
Maxwellian\"", 
        StringForm["RB = `1`, `2`", 30, "Maxwellian"], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 100, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[2.2, {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 100, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[3., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\), \
\\!\\(\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\
\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\
\\)\"", 
        StringForm["RB = `1`, `2`", 100, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[5., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\), \
Maxwellian\"", 
        StringForm["RB = `1`, `2`", 100, "Maxwellian"], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10000000\\\", TraditionalForm]\\), \\!\\(\
\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\\\\\\\
\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"2.2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\
\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\\)\"", 
        StringForm["RB = `1`, `2`", 10000000, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[2.2, {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10000000\\\", TraditionalForm]\\), \\!\\(\
\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\\\\\\\
\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\
\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\\)\"", 
        StringForm["RB = `1`, `2`", 10000000, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[3., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10000000\\\", TraditionalForm]\\), \\!\\(\
\\*FormBox[\\\"\\\\\\\"\[Kappa] = \\\\\\\\!\\\\\\\\(\\\\\\\\*FormBox[\\\\\\\\\
\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"5.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\
\\\\\\\\\\\\\", TraditionalForm]\\\\\\\\)\\\\\\\"\\\", TraditionalForm]\\)\"", 
        StringForm["RB = `1`, `2`", 10000000, 
         StringForm["\[Kappa] = `1`", 
          NumberForm[5., {3, 1}]]], Editable -> False], 
       InterpretationBox[
       "\"RB = \\!\\(\\*FormBox[\\\"10000000\\\", TraditionalForm]\\), \
Maxwellian\"", 
        StringForm["RB = `1`, `2`", 10000000, "Maxwellian"], Editable -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7289880700018473`*^9, 3.728988144365069*^9, {3.728988183408306*^9, 
   3.728988219915185*^9}, {3.728988288825411*^9, 3.728988346667583*^9}, 
   3.728990022469702*^9},ExpressionUUID->"c7e8b3ad-1405-4564-b2c8-\
3a5ba2f8632d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 873},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 513, 14, 101, "Input",ExpressionUUID->"078bac40-a46e-420f-a12f-49fd1ae5f140"],
Cell[CellGroupData[{
Cell[1096, 38, 188, 3, 65, "Subchapter",ExpressionUUID->"941958a9-3551-4ae2-9393-f774133ee4ef"],
Cell[1287, 43, 493, 13, 31, "Input",ExpressionUUID->"d7bcf323-2fa3-49b6-b60a-eb646b231d35"],
Cell[1783, 58, 173, 3, 31, "Input",ExpressionUUID->"6e56ca50-06fd-4417-9b06-2f610db2bbee"],
Cell[1959, 63, 1638, 44, 78, "Input",ExpressionUUID->"e30b142d-d2a7-4389-a4c3-4caa43773e3f"],
Cell[3600, 109, 892, 23, 78, "Input",ExpressionUUID->"3cdcdc13-baf0-4a98-88a4-09370b46e318"],
Cell[CellGroupData[{
Cell[4517, 136, 841, 24, 31, "Input",ExpressionUUID->"f784d5ab-a4f1-46fa-ad7a-1dddc4a4c368"],
Cell[5361, 162, 2434, 78, 59, "Output",ExpressionUUID->"2f64cbde-0d86-4268-983e-582eb87eb48f"]
}, Open  ]],
Cell[7810, 243, 349, 6, 31, "Input",ExpressionUUID->"f2757763-936c-4790-b95f-7346c2af5096"],
Cell[CellGroupData[{
Cell[8184, 253, 1147, 33, 55, "Input",ExpressionUUID->"2eb66f5d-478e-458f-aa70-89e80bffe143"],
Cell[9334, 288, 3909, 93, 59, "Output",ExpressionUUID->"eeeba647-819d-4043-a5d8-1d9ad91f8e4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13280, 386, 1701, 45, 78, "Input",ExpressionUUID->"a17aebce-fe80-4f34-968c-458a17c49d68"],
Cell[14984, 433, 7253, 146, 82, "Output",ExpressionUUID->"2e8d4aeb-37a8-4293-9366-ccceddc232e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22274, 584, 1086, 25, 69, "Input",ExpressionUUID->"81aca2bb-d9b9-40ef-a916-bfb4c74b1dce"],
Cell[23363, 611, 190037, 3522, 734, "Output",ExpressionUUID->"c7e8b3ad-1405-4564-b2c8-3a5ba2f8632d"]
}, Open  ]]
}, Open  ]]
}
]
*)

