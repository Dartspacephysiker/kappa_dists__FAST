(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    740836,      13620]
NotebookOptionsPosition[    732618,      13487]
NotebookOutlinePosition[    732960,      13502]
CellTagsIndexPosition[    732917,      13499]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["All of the following is for a Maxwellian", "Section",
 CellChangeTimes->{{3.7264038328483458`*^9, 
  3.72640383787218*^9}},ExpressionUUID->"613595d3-f18c-40c4-9ce0-\
39785eb9417e"],

Cell[CellGroupData[{

Cell["Load package", "Subsubsection",
 CellChangeTimes->{{3.726480745650592*^9, 
  3.726480751600271*^9}},ExpressionUUID->"585919ef-c169-4114-bbaa-\
97630962836c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir", "=", 
   "\"\</SPENCEdata/Research/Satellites/FAST/kappa_dists/journals/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "dir", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "Liemohn_and_Khazanov__mapped_Maxwellian_density.wl"}]}], "Input",
 CellChangeTimes->{{3.726480566976571*^9, 3.726480579131708*^9}, {
  3.726480732169458*^9, 
  3.726480761429207*^9}},ExpressionUUID->"b26690e2-3bfc-4a7c-ae06-\
f2ea45fbb4d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"LKMwellDensFac", "[", 
      RowBox[{"phiBar", ",", "RB"}], "]"}], ",", 
     RowBox[{"RB", "\[Rule]", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"phiBar", ">", "0"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["phiBar"]}], 
       SqrtBox["\[Pi]"]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "phiBar"], " ", 
       RowBox[{"Erfc", "[", 
        SqrtBox["phiBar"], "]"}]}]}], ")"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7264029698676643`*^9, 3.7264029855513287`*^9}, {
   3.726403190231206*^9, 3.726403193494331*^9}, {3.72641226241463*^9, 
   3.726412264652554*^9}, 
   3.7264807001244593`*^9},ExpressionUUID->"80ad6b9f-0d78-43bc-8a9b-\
93359336576f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RBs", " ", "=", " ", 
   RowBox[{"Reverse", "@", 
    RowBox[{"{", 
     RowBox[{"3", ",", "10", ",", "30", ",", "100", ",", "300", ",", "1000"}],
      "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72829022471951*^9, 3.72829022633997*^9}, {
  3.728290262306695*^9, 3.728290277242949*^9}, {3.728290353038313*^9, 
  3.728290363092956*^9}, {3.728290497782432*^9, 3.7282904997800837`*^9}, {
  3.7282909080444603`*^9, 
  3.728290912312545*^9}},ExpressionUUID->"665ec0e3-a2f3-4f33-9335-\
353fc7f4e0a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot as a function of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Phi]", "_"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5066cad6-e025-4042-8e48-5cf13b86474a"]
}], "Section",
 CellChangeTimes->{{3.728292588675457*^9, 3.728292599392466*^9}, {
  3.728300478468389*^9, 
  3.728300487827791*^9}},ExpressionUUID->"bc23f743-837b-4bc5-8068-\
3dda4c0fe889"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kappas", "=", 
   RowBox[{"{", 
    RowBox[{"3.55", ",", "10.59"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7283009741184893`*^9, 3.728300975824497*^9}, {
  3.728301008520199*^9, 
  3.728301015408677*^9}},ExpressionUUID->"bbf025cb-75b5-426f-8d81-\
89077dac82ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKMwellRBFuncs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKMwellDensFac", "[", 
       RowBox[{"phiBar", ",", "#"}], "]"}], ")"}], "&"}], "/@", "RBs"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291705310709*^9}, 3.728292566261046*^9, {
   3.728301019681707*^9, 3.728301053960232*^9}, 3.728302628649419*^9, 
   3.728302663905828*^9, {3.728302744409853*^9, 
   3.728302745544636*^9}},ExpressionUUID->"95f6c6c9-fdbe-42ca-b7e2-\
f4da28e2412b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKKappaRBFuncs1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKKappaDensFac", "[", 
       RowBox[{"phiBar", ",", "#", ",", 
        RowBox[{"kappas", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
    "RBs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291705310709*^9}, 3.728292566261046*^9, {
   3.728301019681707*^9, 3.7283011623844433`*^9}, {3.728301214147241*^9, 
   3.728301230792028*^9}, {3.7283012781999474`*^9, 3.728301294903751*^9}, {
   3.728301367103372*^9, 3.728301378847032*^9}, {3.728301412654935*^9, 
   3.728301412806398*^9}},ExpressionUUID->"b952249b-4331-4c2e-b5ae-\
fea0273d5e16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKKappaRBFuncs2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKKappaDensFac", "[", 
       RowBox[{"phiBar", ",", "#", ",", 
        RowBox[{"kappas", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
    "RBs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291705310709*^9}, 3.728292566261046*^9, {
   3.728301019681707*^9, 3.7283011623844433`*^9}, {3.728301214147241*^9, 
   3.728301230792028*^9}, {3.7283012781999474`*^9, 3.728301294903751*^9}, {
   3.728301367103372*^9, 
   3.728301417030385*^9}},ExpressionUUID->"5e1c3b2e-6d56-4554-9843-\
8adbc55af49b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{"plotLKMwellRBFuncs", ",", 
   RowBox[{"{", 
    RowBox[{"phiBar", ",", "1", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`\>\"", ",", "#"}], 
           "]"}], ",", "20"}], "]"}], ")"}], "&"}], "/@", "RBs"}], ")"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) (= \[CapitalDelta]\
\[CapitalPhi]/T)\>\"", ",", "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)\>\"", 
      ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Liemohn and Khazanov Maxwellian density factor\>\"", ",", "24"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282902912438383`*^9, 3.728290330184914*^9}, {
  3.728290374260867*^9, 3.728290411438712*^9}, {3.728290526276231*^9, 
  3.728290526892087*^9}, {3.72829056940798*^9, 3.728290696856254*^9}, {
  3.72829073067703*^9, 3.7282908804074574`*^9}, {3.728290956417171*^9, 
  3.728290956800665*^9}, {3.728290988445094*^9, 3.728291000510913*^9}, {
  3.72829103766509*^9, 3.728291107010591*^9}, {3.728291709172166*^9, 
  3.728291709512364*^9}, {3.7283027480516768`*^9, 3.728302748285181*^9}, {
  3.728303402423231*^9, 
  3.728303406646516*^9}},ExpressionUUID->"0694999d-bca3-46a3-845d-\
c8242cad142d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk0Vfv7B3Akw0nm4Zy9D52zt6HCTRJuxX5rEDIUTSJRQircFBVXGcpY
SKJ+lAbJUDJdKgnRoOE2INLgyiwSklL89vePvfZ6rfVZe3/W83me5/MIt/s7
7hQTERH5zD7/e1/NOJcUvCTW/Id5iKhmRy8z33jnDW9Nb6ZBssVduaeX+aYc
9OdizWDGYslLPcnPvcyWqKkpUjOa2ZAYJjv2rZeZXVnrIaeZxozZ8pUHpPuY
7jeaStKaOczjQAlxB8M+5nVX08BMzXKmw2rR9m9RfczjPX9sFtd8yFD/em8b
W9jPPCl02TVPvYVZ3nGo5PDzAaY1IM+0tu8/BsZkwmD4INPx1w6H6JweZu/+
9vxS9y/MjZEMp4//DTKpAztF+14PMx+808/3tnxlPA00uI/FRxjLMxRHd3qM
WRI/lLMpaJS5NcFhbqlOMDlrZ9z/W+YbYxub5aX84yejKNf4+HTROFPjPC5+
izfF6PbPqt5eMMHML/hlkxohAquqx53FFT+Zw6v0J0aHRSEq1CRLhn4xd6bu
ugeHzYD+p8n8lynTjIxD9nKPr+JY0CZKVmqJwv7e54/+kRIY9OTEbagTQ6r1
Jw9NWSlM65OrLaLE8dnXYCsTJg3f0fThOXYSMCp4r3Rk9izcTDX4recrhYSo
/1ZoRcjAnBPT4pfEQVPoqgXDKrKotdi3NYU7G3Ti5mn3S3JI+nreNf2JHCz4
Hpr8OHk8LmvwMLZQQK/IA+1zjgoovqtXfrhJEWoLm3c+ma2Iu0fEWgN8lGE9
ZJbmUK+Igh0GZgxHFYF3Nmh7JSihKURM6li3GrQauSMLLJURYXU9t72Uhxe/
4skEORUs3qlQsb6cxN/FG02WNqnAM7acLyhTR3HJ08TME6oYN3pj6xM3B+11
I6tObVCDmO/R318qBDgjrDNdIs9F0KYPizhxQpjVb9ZUVeJCbdnlpbInhOj0
GZQbUeEipfB1pnySEIY3VXtySS4evR/1lj8jxDPzXak8HS4u1W95MXlRCHFX
2ZEJMy5s/vF7c+SWEPvObM4v382F+OaREt0eIXhLBs+k+HERnzPDebxPiOr3
4RH+f3Fx57oL595nIWS18p11grlQVmiJthkRIrfkt2RaBBevZdNzrH8L0f7i
kmfQWS62/xhZ0a1IwWHWoPrih1ws0j2pEL2MgrH/hKNDAxftLX52qxgK/Ncz
YnY948Ltwsp3Issp9J8jRjJfc7HePaTLfzWF4/OtHki0cyGcn2al70ih0vqy
X8sEF3mR/26nvCnMjXG+FzKfh2YrL5sPJynIffYcS9XnIaHU3APJFMYdAubd
NODB0WXa7UIKhftq0Smdxjycfpgsuj6dgltOqbfdCh76cx0j0y5SOP1ATn6O
Kw+tGoohUSUURGY+cK89wcMH4orFh0YKKqp123OSePCtsO4tbaYwX6fWMyGF
h1dp2/6OaaGw3rrKZ+NZHuzTqr2131HIOfFPQP8VHv5wyf6y7BMFe9Wco4qV
PDjN8Nv2apjCDp3siO9VPEwmh2YFjVA4aHo56l0ND1ENxZfVxihc2nIh5upD
HvoKTnU5fKfw7Xxa0pLXPKhd1eKc/U0hQycma3s/DyXLKwPipWkUmR6/tHqQ
B0GxQvxPDo0H1lFX9IZ5uFXwcKmXDI3h3UevjX/jITUydMMiORorbh68GSdK
IF3KVuOKMo1+013VxVwCEf2n895r0Ji29q5NIwksHPbpURbQUHbZWReqQWCN
2tVEKyEN8789HllqEtC0rFXLpmmcqnF+8XYBgZgnyZWGc2n8aWPTLraawIEx
7dnnDWicJO/patsQkNPPflO4kEbH50XB1nYEKnekLL1rSCMhUV02yYnAz8yC
2gYjGu2Nw0vV3QkUXr6/76YpjcVXd0ZjB4Ger1eun/+TRlzw21c7vAgUB0n5
xCyhsYio25W3h0CGR5y9/TIax7elpZkcIuD10C/2MkOjzUDm05ZQAhvzLL33
goaBWPgfYUfY/eta5xta0Gi94ltfd4zd7yNH58LlNPT6zUbXnSLwn0vReMAq
GuF3is0PpBJ42y9eqGJJozlBJy49nYA/2VhaxvrIAgXhx/MEWqXqMnpW03i1
v9N+Tz4B48lrsYo2NHQsnc8l3iCwiYlyTmYdqva8q7iIgHJVj9usNTS0bpeH
/ignMDcjdmqY9eF4vUf8OwRu2H495WpL47nrRSVUEeANLVp3n/XB6bi843UE
dPJqmAg7Gs9eTH/LfUgg2Wid71vW1KX9Fs8aCIRdXlmib08jKLAvYfgZgcSJ
B2qhrJ+sdGtReklg5xOJ1HrWAtXXtEkju38n47kcBxr7e1b7b3lDgNgf/9ya
9eOKytt/vyXwspY5FsVaI26hxMX3BAJSk6xvsw50ubqurp2AI+ced4D1Iz0y
s+cTAQUl+WHVtTT4U4m9nB4C9WFPn5qx/utfcaM/+gnYi1sUbGP9IOvQkXWD
BKpsq+JDWRP7hhr2D7P5+Tvd5zRr/xU7VNNHCZjen4cc1nXKLR53xgmsdnkm
V8aa1217/cMPNj4XOhvvsvYrr5kQ/U1A/WRjQg3r2hjjlVoiJDZsllhczVpt
S36i1QwSb316Gm6x3qMraNstQWJtQN+aG6yrf53WTpQmccA/oiyTtcpz6X3F
MiQu1+jNjGHteyHsbpMcCQ8db9O9rAfVu5vuK5KYKX/olAPrgAy7oSIVEp1U
WKA+61GiTCKLS2Jda1CrBOugs/w5J0kS5rR3bRsbrx9qUSahGiSe+G3UK2Ad
embAwVdI4t9CB5WDrMNTbh+11CHxLD/TVYy1uCJ11mg+Cc8FRHk1e37Hk2KL
KH0SH62GYw6zTjixuWPKkITVT0F8O5sPcjLVPz8vJnGyoro8gfWpOB2lNlMS
N31WrjdinR49vqLcnIS7V37TATa/SAk312wLEg56I//IsT4fVb8/ZSUJjc5P
Itlsfl4JP53tb0PCsvvWw5r/5bfIr7tb7UjMGxZYWLPOC9vRvGYtCb/Dpvyn
1jQKQwwl525k43U9b/i+FQ3Dn2fnqDqTqHe81m3KuvSgqKm4KwnH8AyTXLZ+
bh944dPuQcK1s+1TCFtfD/z9GtL3kuDvbzDtW0Gz93FTx/EAEnfNAltNWT/d
Yza5P5A9n3rvR5Fs/b7aJaO37hCJtvcG8bPY+n6/I++E9DESJTztkA4zGu4d
Cle/R5MQM/3qKcO6w/1QVVccCacNQckL2f7Ru9XqS00SCe0Dy67vZfvL2Kbu
tYczSGT7ZjUUGNMIbrbb5XOBRJzvjOybi2n8XF8WvvESiWJheXkh279EHKOK
Da+REN9tEn6B7W8ytpTyQAmJkOSqyFV/0GwHcnvj8oSEf/CRtXmaNN7yE5cu
fU6CuZJwzZvtp0k/7l0gXrLxcpvaJKBoTBULfVqbSWSmF9+KnMOu1+qa2NjB
5mvwwF+KBHues/YQjj9IvNh1U9FBlo1Pb0bYwl8kLk2eO17D9n+R+mcd8tMk
7Oh6ywWz2PoIW5D/rzgfk7/rc39J0rD5OrLUTp4PfbF5g26iNETfHNpqpcNH
/MUBeYtRChUleTU68/nIdP+t4vOVgl9Sm5akPh+cykiPuC8U3lmbDdUb8nE/
FU+qB9j1lSJHVpjzUes73TXG3n8Bl6KzzDfwsezi9wWHX1P4uDf1k1EkH1P+
e2R+3qDQzDFLdjzOh3yNfd/6AgpPczrNA2L5cFpjZJ6XS+H2f4vO5SfyETSh
5rTyCoUzG16tpTL40LbJgvFZCrZmclVyZXxsSdo6QzGCXS8Tm97fzUdrmuWL
IgcKRbkGllL9fNg2rWnaakvhmmXLqNYg+/9ip1BxawqpR3UcPEb5GAynKyzY
eSRgrH5myzQf2Sv7NUKNKOi8Ewus56qjtFU3bkSNnRfyQ+2ybNTx7oR+x/hb
IW59U30UY6cOJbXMe8wbIT4wRcv/WquOM7MUjKNeCzG3sctk+UZ1RHuvnph+
IkTlL3uq00Md2YEu5P1KIT7ZCb/rHFLHdmMTHM5k57nh+qzCHHVMHRu8Ue0i
xEsjubEqcQ1sWmNesfupAMaMoKJLUgPOgrcH7R8KcM56YajMLA3sK/yoqF8r
gKebk/gWBQ10aQb0vS8XYCI6Tfmbugb0jp6vkr0sgEbbnMW6JhoI3uOrWnxQ
gD3hBkFpuzQQH7zm+jyhABLP1034P9dAqp6tV9ILDZiPDQwFnp4DqaXJXv/3
gMR0MTc5VVuA03o+lXfec9EWmOJ8O06AKDvO7RPNKgh5u6PatFeAj2YbmRhL
JWRIume1rxAikdse06isgNvLjArX5Qix7Z/N293myCJDzc2VL06B/OTZN/6V
A2JJbdHtmRRMLm3q6u7k4KyrtqSzJAUNX/fvH99wcObiUFEqh50zc5sWD97l
IFH3iKScAoVdV29KBMZxEMFkFYtqUNjyeWg7rcWBt3eHVI8Jm3fH7ks2ukuj
O9bS7difFHaeG5FsXC8Nz4K8EnopBSY3a6jNShruX/e5uZtTKFgzuWbGQmls
CZlR2rqSwvngyLWFotKwTdTc9nQdhTzTlpH9V6TQUBRT6utEsfcarL6kS8G6
8bO09Ab2+w2zJwNOSMGSV1a6ajOFmlNym+OCpMBcXsW558bOod9qZZStpVBV
n7ttqzsFyT5530dmUljWO7ts0oOCfu7WzkhDKZjqN28z3Ulh5Zs0eXm+FP5x
WFLW7MXOvS9Hi9vlpbB433nOAR8Kk0W6ThUzpVB6WsxdyZdCsV5K35mfkjAs
9yor2s3aKdYv9Isk/h+kvCgc
          "]]}, 
        Annotation[#, "Charting`Private`Tag$167954#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$167954#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk0Vev/B3AZztl0cPY5iJLhOLlK5BZJ1PPGRUoKcdNgKGSoNJNESchY
iSbTLaFyzZKEoqKU6ohUInwThZBumvjt3x977fVa67Oe9az9mbbmlkBHb3Ex
MbFB5vn/d07ahZNBS08sl95z547Jg34yb7F3wTbhNlKwQ6ZrelM/+apwwMRI
GESMDhvbvnvaTzZETk7OEkaTEttkyZOv+ons7TpPeeFZQrfU608f6id9L4V8
aWEuaRKTlN2tMEBa3rd+khJWkJHzq1+KeQ+Qh9v110sKG0iWVJSxh+xH0lS4
0W/u7HZSpuRybl/6J/Jq17UldQPdZFHBttAj5kOkZ/fWNdG5H4h/ta72Mc5n
UjCW5tTVPUTWKV0/nHtxhHRuO5fR3z5KDvQ05vOrRol1qkBGd2qcZN4ZsL3I
/0IqJ2RIpdIEqTmc+lTixDixO5Hlo/D9B8nVdor+KvUfuev6n2SlyiS5Xj89
PKjhG5mX/2tlSoQYKoqvLNyV8J2EWOlNfBmZhjtR+0Mn/H6Sqslqj6AwCfzM
nYqxPfmbcNZcsfAclYRN9sngwn+niH3tYFfgMRYSkwJux1LTkGLb6ymUo1A9
vrP4ppk4Bv0NNpMwaezTWRs/zU0Chvlv+eGy0+EdnLJV9bQk4iO7LedEcKBw
MizG/bIUdigkBe6L4aC76J2RKFcK9tlmF+sTOUj5+FTJMl8K3HtnxzwvclDb
LfJSL5dCioT9PxllHIQG2zfdfSCFjIhbkzM+cDD8FSeuDUih6EhypYydLNo7
siNH9VhoDbVaMKIoh4qQ5IZDhSyoPTw+pqkqh5YWTbNVpSz4Kj4odxLIYVFL
jYRyBQs//rU2q9CXg2yCQ+jVGia+y8Y2zEYOqfYll68/YeLNV27lHJRD5c0U
u7mfWPglteasToccZu2XuD2kxYaVY9KGDT1yUGoZbXT/g43EjKez4/uZ+BmW
uc3z2NA0Xpv9eVwOjk5BDZf+ZMPa16H4hqw8bj+u0RQSNk4+cmr6i8jDKCcl
NdqVDa2k9VMel+Rh/s1NriyOjUajsE06efLo8HAPjkxkY2fH5crP/8qj5ZFz
nsMpNm7O/bw3rFIeKSus7XpS2bC/d7z/4jN5XMljWXb8w0bI95LnbZPy6J+n
1b2ggo2BYpZjjh4XCqKKoGVdbJgdPy8Wa8BF2KnK7sxu5v7r5xfuWMTFz13q
lyZ72TCccuAYmXBRoayqXNzPRrhd+oP6v7hgP/59YGCUDcUPi0y7N3Kh3CY9
li1BwVzVU6gay4XpFuuD+kIKLwr9VZcncPHxzfeyZdoUfCz3KXic5KJZ3V59
hQ6FeP9oyexULvLLV+y0n0+h7ea//9O9zEWJxPMQDUMK/s4/sk1vc9HzMiS0
zYLCr36J9M21XETuqktJ/YtCUqhsSngdFw/NJs46WFMou6xxvL6RiyO3vljd
tKUwNWrtvaqVOe/60FObtRTOJCbP2TjMRcG1ia6ATRS0BemzD49yYXF1NKp9
M4XK8hzFzHEu6gbqRMSdQmdHpVTvD+Z+fgYrJj0pzNV9996fTTN5P2G0dBuF
2zUDb+NlaHzqiUo85EvB3vFLa4EsjfsjagEVfhT2HWQ9GOPTWDZSkKG2nUJN
w/ycEA0ay1vbQq/torB24+KMNC3GvWpHandT6B0mqTXaNDZ99u1r3kOBUnKK
Etej8TxzsKljHwUnr4M+sSY0ZGtqYsuCKfR9i3DLN6MR0y+3OO0gheC4eJdm
QkNXM1IYFkIhoyTTmmdNY26/bpVBKIV+sQfaFxxpnLN32LI2nMJV87pPUc40
1m0/nvabsX9ETdHe9TSeXd9ddeUIhU8SFUtXu9GAH+ti31EK+X+VTpl40rjT
G+4cHkFh+/HCe9peNFbGOvXzjlEYZuXZi/nTGNFoip0XSaHQJps/tJ1Gj+vf
ZwoY74rJan8VSKPaU85f7ziFUenzW0r305CoHN4xK4pCycqUP7KCabwrUU6N
Zbwn7tRg/CEas3p2ho0zHufEHvA5ypw3VX/sZjSF8tVRpk6RNLT4by/wYigc
SGSGXTSN9hsuPtsYL34adn9+LI2Apda9Nxh/kz8Uq5JA4+GKe3LTTlC4uTZo
DeskjcTRwfdWjINP7VX4cppGS3GX93HGJqLAV10pNMwP18bVMv7B257x+BwN
6YaSdeOMq5x8t1ZepNEV21utFUsh9IyXTk4GjYUu4fdWMzZr9Rg6/Q8NcYcK
7z2MfytuLgnPprHA5k7GKcY1Lq5B23Np7CoWbb/OOOyss5nrNRqRNfOe1DIm
7Q7TrP+lsWETVd3MWEzF/sHCIhqG5oUm7Yzvuq6MUy+l8XbcBx2MIy5Yr+Xc
oNH5KqT5NWOLNxaK32/SKF68tLuFsYQqef2+ioYUmdjfwPjeJtNMUQ0NzmxO
bDnjyHRjr9q7NLJ+PJuZwdiqc9Hc/Hs0KmRy5hxlzFI3GD7XQCPh9HCuG+MG
9/mlxx8x+flCZy5mHJOlE7znCQ27kkOUNOMV3cJl7s9ohEVe7G5lvpe0QFPc
roVGpfP7P9IZP9oyu2FJG/M9nJ63uzGOvawSP+cVjQvjb0ZnMubM4SlNddKw
LVznGMHk74m33JtP3TT2H31+Ro9xYo5MVvv/aJiFxhq1MPUgryMxr+QjU68u
U9GyjJ/5Tg1nDNFwvD1keImpn5NXf5bGjdDIDzi8+E/GPN3xZd7/Mf1hr6y/
nKlHUcCIuON3Gp+lDqnfZuo1OX+wYfkvGvZa+psMGSvov3dQFuehutW3gM/U
+4w/27ybZHlwOXogKIHpF86ziweucnlY98WC3c30k1igZ3Q0n4eOnfoyCxh/
zB/Ms1Th4ZCWp+etw0z+dSQGq4Q8eCksVktk+rW0ofHX+T942Nv6Wr6c6ec8
n0TZ4Hk8DIcoe7cx/X4qW2WBoQEPs3UnFlJBFLw0DPbkm/LQkJw6V2cvBdfa
rxGxy3kI2a8nJWDmh71bVbKvOQ/6GxQWKzHzxTjNulxow4N3mfypoZ0UZJQ3
T6Q58nCFe+b33/4UiuRjwxL8eLhtYOcw04PClYI1SQHbeTDuM6u76UbhwmrF
LNtAHiw8BwIdmHl5LC7rrtR+HjCgELp7AwUXdoVk2BHmPJn1i7avY+b1ZG/s
zrM8TO9Ul1tlw/R7+tWLdhd40Eq4WR5vxcwvs8D8eek8iBkvj260pPA05MeT
vks8BL5clK0PCpf+49LuBTxMhArzy5ZQsB1ednbNfR4GJ03Mcpn9EbY6ZDSg
kQc3OXXxzcx+Kcm/sSqmiYdymY7X05n9oxqwQOzucx5Cu+Xq1qkz8+mDht/C
Th5ePrrvnKzI7INuCVPFbzy8R8GcejEKjUDKnz94WGn0pF16ko3fmaGfV//m
oVD381nbn2z4uH29HCXBx26rXpOyr2yYvOnjTMjzMbx7E2fxRzY6XzzsfK3D
x08LXc7gczZ4hiyTb7p8VCUcja1vZsMm2SKZv4CPw7sXKJ9pYqPIocrGzoiP
f6zfbNW4z8ax5vyianM++rzamt8z+1qnMSkiawMfUQ5p14RpbOytctb2iecj
2M3taIg7G20NkatXJ/Fht+zQg1sb2VjyonSf4Wk+FDtFgq9/szE5SNeLn+Nj
ZMv1P9avZSNWrdk98zIfTiLbUy/BRtZR6/Ptt/g4ZbIitFqDjcc2xpxVA3yM
uo85GnawsGCdz6KFg3xM++RkX/WShdMeKRtUPvPhLqaXY9bCwt8Hv+R9GOfD
yG7jAf1HLPRcK7SKFFMAa7NdfzPzfzUhqxNePUMB8Z17CqROszDnhfLYAmsF
zF3/86SnBQuNWTVbnG0VkHq5fn2TGQv+O7xaQuwUcMP14KS+MQtFrKKy+44K
WCh8+K1Xl4WlJjZBG90VICyO/1NKkYW1Gft/RQUrwKiW7zu3TwohviJW5zUF
ZAeOXNOIlMKzX3Gz4uUVMRoz/aNBkSQOl7gYm7Yqwneob51nlzhKSh8npSco
4XqJ8/5KzjS8uzdmddp5Bsbmz1vmozVJUjXvLVnKVcbg2zz1jrwfZM30odlG
Dco4WNSxr+z8NyIm9cCjLkEF60JqjLdVjxOTlSvfidvMhFpmiKxS6Bjxzwyr
bpWfBXFVdmBMwAjRgtvLjU2zYB4nXPY1boh07UjpNTymCks7pY82tz6SM9dD
V2etnA3/ci0VNel+8txQfrxGUg3vbk84BjW/J6xmh4nAZjXMV8tb9Sinlywf
/zS894w6zNIMFJfVd5OpEuVTKdoaGJvT0++i94682ZvseitWAwJOcKOy+Vty
6PXWO0v6NfDK8qC/X/Zrksb2yHpnqYkN4wGHTB3ayS0zw0KHXE2s7x9pnE61
kbQZbptUJQUofrTHSlHlBZm5tK74lpQAg/OV/d5wX5Dzm7TZrmwBbHZyxK5Q
L0jqP8PFKTIC0KX5Ry0mWkiSbjhbnhbArzEmL+dlC4kgWSXT1AQYarXS451t
Idu29VAfjAX4XTtyNEC5hfSdsHY7biJAhK3Z7HRuC/HKv1aqZSpAtO+tn8+p
FuIxusfNY7kAJ/zCQ62+i8iGQxJlr/4SwJZV4OX0WkTskoTujx0EOGegmSid
LiKPimPK/J0EKI/rLdyZIiK2LwalpZ2Z+Lgvv9sSRMRapbzMar0APNXNKsVh
IkIuW8nUugmgmqilHechIjX3r7pv9hBAeWrmMWlXETHrly3/6SmAyxzDaXEO
IrJEr819ibcAx5ZbbjxrISI31iwtb/MR4H9PDhgKTEXEaE+GzH5fAUztbOYW
LRKRsjPiHnx/Ae6sdF5iPl9EFlb4lBcHCDCLb+HRKhSR/wPHgzfb
          "]]}, 
        Annotation[#, "Charting`Private`Tag$167954#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1ns0FfsXAHDlcM6c45VnOIXjoBIiIa+9JZSk0iVKoVBJN4l0e6g86qpb
qFAIIUUPjzhCDwlFFIWuq5AeKHmHMyN+8/tj1qzPWjPr+509e+/v1th5wMVv
roiIiJC+/n/PSU2OCzOPsX5/9N5k4PE+WGLid383fzdcytjRPHSqD37JH165
gh8GXdUnM0Oi+2Br1MyMKv8s7LRi6kVd7APJR1U+0vwkkDz1drg8ow++vefL
EfxbsFG1Of1sTR+8+9r6Q4xfCvet9EczZPqhLlDfncF/ARK/35r/vNsPr/K3
7V284F+YWB9vmcX9Ae1BeWZV/Z9gV03zUOfVAeg5uGvD2Vu94K/tcknLcBDu
j6Zu7vr0E5pzfn4bI4ahc/fVtL5/R4DhjH6Hfg+DfSKPrTs7DipWGv5NSqNQ
NsWGMsUpMDV3UTWxGgOnmAx/eSEJS1uChd0e4/DMY4JRpjwDtr9CRrkJv2DJ
3WnHhAgRTHn4Xv55+QQctdObGhueg/ohlo3NzZNQMfPYOyxcFLnyF/pX/ZiC
6RQ7lm2UKL5sMy7TGJoC65WN+VLnRNHr7MWzM6NTUHnow8zNBFG05WrJFZFT
UNtHprbcFcXWndwYEbYQmt6atht2iOKFwjMMs0VC+JJTuGnAlIEDTc+ihDuF
oLV6pbDUioFlu/bmxPsLwf9TZUakLQMrDBhbdQKE0K/aNKSygYFZY/P2rjso
hMG4wQtr/Rk4YmJYHXpSCFNHdetzrjAwROqD28YUIUhsuLnKZ4SBrMwDfaLN
QmgMVDmRO8nAHcPbAy60COHiudjSkd8MfFPkdE7uXyHI1P61NIIthkL7E/EK
XUKQt3JWzNIUQ8cQGfPhASFwdSf7v7iK4Zmtbm0UkwQ95tr4PeViqKa6n7nO
goRB/pNXBZViuE52H8/LmoSCVcvFhbVi+NrOz/aADQlG4QuOxbwTw4StolGR
DiSY/BrxzRsQwzlz7xw5tpkE68/JZgMLxdFEbOdYdgAJzk8Hug5EimNAzhr9
RwkkhF0bL0yOEUfFbco1FldJyDg0HVkTK47GarIjgmQSRnUkFqmmiuO1KtZE
ejoJSXG6QbXF4nje8ruRZS4J3T4BIgu+iaOWPDfoWgUJhGXwW4cBcUzyclzW
9Jjen+LR7OBRcRxqGLCYW0lCVH3Mmpcz4njfQF/TvZqExctz4w4pMTFeR6uw
voGEYEafev0aJqqYW9fVfiAhpXNodNyZiVq/21QKOkmofjhZrebKRPW20j+v
dJOguJ+5N9SHiSuctDnOX0ioaNUuVD/KxHUZNUlRP0hg3PKzCbvDxMKcHAlq
io7v6f1ymYVMNIk08r1EkuC2LfRrQykTsWEglD9Nwm3p6BheNROJfmWB2SwJ
Tkeymxs/MPHy/vGlGmIUJKz97MOXYqFSW6nSoDQFKuFNjV/kWDi48Px55XkU
ZBQ9XnlTmYVPKrYsRVkK8lSvztPWYqGD6ptv4fIUVP50eqZjyUKPpeYfn82n
wI5nrtdnw0L48MatVpmCejeda7cdWNhTH/ypRoWC1qdzDi7ezMLOHCmugEvB
93iBum4ACxMN/6jdqk5BUG3WPz8OsLBKdnq3qQYFv8i4qTuhLDxw2XZWikeB
iO++pqWnWTgdrzknX5MCBRP1U/pXWXjdonasUJuC5ADJgcHrLJw4QX7206FA
PZ3ckp/Fwo7BwfvyiyhYwmo1WJbPwna3thc7F1OA/8V0GdayMNPSK7dSl4Ja
qbB1o6/o7/vPVm7dUgrW2fqWFjWz8MOlW1ZNtN3uWscu/8jCNN+Z2no9Cjq6
damxHhb+d+S0GupT4K2gvLu4j4WS+Vm6BbT3hY9Zrxin169iuJwyoGC4qDvv
l5CFITHf/bppH+5tVBTMslDT9bG6xTIKKNWKiMNiBNoR7ifjaJ/aeHvQhENg
Q/zV8G7a4tEJWydlCNQZ8FLVNaTgfFlEbakigSkGl1yCaMsMHjA6wiXQNlFR
o4B2Im97mhmPwKzo95HfaXO3OLKFOgRGJFWFqRlRcOO86eEyPQIvZL4UOtPW
ruT3/LWcQK/nH8X/on13fJ6z+UoClfyEKddpGy6eLSOtCdzqqCh4RFuwfUCr
YjWB/EQjlzbalpfa4485Eni/ZcP+77Sf1db+tthI4CbGIYaQtj31YO+0K4Hn
0rLl5y6noMHgRuujbQS2ZQwni9He5HvR5oQPgYIE/yuitNuuHrtntZvA59eV
Zyj6fc/GPcozgQSeP6LeOkj70xy36CfBBD65kKD4gba/ie1I+BECtScSnz6n
PRCwbDuEE/g6yr7xJu0RNY7n8SgCrVr3T4XTnmj5urXsHIGpgfyoTbSpmEqP
iTgCF5c3BS6gLQIp7suTCNx4rvN+Dx0/sfHQLUHXCVwv/9T+Bm127ka3e1kE
GrL6l3n8P/47dF2/5xIYmfrvXjZtBTnxP3QKCDRIlR4spv+fystuF18BgbtD
FMrdaaufqNh04xGByavC6n/R+bCkN2iDah2BHWR6niptg9R1zu5vCNSQSjuU
TeeT8Sbt9QmtdHyj/Q9p07au6HCU7iGwhS/OVqTz0TZIsNapj8BA7dXJkXS+
rtGKXxMzSOAxT5U/vtP57RJrby9KEdhakmGatYSCLas17HAOG1O1+7f+ouvB
U0jZnmCycUEkmYy0d+8qtJmUY2N79qBvFV1PgfP/QWMVNpoPp/ZN0fUW3OgP
B9XZqLnxzvFFtI+bcq1+LGXjirYXdcF8CuI4Z8267Nj4aSIh+wFd3wmVPqZc
J3q9b3e3FKnR9RpqaeLhwsauN5dF8xZSkN01svzdDjYuSrhgHkX3h7IHngYv
wtjI2tf7/rMSBU/2mOozwtnodE6UkadIQfUCWT2bKDZmLeHL7VWg4PXZF0sq
4tio36jc1Ez3q55tRtr5uWycMJQNXy9JQa+MpNZAPhuF+R7H/uPQ+VHTq7lY
wEbTqxUO3mw6Hwyua2RVsdG16s/VbkwKOAzWgqQONnZ8K73wQ4SO/92Pcicl
OSgZs+B42SgJiRXX726S46CNilBmbJiEyfrtdnxlDk4o1q7WHiKhvP/j4To+
B2Pq10b+Rfdv0Olsl7Pk4JcdHON3n0lwzOxMvx3AwVjxRguXdyTcLUwzOxbE
wQLf81ytZhIkn+1oXn+Yg6MRpWdHXpPQ1NU5d+w0B7UyjYSH60lwXdDlZ3WN
g9bbHPSMn5HgfbVL9+0LDmbdAaWweyRU3Uqvzm7kYFl7r2FPHgmapV7bw95x
UD+luc7+NgnfWrsucrs4qLRf/8B0Jgn75LpH/Cc4aPZFL0KZPj8PX+wupfgS
eFB8OETlNAn/RH2y1YqQQJWgSxkmziTsl489EPK3BHb3bxk660ifx9mWKc8v
SiDB7EhstidBpjpp1CdFAm/0PxhdDyQkiDrfSCuWQNn4jNHvBiSkRZTPKPVK
4IVgry8CaXoeOHW5jO0kiZG/flak1wkhXsbmq4eLJCZcYbrNVAshOGNQJtdd
EhV/rDjsWikE48q1exz8JNHWfXzTT4EQymZnFaPCJbFoyWDZ8ywhVIUHhvwu
kMS2F8lxkseF0HrczmBYQQoXphdsWaIjhIV10aMaXClclHlbskxDCHsUaks2
86TQY/XNQeQKgbxnb1mqL4V7hT/Qch79fJfD2nAHKby33vnKJ3p+22PjuEvi
Lyk8ZXfr4vcGev4T25C06IMUzo176qAQOAWase6z3pnS6Kkw7TGeNAkvV4R7
LrotjfFDqicD4yfhzw9ZZUP3pNHYNLGz69wkPFw8dCi8TBqjyzx3PTwxCc7V
0X0pTdI4TR3RMtw1CUeFRc1tM9JoEqr2wF5vEvoLxV1y9GRwuJEYXvpkAmy4
PnzuORk8Q3Bl3Vt+QZ9IrXayyzx0ryppv/RgDJQM2/xeScriYS8j65abI7B2
0CppQ40sNlqsefXadwgOVbhq+/8jh9nS6a9co3+AVsv8UQN7ebRtTqmQ8OyD
lxlPdrqulafnv46f2zf0QcB+33dHneRxTvfHV6Wr+qBAvKC4xkUef97LiIhe
3AfmKx3CtnnJo0KDffLfk72wMS10+swReZzYk8fTTeiFo3veinfmyeN86O6s
b/sGTdPnVf+RVkDNsfA/o4O/wi0d6n2mrALGrhnUVtzzFcJdAq6UKSjgxg+T
+ve3fwXd22ske1UVMLN6hdL4mq9wZrPYrM0iBVQP9bvdpvYVLPLCeyZRAa+p
NZaNvP4COVsO5u4KVsDamRzS1egLnChyM7VoVcCS+IfRpyU+Q9GDhtjrFxSx
+/MqxZP8T9BdPWp3yVUJM36VfHpf0gmJGtVm5jLzUc5gdt6dug7YwPm5YMWL
+Vh//PMbW6t2EBGr9a66oIyuTiFkQU0brHR07J7roIKiwcXq0yUtEJAe/rhV
WhVfZ1a/1yp+C5q44/22V6p4VZmd4sNohq79CZ+NI7moz7XX7CbewJU7x9dn
OC5A1SMxteHKDdBsLD3+hLEQVdT2K4mn1YH4601TB14vRL9Yf+9Q/RdgPf5j
8NAVNUy88dhlm1gNzBbNj0/QVkdn95Ker8ueQ8ehyx7l59QxyF5+Tu6uZ3Ds
v12VZn3qKGI+LHui7CmkMr0zum01ULisWCJk5hGUWxrnb7qlgZfH6kTPO5VD
qtIOTy6Dh6wSo3Fd0YegYl5VWC7Gw/tv66T+FJbCNU9tpgeTh2kD6vzioVJI
vDFYmMDm4ZAw0MzpQynE6p5kSs/j4dyPJu13Skohgp4w5yzkoY/ei/M6e0th
9+4eVq8pD6M1jDzF3gngW4z9juiVPHRv6L/5vE4AvnfzHmha8FBgmi+IrhSA
90jwDm9rHv5eyNVRuC+ArcdEi9tX8/DeniIlnxgBOMXyvRo28XAmI7/jDgqg
vvDv4oDNPOQou3XcNBXA2pYBgnDlYV2mZUyWvgDslUuK7dx5uJp/vz+XKwDI
smM/3cFDLZ/oSz1TJfCkJtdruzcPi1zPtQuHSsCyT7KE8qH3O3O7Sr63BMz0
2rzM/Hg4r25pqGtrCQg2mJe0+fNQzSLO4lhDCawITmOH7uGhDZOdlv28BIqv
zPWWC+Bh4IhKSnN5CRiV+pcU7uPh2+DVhnOLSuB/jUkyvg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$167954#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
sS7npv4epcL/ACJbP/Q=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$167954#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VW3psOelc0nBOQLpXqcmKlrQ4T8+3QAg
          "]]}, 
        Annotation[#, "Charting`Private`Tag$167954#6"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.8796613004033026`*^-7, 9.210340184010054}, {
        0.008463267881379749, 9.65772667021434}}, {{1.8796613004033026`*^-7, 
        9.210340184010054}, {0.008463267881379749, 9.65772667021434}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) (= \
\[CapitalDelta]\[CapitalPhi]/T)\"", TraditionalForm], 
        FormBox[
         StyleBox[
         "\"Liemohn and Khazanov Maxwellian density factor\"", 24, 
          StripOnInput -> False], TraditionalForm]}}, 
     FrameStyle -> (FontSize -> 20), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 
         Log[10000]}, {0., 9.65772667021434}}, {{0, 9.210340371976184}, {0., 
        9.65772667021434}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"1000\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 1000], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"300\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 300], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 100], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 30], Editable -> 
         False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 10], Editable -> 
         False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 3], Editable -> 
         False], 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.728290412491736*^9, 3.728290532583467*^9, 3.728290574318901*^9, 
   3.7282906526421623`*^9, {3.728290683205879*^9, 3.728290702608067*^9}, 
   3.72829075158284*^9, 3.7282908150898542`*^9, 3.7282908852584143`*^9, 
   3.728290927178035*^9, 3.728290962094952*^9, 3.728291009838295*^9, {
   3.72829106788405*^9, 3.728291115490032*^9}, 3.728291714285182*^9, {
   3.728302614074172*^9, 3.7283026230186977`*^9}, 3.728302671629776*^9, 
   3.728302755927021*^9},ExpressionUUID->"273cd400-4d5a-4a8f-bcf6-\
919b56937185"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxMaxwellRBVal", "[", "funcNum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plotLKMwellRBFuncs", "[", 
         RowBox[{"[", "funcNum", "]"}], "]"}], ",", 
        RowBox[{"2.1", "<", "phiBar", "<", "1000"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"phiBar", ",", "3"}], "}"}]}], "]"}], ")"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.728301983830181*^9, 3.728302008083136*^9}, {
  3.728302086432458*^9, 3.728302104211068*^9}, {3.7283021679330072`*^9, 
  3.728302191530656*^9}, {3.7283022420431557`*^9, 3.72830227345837*^9}, {
  3.728302686984429*^9, 
  3.728302719225102*^9}},ExpressionUUID->"68503a11-0109-4896-a596-\
89a6fd839d24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxkappaRBVal1", "[", "funcNum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plotLKKappaRBFuncs1", "[", 
         RowBox[{"[", "funcNum", "]"}], "]"}], ",", 
        RowBox[{"2.1", "<", "phiBar", "<", "1000"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"phiBar", ",", "3"}], "}"}]}], "]"}], ")"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.728301983830181*^9, 3.728302008083136*^9}, {
  3.728302086432458*^9, 3.728302104211068*^9}, {3.7283021679330072`*^9, 
  3.728302191530656*^9}, {3.7283022420431557`*^9, 
  3.72830227345837*^9}},ExpressionUUID->"96d8faf2-6662-4a50-a349-\
44b49846b802"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxkappaRBVal2", "[", "funcNum_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plotLKKappaRBFuncs2", "[", 
         RowBox[{"[", "funcNum", "]"}], "]"}], ",", 
        RowBox[{"10", "<", "phiBar", "<", "1000"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"phiBar", ",", "10.1"}], "}"}]}], "]"}], ")"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.728301983830181*^9, 3.728302008083136*^9}, {
  3.728302086432458*^9, 3.728302104211068*^9}, {3.7283021679330072`*^9, 
  3.728302191530656*^9}, {3.7283022420431557`*^9, 3.728302277578218*^9}, {
  3.728302354963441*^9, 3.728302361067535*^9}, {3.728302420451355*^9, 
  3.728302421662178*^9}},ExpressionUUID->"8b4610d2-8adb-44ce-b461-\
1247a62fc969"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fillTwixt", "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72830229094874*^9, 
  3.728302305883286*^9}},ExpressionUUID->"447fa9c2-1ca6-4e57-9d67-\
f85d24577296"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxMaxwellRBVal", "[", 
  RowBox[{"fillTwixt", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.728302703554109*^9, 3.728302705247912*^9}, {
  3.728302774120002*^9, 
  3.728302782616189*^9}},ExpressionUUID->"314b36c3-f092-4787-b73d-\
1b828a8b1ac2"],

Cell[BoxData["1.6999565659503943`"], "Output",
 CellChangeTimes->{
  3.728302783215682*^9},ExpressionUUID->"e37a6eb1-4ffb-4b60-8ad5-\
3159c5a01b57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"maxkappaRBVal1", "[", 
  RowBox[{"fillTwixt", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"maxkappaRBVal2", "[", 
  RowBox[{"fillTwixt", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7283025259371023`*^9, 
  3.7283025318485117`*^9}},ExpressionUUID->"6b88dd94-1e61-410d-b2aa-\
8548efb84b07"],

Cell[BoxData["1.596838736308238`"], "Output",
 CellChangeTimes->{{3.728302532874495*^9, 3.728302593458405*^9}, 
   3.728302677267111*^9},ExpressionUUID->"c09eac0d-ba49-4322-b8e9-\
8409fcdc47bc"],

Cell[BoxData["1.667326268406576`"], "Output",
 CellChangeTimes->{{3.728302532874495*^9, 3.728302593458405*^9}, 
   3.72830267754421*^9},ExpressionUUID->"9bf230c3-8e08-405f-939f-\
1470e6275b4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plotLKKappaRBFuncs1", ",", 
     RowBox[{"maxkappaRBVal1", "[", 
      RowBox[{"fillTwixt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"phiBar", ",", "1", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fillTwixt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"fillTwixt", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`\>\"", ",", "#"}], 
           "]"}], ",", "20"}], "]"}], ")"}], "&"}], "/@", "RBs"}], ")"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) (= \[CapitalDelta]\
\[CapitalPhi]/T)\>\"", ",", "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)\>\"", 
      ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<Liemohn and Khazanov \[Kappa] = `1` density factor\>\"", ",", 
          RowBox[{"kappas", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "24"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3XY23U7t+GvHi69cnUE0W+QJDxD9jjPPF0Q/unYi
GkT/6r4DpnX4dBNBdH6adCGItl4VWgqin3DydoDo8sjeiSCaZ/5MMG1m1zcV
RKdFCkwH0dkeW2eD6MNhCUtAdFLT0vcg2jN1A5hWWnZ0rTaQbgjI3QSiWRg6
t4NoEU+NvSD6qkHQKRB9ZY7raRBt4cv3DETfONz4CkRvqPf6BaKvPdsMpls2
XGPTAdKXrrqzg+iSJZ58IDpAIxxMe0+slgTRzBJf5ED0j54b80C0w8YnYPqc
r/MyEP0oyQNMAwAEPJwT
  
  "],ExpressionUUID->"a3c83672-01ed-450e-8913-770091eb7f31"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Ojc95rAEPAwP5dyL48n2rOgRLnLFRiZ60ahbWdsqAVK3Yb8Zvp/tWe9Wcl6S
G2CgG5zfCtzv4fe3WOu4Ht/P9izRUz8uZ/ky0a9bSW/kSJLw0j7w5wb8e2zP
mvg0dFdr3SCyf//SwrhAAtblUs7L4+ez/QqVLrqpZMxEkQlKDvcHJMDvj/Oq
TPx83w1jXX7vJODOitijJ/D1RifiWpWTcTxG/0zV4PixfWv/sSixOU8mYvvV
+foV13nlmWiE44hcf5UEzCgJP3TE97P9yqFI6p+sLhNxOofeFf0iAR/a1xut
wN+zPcvQnWfE/i8DdSSvvPU8UwJ0BuZUr+PxsH2LZerbtjKQidieNb9dwkhE
bhCxPcvl5ZFTHbsWPGvKJ32j6MdhwrNeVpk92lBMJzyrvd7b99mhBc/K4787
oe+44FkVotVP32YueNZDUY95+T9/CM9y8MkbUPefIDzrlHlwQJfCgme9un70
h27NFOFZenrne9Zl/yM8a33uJ76LYTOEZ3WfyILUs3OI7VmJnCrr1plwEJ7V
8v708fMHFxGeZblj9cH2U5yEZ8U2t3s9vMhFeNZWY7OQaVduwrM4SYbkDFMe
wrM+qSTr/OUmEZ7V4VGUdDGORHjWLWMFr9kfJMKzLh/8ZcgxRiI8S8yjMsW+
gER41iEVnjjdDSTCsybrAoq3neYhPEtq0tVyzJGb8Cz3i5ebGZu5CM+6f7Vg
i0HDIsKzvkseHXi9j4PwrLaMuLcuH2cR27OOjlsVpvb/Q2zPWnKgmNt+9xRi
e9YaamXu/NAEYnvWnvGT1xixfxDbsz5wyU8XpI4itmf1iLzRzfRmILZnIV9X
3sumw4jtWW9vz8to3fqN2J51M3Ln148TA4jtWWWVsWlcb/oR27Ni/4oouub1
EZ7FnSmwReNrL+FZ6+Y4mIzsbsKztO/xlazJ6yQ8a/eZroRHaz8TnnU8Zo2G
Eusj4Vm3jVYYBza2EZ6ltlh+T9bfFsKz+KVWHY6TbyY8S1g7awdFYMGzjqjK
XzN7tOBZtz+XalR+xucDwRDNHn0B+BwyM/ynjxtsE3rUW14JgsDuqkz1PB7I
C7xZIrBXGPSym/65HSDBDM+++GVfReCVyt7MuToS/M4nmT1YRYaNLst9Fo2T
IDbq5pIjdDIUkhk3FbpIwPYyVsNmX7vzJMLLasSciuw6eQgvOxpJvYbGuQkv
a802PriolYvwrf6fjj8PcLUQviVY0bZaNWvBtwSSFO8ErlnwrS12ngZD+Py8
taxzt2gfP3St/Ol8Iosbdqd138lyEYQbhZJvBC/xQOql0jnpn0JwzFFN3Xk1
CY5v2+0g5CcCr4tCFMtzSXCO9bT545wolEyszp6gk8DF/F/GlnIyxDepx/AM
koDtZ1XxffHhSSTCz7RUYYc+P4nws4vK7jp6m3kIPxuvPvfGQoGb8C5tJ/Ju
W/8Wwru6u1caTkkseNeskBv3OsVR5BPVWzytKgRnyO+2f8XxqwlwOz2bJwwH
Cqw8v/iQIKZh/1s9JAph20b8lDpIIPlzw5ZvR8gw6LlTU3CCBBWvVj44pyQG
DZW3Nm99SwKhJeJS891i4D82HDliief3P09b6vVZ7XE2D+FdQRc49E5GNRPe
ZfB1X8EK3wXv2nVHpPXvGJ3wrm5ey3ey+DwoSSEdUMvjh6AGTS63MG5Aat2f
KTqC0GazykvRhQfiuIzvpRYIASU8wVBGlgSKPTsNA3aKQNuFwQTZdBIY1179
ldwkCtzH8zMmcLw/Pn/Sr55OBuljV6vu4Plge9ps6ouBRVkkwtOOiZqjKkUS
4WlOIDVYb85DeFr4Sf/IwG3chH+dFhdem/y8hfCvO5aHxbYMMgj/Mv/EEqqd
ZiJXSu+o819BMC1zPXCgngdK5uelrgQIw/L2kg6qMwkMjpvmFwmLwi7Stn9x
H0hwce/t+pd6ZNBUv9TOi+O/XL33hwuvGDxQsEPv2khAWryWnvBKDJQyYDrX
lQRsXzP/anN6voaH8K+QEXnvgNfNhH8t2uKd1eK24F/8XKzPtOdM9DR974Wk
hyIw5u0tb1NGgv3Snl3XpMjgFaZ+7d8oCeZHDZz2tJPhqKTq9Jp+EvwTd0tt
TBAD0d3NnhwRJMK/nizhtiJt+v/+9WXlwR8tnqJA37GxOLGHBI+CGnLnvMgQ
pyhjz4/rf7+jn3OYlhhYT1TyeVaRCP9KOiEcSDNvJvxLz+hVnZvtgn9VWZpe
mWmjE/5lraKS3uHERBwo2WJDPD88St3zbps/N5T+7vJ5oyoI7cX8sWPWPECu
jR+zSxYCvglO53ui+H2eGOgUrxaBIs27f11TSPB8OcM7oEQUMrr5bRN+kSDC
JYQ74xYZoq6oyZ1lkoDta1Zn1ecO5JAIX5ugj7xWXE4ifC1789vsJU48hK81
1NsnmOznJjysT9JEP+RTC+Fh5q0X7+5qYBAeFluTl1UwyEQD7T1R8j2CcKhM
4tX+Mh7YWGV4fKeTMMQ8OB5ra00CmoZJBmNcBGJ8z6UNNZBg47yp0CYtvJ5u
eNKTgePb/bWE5/s/MkgUVm1S+EwCLnn05UeZGJz5kje24jQJ2N72cPVFpvEH
HsLDZnvPFjX9aCY8zNI85xLZeMHDRl07q/0y8f7Qa49n63UR2FDEV/GkkAR8
Daoq/wTIYHVD+VE8jldButLVl6/J8MJ/dvf2nySYFPUPo0aKgWZxcszxmyTC
wzLzL5d0qC542Kic38uoNaOocPpAh6CFKBw9whE830kC240XJzyOkUH2kIzU
I/x+fFL7gzlXiUHxuVHeedxf2B6WWF15L/dUM+Fhv+YemvoEM1H/UXnrkp+i
wHBQ75IYIYESb1vts1wykLNH/vkNkwgPEwqcl3zLveBhNVnv/UaERpFrolnF
haWikL3rivxsKwkaEn8FmpmQYRefm+AKXK+n/Uj1YxQxiORNSlrVRCJ8zLeb
suNV+IKPycvmZnx/zUSpjmXx0spkEPXW/aXwhwS7wV2/9RsZXKfPnHnfSyK8
7LqM7nqmwYKXle6gqCWajaI560NjiaGi0FDKF0LvI8Hf95IukQFk+Bn88usS
/Dy2l2mbP7n6UrOZ8DIKLcz19oEFL1OcNB0Wq6cTXlaT946v2pqJ/rb9OFwS
xg8zMK+U5s0Nkw3W+qpUQQjfKnL7wyEeMM7QSX4ZJQTCfjlGZgK4H0rWF+5X
FoGGwnNnZhNIcPJregnjiSjE9P6JN8Pz77zjtIRtDBnOxPV56+P1he1xwbsD
LjjmkwiPG47IVd+M+yvb4wZUQLzcjYfwON/TFcZqVtyEn1HefVcR+9lC+NkS
k5Mb40rxfq3YxvpsqyDw7/hwp7aQB7zu0snZFsJwjeFGoluQICr1g0LELxF4
F0TxvPAaf7ZYmeu+gQzczQEbj+D8Kil8IHlnnAwpGvoH1XD+XUoyMBEqEoOc
tU31xr4kYPsc44vOqE07D+FnJ3ncwiPGmwk/W6XZuKfmf/9953PDb4+reD89
GTVc/pQE9irzdet5yLBOcnnoewYJos8Lx12sIcPkCe7GJ3j98YnCh4EQMTAT
PVDCGU8i/IwZF2LHochEyg5tpll7RCFCrPGGzBe8HkdaJmTZkeE1n6n5dzz+
73R0q2KpGDAFZBKz8Pux/UzhzvouvsBmlCjWnLbiqyiE3rjGJ4zzf7qnqs0j
mwzb/3Xk3ML1wfazxHSO6FwWPn9xtGjIyorCXVvqdHMzCVT/1KiE78bx8aYK
03D+G5v9ac8RFoMBNOUQ0kIiPM0waz7d4DwDTb2I0zaRJ0P0E41Vsfi8oEo9
bB7difvNWDAtFOcv29cOqWxtG9NZ8LVzk7MljYajyK3uo+vmC6IQd/Zm695v
JDBZxhSq9yXDdIxH1x2c72xfUxgNuDxs0Ez4msaAwdB9dybKv540/jMF19uw
rUYcjjfb01w4z37g+8JAX+6fPTGzlQwWz7+7d+P45XjuDqwm43is+shlivOV
1JlhpuFOhjUmR73s8fdsT+uzsW6pFWIiTxDpph4kQ6j9yVfKOB5sT3N/NhN+
IJmB9AS/jXer4e/5c3Li8XjZnnas1SnR34iJUs5seXXgChleWWVZJOP4sD1t
MCbG/8GKZsLTeHI70kqMFzztrbvltnsVdMLTmGEyicWWTDS6WNDq/BV+sMx0
zfvggftP2e3HphRByNmq/qv0AA+4S0R7nL4mBHeK8/ru8+L91JurYzR5EdBf
MncKcL693hRgtSxLFJ47TjCyB/D75rrIb40kg3fVM+P7OB5sr5uZ1y75gfOZ
7XV93Et6y9aSCK9rM34yF+jJQ3idxzr5PVG23ISvjbmkCXfSWwhf26B6Tb/q
KQPVZN6pzXgnCMtC7luxnvLAdfK2H5ZmwlCR8tE49yAJ9M2iDx/uEwGVcVMF
eIXn/2oiR9haMuwQlj20Fs/PUuXbChdGyTD1XHdU9SsJqi13hy9+JgZL47X1
Dp8jAdvvqvKUyu07eAhf6178To0x3Uz4Wt712P7FGgyUHxm2dOtFEWi53HN5
K16vyCZu0vs4ybCebzPZEefTzC+u29aVZKgcMlti9ZsEhUbBW/ZfEYNKPQWz
N3g9ZPvayNdHQa9kmOizVGyUj74osC7NZSvi/ny8tP537VEybIp6b8rC4zc5
sjk1RUUMTn9GAxNvSISvUbjPCWiHNKNxl0f6Dh9FYV9qzc7LQ/j+vcVfjR6Q
QYXr0iMFvN9l+1rHNRa5epSBoguun/5FEYUXbf6SRbg/tSxeeyZzJxn4n38/
K4Xztbzid1eEgBi84DD88Bj3N7a3KbqtEg8/zUAPBjkj3Ki43rJ3HjLE+Xnj
qom1ewcZFhkd4rP5TiL8TcX8a6uk1oK/eX2PTfLSH0UqfreyuM+Kwm2m36kz
uL/NHbA+2neGDP9Ov835iOuB7W8HbuoG8Rg3E/7WqrMu9dExJlKci5mpSySD
ociyZD68v2B7G2e/9mK1FgYKaekvldEhg0ES56OXOH5Hbhc3dwnj9SnvkOlf
fP0zXvGM/S54vpyNmq/h79ne5vwxWy6Wj4kU3P3XbN6P++esvtcyHA+2t+ly
/TaNuMlAoxrGBtOqZKgOyG2wwuNle1tZ15VpB0MmMkzLkjkVhMfnk/CoD8eH
7W0aVh2Xnq1rRt/UK61NN5NhTpwqfAn/PtvbSr02HG1WYiJhu2GDCEcyfKLV
bHuDvz9bb95y0ogMOtqzN9XwePZcX/Z7w2IyeNre5+vEz2d7279AcqvEdiZK
n75Ulu1PhoFJsRFHPD62v/V5TuePfMP7Nz8Bmd5teP0RVlSbwM+3yNFYJOdJ
BobVnikN/JntcT0eAwMxZCaqodyLmLUgQ3LWW34q/n22xyV/kR5bnM4g/n2Z
310z+yiTBX+7+MvnZIpKM+FvyGl42dGiQcLfvjTyDLhJL/hbhfH2jVMlI4S/
JZ5YbQlODMLfAg7PdvtFMwl/Wzn7hZUfPUr4m7CM1JIdYWOEv00d2KS/I+0P
4W9+p7l3rng+Tvhb2FuuTfnFE4S/Bd178kmp6i/hbz2/L9pV3psk/M1huCh/
pd0U4W+l+leDO7lYiO1vyzriL4Q7sxDb39ye51y7H8FCbH9rlpAWGXdgIba/
7VnrlGM2PoXY/nYuKvdxtPoUYvubvqzijdkVk4jtb2WRS6y2tU8gtr/duLfn
1FHzccT2N6PCqJJzbWOI7W+aRU8FhZeNIra/TW1Wz6NqMRDb3+wDO8iJJsOI
7W9nNlebaVv/Rmx/Cy0yfCf5aQCx/a0ps4DMZdOP2P7WI63mFr25D7H9TeBj
oqqJWy/hb6ncU6+jjnUR/laeKC25M/oL4W9vU8un2sU7CH/TGV66n/WonfC3
3+/PUHQftxL+piUR/1q9vJnwt+mtis9UFJoIf+udXPOj/cg7wt/sn36xuxPZ
QPjb6ph/HllrXxP+Nrj7juah3jrC31ZWSqwaan1J+JvP3XtONjI1hL89Pf5u
aKljFeFvTofX+IX/eEH426tPe977mZYR/maWMDvnWP+c8LcU+7RTWqlFhL+t
gqXugycLFv49GccWj1H7IcLfRJTEmOZhdMLfFlfd0D2D93stU7H3arUWAeWC
bWMtzxSSTTvzuLCYE7L+MWuUS6ZQ/4N802EN3FcDEGmbDgut4jW8fryUB1wt
6myXX2YhL+5fSg27eOEPtfuu1SUWgi+hPevq+cBKxfokdROL8L3ilZuQUNIU
YvteTZYOh9SzScT2PYF7G2nnQv4itrc1OWw7efxiIeFtIUzf+48EF7xN8u1w
ypwSnfC2y5IB/YHvGSigZdffld0cMKPs8qy6bRI1eJu2HDjACS94H1QXRk2h
phaNz+s6uYDvZsuLChoLyatP/u4354FrDqYD6mdZqNfOhUMB70s2zT3znw5l
ocHrRUrqLnzQwN1ZV2vMIjxP7rVocs2bKcT2PJfhKyKHRycR2/N4uVNubuz8
i9i+5vSi1u2fUBHhaz6TK9xNJuiEr7m1yh4NO8hESxd/22sVtwhU4EDC3Y1T
yKUpMVhKjgs8Olbtgt4pNHVOveFBLDd4dXuq6+zH4/mepDmsiNdltb5A6zAW
4s502nb2ES84mRhnFpxhoVvK1qmayvzgqG34b1SKhfqOrF+amy0AGtx2TQZO
U4jtawLRSdyuEwWEr5m8vc9Z3ztI+FqL5sG4LSMjhK89exj7eDKegQ5UpinZ
5XHA7+y48QtlkyjNCjllKHNCROq1QFPfKVT/619K22MusBnw/rCZwkISusZS
6So8ULRGLMTdg4XiY9Q96wv+11d+Z42Es1DVyN5qNR0+uPA+rWrIkkX4XaLQ
8vS8ninE9rumsI9fp0SmENvv6mNPGCZzTSK2p337blqlbF5EeNpfE4mG2Eo6
4Wn58pyKjtpMNCO45WzMsUXwO6Rf6ZzCFNpeEkJ1/s0J8+VXHyi+m0L0GHqk
oTM3RA8ubVm3i4U2T4w6PhzmAT0do56jISxU1r40X+kcL3Br1XQ9PM9CrgF/
tm4a5wOSRbtw3FIWKnlmtebVWQFwa5l/bhg4hdiedmgzd+aUViHhaSL/nuWB
OZ3wtH7hPWcqOJnoS/lpyWh+btjcetb15BoWUqXefbH0Gg/ALvr56gsstHxD
doy3NC/I8fHxNwbjeG1WClydwAehPV5FAdtZiO1ps6ObPqxVZ/w/T+N0Ok7i
fskNyiubrh2xZiGD5h1Cq01JMLVWQIiG+81e34zmd195waUreKOvOwuxPS35
PjW2PL+A8LSzca12l94OEp6WriryM7R1hPA0zZ+KF7rxea2y8MMm/0QO2Bjn
WPQkZxKJmBatbuTnBI5U9PKj2xSq8v46dz+OC8xs1+9MF2Qhcr3fyksCPJBx
uTpdyZWFxtSElsml4H2Mh06eJx7fQ7kEsaVL+CB7ivWMYsMivE5nzV1D9cEp
xPY6kY1DwU54ftleZzZxytddehKx/Wx4Z49sjF8R4Wf2D5yuxmTQCT8L3cFf
5LSSiY5xHo94aLIIxp18F+WLTaGcJ3N9kU2ccNBYI37Lyyn0W66JIbuPG64v
+840x/FfH6DgH9rKAw0PEgpdrrKQlDvviTN2OJ6WAqsfX2Shg4+3Rm/o4gON
A17y06tYKKNndEPrUQHY1uG0fX8kXi//87O+9pNSsVaFhJ8pkLM/iG6hE35m
9OvcPeZvBmrfefCs7RgXHBC2HsxfxkJKaW9beTx44IBokmzKORa60hC66/Uc
PicvrosPv4bj5ejatDKID9Su38iow/nN9rOuWV8uEplB+Fn0vDjvU0cmmmUY
Hm9/xA3VXHJBJyxYaPthD2VhTRKEyB0adMb1myV6NVS5lhcuFn4xrjyF8+k/
P8sL/ybh21pA+NnwtEPnqmcMJFOgzFGrwwPra0UunvJmIR3W7uen3uFzoc4S
YXn8PLafNYxQZYS/0Ak/E7rId9RzFxNpu9Ubv+UhgadzowkPXq9ttxqw3t7g
BVUrZw8LPxZie1l0Vtvy6x50wsv2xx14ewPvR5fFnM7ceY8HajOenkoOZKH3
ya87FNfygoN0tX/5Fdzf/vMyQ83WmM2GDMLL5BfVfVsexES7d8n8NXbB5z5l
gRPhOB/ZPmYfH75EM6aA8DGucrLlcNUg4WMfX6wQflE/QviYpo51k5UHA42v
dQa+KA54WDSop501ifTenqLYzi6CZF+RBN5jU2ir1rtckTAuOHfx7/c6XhaK
CosuHp3lhmtR9iI9x/H7es9crosmAVfPu85YPJ67T19o3afyQURIW0uEHYvw
N9YH/uOGjCnE9jfVWsexS6pTiO1vT76ZfdKlTSK2h/GXOUBXeBHhYfX6Mr/1
4uko5cLcLQ39RUCaDkeVgni/oFb6ilbLCf42zI5NFVPI+VvV3cs7uOHUOq+b
ZoiF8rZvILHqeeCtQXLmfhzf2ueTtYvNeeHK458BIkEstGeHY/HTZj4QmK3U
vbmOhZLO6Gy2NBOAcxt2fy65OYXYHtZ4wXjxpHsh4WEGAcsR12o6MhPeuezN
ABfIOncvRktYKNX529Ez9jzwJKzDZMQX16PUuQwvfM7pCH/sZ4TzZeJfzNSj
M3wQ2x+4+v0eFmJ7WMdH6+jL3Ax0rlCbuvUuN5C51TS+mOP+pHj1yXl1fA5L
TZYaxv324JEzPxqLeeEt5dDaWpy/bA9T/SOc6NJfgG75aoZvWMsDgj7fH/ri
ehjU2yIhX02C1tCXz6JwfrM9zBvEt6c10tHztV8/a7N4oNGq4tMWXJ8iYZvN
fYJ54ZfhmveC/ng9/M+/Fq/On3a0p6MHB8LWF8fyAKs4ka6B15PzP59vfKPC
C54qO3a+x+sN27/+Bl53PafJIPwr3FxzlHSOiV4LrQ6qsCbBUUqdti3OF7Z3
ISuTwD93Cwjv2vwgQfBbKAPpfZVr9Mwiwd7Ob1Oa+Hq2d0Vc2TrxPZ+OCkp4
mdReHpjfVOl7EvejjwGJwwqCuJ6apN8W4n5ZG2cZf1sP328nNvwOv3/Uk8NW
rz6T4CevQHYcjifbv1r0659d/ElH5Zl5L4+I4/2BiqdWGZ4vtn8Zcqhp1p2n
I7Z3cXIUXl9xgIEaL3O69vjgc2zLQEgaHh/bu7a4GfuGXSwgvOs17yKDjLJB
wrvK7XzuWlaNEN6VGZlRlHqcgaJP5tcZX+MArXWaVbMZk8jm2geeFZOLYFdb
VpKc4xSaSdbn23GFC57t0d/fwsNC79xkL2RPcsNRD8qV4mMsdDZxPD8plATN
6+HeHTwe2YCmd/0UnG+tJY9r7FmEpwlPPXnQNDqF2J726c0TZ8FlU4jtaS9/
K79dvHQSsX0r2qLKhz+uiPCtaw17BdNi6EijzFA+AC2C9Hudsi/5ptB8v3Tp
0AtOiHxtPPmkbAot0dNiFevi8e19cP2tLgvRVSve5lXxQOSS5YNVeD+f3M0Y
GzfmhVXUjZLPcT3Wi5zdM/aWD26Ja8VabMDnzyo7Dfm9AiBduPnmj1tTiO1b
+g76s098CgnfEu6VYV5UoyMxz8rA2V4uKBaPvRuowkJdu9xUV1nxgJWBB10E
1yO/jlfLzmESaAhPTzzA8+tZnx4x5MEH40+8nu8xwv3pP98Sz2tUK52mIy2Z
Z6e8krhh+S9nvsgDLDTPQfbeuIQEah+nt2fi/FkV5E5Jy+eF9xmVUxWnWYjt
Wwr2q8R+Dxeg9sMvTYaW88DLv+l2ZzxxPbts2D5aSoK34TXpVTgf2b7Vkr23
hlFHR5Pix+6MjfFA/Q6bhg84f/tzV1/eE8gLrhHHerpwPbI9a5X0nc/NR+jo
x2bJqZNRPKB7y0n8YgALr0f59qkKvODjX5G1D9cD27MCahxMONYzCM9yLpA+
EujDRLyM5wY+h0jwx/+K8g6cL2y/2rTRyuxgdgHhVz65B31/X2QgOU6Jf/pp
JDi46pPBIXw9268YXyR3aD2ioz/JNwqbP/NAmWnGIgZeD55kXJf9w80LJsVe
a1Tw+sLl229lvpUEMbOnBlLw+zu1moWltJJg6+sr+ztxPNmeJdNgb+3RS0fT
oVtCKUIkMA/Wem6P54vtWec3LNu0woeO2H6lqnsxwNSIgQSdI9fGe5LActzU
PxGPj+1XU2f+JPaEFKA3RtwHmXEkSLLI2XwVf8/2K+fTJjTgZ6AgnX8/a9eR
4HVPKUsdj4+yeMeAwSsSlFs5fTqEP7O9KtgxY7vENgYKXZFeRnIkwR2ln2a+
+Hkni1RSk3NIcJq3tlYSf2b7lUq8d3LMczq6+ux984/dJHC2QCwWfh7bqyL3
dmb9GKET//+jpqjHevvLdMKn5Cwe3DW2ZKDIe2fvq10gQYv9RMQD/HzCq/xX
V2qeLSC8Snz++em15N+EV2l3vNs+9u834VVmeV00yelBwqvuadb/Nh0YIrwK
AvU7O8uGCa+ik5V5VoePEF5VjQ5Mxy2jE14Vn1nnq5tKJ7xKode9rOk9nfCq
1Ta/Tf8W0gmvIgUJkVwN6IRX7UowO5yLn8/2Kn277A/CocOEV1kOa1KeqwwR
XhWmWXrtTtJvwqtSflzeEVP9k/Cqz8CQk/z4g/CqoqU/UTBPP+FVOo4xgtIy
fYRXMYMzJQvsegmvYv7qC7hs0kV4lU9gcGHdli+EV1WnCKzam/GJ8KoV3zi/
htLaCa/a/Gzm9QGhVsKrLG50t5hoNxNeZesxLr9r7D3hVZPeK3TH+BoJr9qp
5OPiqPWG8CpK/lTHw9p6wqtcW+p3lhfVEl41aB6vt7KohvAqgY7tXyN4qwmv
cjTmZO0UryS8KuS6S95tlXLCqwydnFBJdgnhVbsUtnUf3VJMeNW1PpONYysL
Ca8KnQ5bL3LoGeFVP74+/iF1LZ/wqp74jUV287mEVylrsSiS048Jr6q1srnr
tPch4VVL3yyyy+fJIrzKaNkrX/FX9wmvOti4qsatJ53wKkpL0MmpFWmEVzk8
u5LS7n+X8KoVbl7vLsulEl61PO2yzbJNyYRXnbwus4f76m/Cq3ba7XTbdGqI
8CqbQWj1MRtGu9YHmj6rHUTrih1+5auNoCTPDarD+FySp/waprtHkPhF6zZ+
tz8o1i9ebbkrHQW+uqU6FvYXCciGv76Nz/+c1e14Z8BCD47zR9u9paPgU28L
nUNnkB7LUCw0lI4EPp99dyp6HtF+ao/x/BkhfOxmhnX0CcoI4WOTP2/03usZ
IrxqUVkj11BqCuFVZ7RebnTf/ZvwKk2/6Q+Gm4cIr5qNy13FKT+MJFtOmShs
/o1WmFFPFI8No9Hfi953mjPQoazbvTuKRpDvn3NafmljyFu/59rTPXT0Pccq
XqRuArUP55vI4f1WtxWTz+TDFHos2+K0+wMdnZjdFKVbPY1qvBKPRabRkTNV
40Rc2xzK//eBrrWYTviYXh1J5KvpCOFjnHW7hl9uHia8SvXLd9q7w7cJr/qm
Gdtu8WiI8Kr2hDSZxpBhpDPsZDeoOIqOppeKLuWho8cC4JG0aRz9y45trAym
I/nepvx2E3yOeX9lR+wbOlJbUpZyAf6hvZ3rfk7V0FHGD9uuaNNZVLxmkfAn
Fzqy2PtVRm0JBywOfbSrrXqE8Kny9vAtFT+TCZ+Kfx5hu33Vb8Knrljf8yqX
GSJ8qmlvd+YxjmE0c29wX8vJX0hT//nFS5+GkcnJDzFdyXRUeuhx/6J7I+jR
E/7hPN0xVHMs4VCcNh3FplU2ydtPoGUtXHkbs+io8eFsOrf3FOo52TwSj+N7
eIfrv2XW06iSV2fkz2N8fYmUhtrZOfTC0GPSawOd8LDg+3Zjhz1GCA9LcLJT
CLEdXvCpS0aD4aW3CZ8a/cphbxU1RPjU5nuXy3e6DyPXnMbtQ9VMpKdQqeg0
NoJ6at/TWpr+oIfj5eTTfnT0vnXD0PeRv0gotc1nFd6vSHi/1ljfj88hjtSh
ild0FKd+y9B/ZAbl+pXkDJzD/UszYb5neB5x7qLvEeocITzq5gHj3srtKYRH
DV2V2Vqyf4jwqMVpgtJHNYaRvtZw8DbeP+howcctA3i/s76MZc2x7C/qVcwj
D+F+yhT57p6szkLUiIF1/e/oyLeYQ9lsyQyyqLvHrLxFJzyq9nDT2alXQ//P
o/xM8svtk8bRRWdHPZ6bdOQy7O776tkkslphf7kRn4+0Pz1Z9CblH/oh889S
6AWd8CgvwSLjvshkwqPW1iUtL1L8TXjUoSWMN0P8Q4RHTfPdM70yNoQY/Jkf
Vgr+QgF7CmbL3wyji2s3e3VvpSMnDvGPy2+NoFoB07q9gmNouNnIL38dHbnL
nxpJXzuBWJqm1YfT6ajG9Mpot94UCidRHh3E+bF/4Gqeovo02t+x3fsers+H
oSRFz11z6KbvbQVpXTrhX8/m01MeXhgh/KtdwfH42OlhwqNAzcK3d/A24VEz
56SN7lwcIjyq18g98pcNrlfRwGeuN5mofWkxs/bXCJqiSU27p/5BE49uiZ70
oqNMox+8ruV/Ea+Sk00YrjdB2X1XhYpY6JS31ekCXI9R7/PmPctm0JD0iZNO
l+ho/P/KOvNoqtY3jheR0ohIEleG5oG6UelBolHdkkLhKqTiIpUorlkZMjc4
SWYpRCFDmZIMpaQMhb1PiM0J4ZxD9HvvWvd9u2v9/vyu/a49vsPn+exjEwno
WvbsJ0Q9aJpc191P/JNP9m6hLAcW8U9zV2f4Cu1giH/af/LitvzlfWAWrWbx
+f0QXBQZF+49hObTjemu/qMjsFdroYMy4o3uJ7aF5yd4EOeQGluAeMTBRKZJ
//s47M1pzmlgcWB2p8eD+FcdkLhnhYx3PkP8U3VD/4KByD4If8iLmrQZBm2Z
a6WCwRzYbi0XZeDFhTG7nmAjNJ+vc9+wP8F+DJYvXROvUsIh/mmjl1h1ekEM
8U8WVvIXts7pg6Jlcx5HRYxA8FCkSzUaz42CF41W3OOBYYLe1Ej0PC3jDuiq
XR8HPf/Y4/0pHOKjUvsM6h+xGOKjvBoCqiJc+2DE2Ov1MTkuNFxfcdgPjb8l
tdq9R8TGIH2bwNW/0fjEPqptScX5k5YM8VGx7PuK33X7wFh7p/Yl41EQlU+x
P1XEAb7NMflSYz4cykhMrUT9H/uoh3r7PAs+MsRHaaj4RfAy0P1xKjLV6uSC
XrPUhRE0/ravU3nMqR6D7w9VspOfcoif8uOGHvzzzxjip/x03VydpHqIn5o+
ff4aTwHm19871hebBzMMfNX0nWvS3A1Gky8a3pSh/hrWQ5vN48ByE2+TrNB+
+OPp8KNFQ4PgIxp6d8VqNF82v3LrlhqB/Yp/ub2P48C2JP2Ftat54C3F0lqM
7m/9pohAabFxUHBePvghhwO5ju5hEusnwaFhs3SNNof4sAjle8dzffqJD2tm
TinO9OgjfuoGa1B7mWAs8VPz/7LaYOjCwJySZmbl5QFYqW+r2cnuB9/6p91b
fL/D3VfSpxvs0fw9c1t0RsIoXNm6Vl22FPGAndgDfiwf0ptLRCKrUf+Vf9Zy
Jv4HsBjOXQG0nv0c+Glcl/wT7hjnOin19xMftfZk9m8V/izio66aGcWnajLA
6H7cm144BFvWecY37kf1xKDgjJrPI3AqvzdhObpeyxmracsuHpyuPLFfFN2P
vvRlOTot43ApIKO68C6H+KgTgycjL+YwIHeM5VVrMAwbpA9M70W8sm6py9Jw
Wy5cij3y1R2d74O33POhR8ZAymylxy10PdhH1V+P+rTybQykdlrrNLuOgMLr
UqWA+xw4cGTzFalrPLCb8EiKRcdvGzwut+bCOOz+EFzrhrZjP2X8LVLNMQr1
B8nWY3HCXFCZGa9+opIDt+SE5u8Y58ONofutqShjP7Xt/L6huaYM6E3GvSnS
GoXuv5QeZxdwwLlQTj9Dhw91pUpHzVD/tNr4u8dRYwpc2cGVQa8Z4qe2H32Z
7Z7aB+5rF/R613Khs+1dymnU/pl3b0trzhiYe6R8tCzkEF91SHNp1c2LMcRX
+axjUap8BvQnS6oHTXngF7ij1wNdH/ZVjHpKR7cfAwWhQZdUGkfhVswT5c5y
DoRWBprJ1fGh9eyOirIq1N4yOTJAgg8JS9x0j6L5yiitUlg0hgsrqtSWyKDx
aJKVs1YznwcWvvqDF9H+sb+aeic2/lsCQ3xVjt7rvFxbBtwlbvEbHPiwqmjK
AtnaX/6qRnCZveNnBpKfnKj7McEFvzBu01l0POyvoj2127fsiSH+qkic1n4r
3kP8FQtED9dM9hJ/FSFSw5r3lYHOI86ZDiXd8OX97Uyj532goLNdRo7fD5v+
vLdrILgfbobqpXp2DoJGUe80esU/43FU56roCAjUSM4LRP3vh0Fauo4CD57b
/hHHQ+cT0iHNjxYaB4Egs5M9jzlQZLW5xlppEqR87cNkdTnEl/m4z9+4MaCf
+LKMiFtX5vj0EX9VvMgp5NDcWOKvFgRdKHzozIDhTWGRIIcBmKDq/RxRnVub
ItoW7/IdpHY+3DzFDo1H29PHD9wYBfuPgy/N0fyuK+UMDhF88FOpmzWB+n9V
le7OnqgfUDqxMqvKnwPTOgsj5GJ+QmGy3vqFA/3EV/24Iq5xOIJFfFVvhdAF
vgYDqouXbxfLRON1sVfvi33o+R9YV3/27Qhc3ZaQppjNAfmckPPNLTxQOzUw
azV63vcNM+VL6sYhTbjYRuUeh/gqcfXFPyozGLBW47io6QyDJqXFMwrgQLJn
Yq/acS68mOo8LIrO97Sb8Yzpe8egRGi25x60PmNf1fI8vNTpUwws0Y2Y4WY/
AsmQHmyRxoE5U1nzQtx54Cqh7HwHHZ91+0tQuu04OBUPJRWkc4i/cjlT2fYm
jIGj56cr6oyNwq6akfvVaP0xemWdWPiNDxs0xlf8jtYn7K8q2rU+nzzCQNGx
umizDaMQKyi85C1aL1StPFsUN/FBTPKDewIafxJnzoY7bqfgtMKRLtUahvgr
03fHhw4m9cFwsPYjpRIuZB2a+VMWtb+8eq/9wdQxkDX36dNA6xn2WdKrLHYW
esUQn/XNOXrKgmEGpqUqmJ06wAPJCRlHO3R92GeFvov6ut2bgXXf8rVeVY2C
4FuPeZvReDVw6B+MKuXDueTYDk3EMytmiSz7KcIHd7eslEDUX2unf697EMKF
BVMkNxciPlhosqA85wEPZLoLVQLQ/rHfYpcvK1SIY4jP0koU6JhtzcDWZ2NB
u6344Kq/ZbFz7S+/5dynbtrejOo5idDI2EEuUPSOaDV0POy31PSDjPcaxcDf
450+hzV48HGX+u0t/1yPeY1B3yAPaJXtKztRe+y7HsgY+k88YRDfNPXERfHA
SKPdIwa1v81iPVvvRgH7Wtiqpw0MiLz9qkA3ccEjba5bNrq/1wzNN7nZ8MC/
3EciBLXHfsvMQEkt8BoDrbICqTILKXgtv/HM9QoGWMIHWZXlPHjcNGx6ArXH
vusSj69mnsIQ3yWyc/a4mR1DfJfj4Rdnl3Sg+39kk7DpTDQfzArZcg+dP/Zd
9jNaqbVaMcR3/XHc7Y+pG9jEd03yzjVe7KGJ72rPumvHONDEdyUV2jimNVHE
d10fn3yovpQivstG6aagzuYO4rvcvPu2tgS1Ed9lK/DA/47hJ+K7pKbV5l4Q
ayG+q3jBPi+X0Y/Ed4mda8vPLWokvmt3io3jlfIG4rtMJ+ud8obfEt/1Sc+q
zEulnvgufUe2T7R2HfFds29bKhfqVRPfZfXYV8wv7SXxXfO/75m31fUF8V1+
0+4YDpuUE99V+MrFOjeylPiuDNVT/UG5z4nvEr9oemxHRhHxXVLndTWdfisg
vqvPwe5kVHwe8V1ldw4ZVvg/Ib5r+59bBFtTcojvuhZ9JajizSPiu6LaxjQ2
a2UR35UdJzNcZ/+Q+K7cTu+jjY/vE9919Vb2g5GTqcR3dR0T73WWTSa+KzTz
hKHrmkTiuwKKxSKvn4snvkuHe65N5Fkc8V211e2VG6Jiie86t0/5yeP8GOK7
eImPXL/uvkV819QV5deMl9wgvmvbp0a1PF4k8V1nHyRWjipFEN81Wb80qM84
jPiu4WVNkRl/Xye+K0F4l92HqiDiu07f83g0d9E14rtCKn4/+O6dP/Fde+47
NPtU+YK/5EPvxssUxOl91uaj8em5/VOZ4AkazD6HGXFHGeK7cH2LfVfBppDs
H2JsWHjuaXXUx7fw7HJOoXs2TfyXSVdcJGc5TfwXS3CaY74X9ev7WnSd2FVF
NlxOqx+9YVsHCV1eEXve0MQ3dZ1x8UgyoIlvmtGYutQ6k4LmzFkpgqal8Ibi
Uft/0uAUNvO2+dh7eLpoVuLMCJr4nqBA211CgjTxPY4lVAD/EEX8y5en2my/
VWxQCPRQeY36vbr9C+0nn2jiY8LOCfLELGjiY6avcbYYqqCgLJ7LEu4vAs+r
3nPOzGDDDgHL7LFTDSDeNqVbOoEmPmTRpcN25ZI08SFH5NO33j5D/fr+0iyT
PQlbaeInrgpwDQ7eoohfGH4oOuUDh/o/v4D9QOomqTOG69gwOv4BbJ9UAX/x
hOlKNk18gciJ5R/CTtHEFzy31lfzfUPB7gprXT+RArgd8nJcdw4bMgqCt+2M
eweFaVNuUPdpmOYwf59McRu86pI+OVeeJvU6e2DOC42LFKmfRRW/juai/eL6
ucl/q4RdIkXqXyOf1OJ3fIrUvyaSw+08fYrUrzIWV/dqIm5073lypWR+Bxx4
lfnDeTZN6tFVLRXiLeYUqTelzfMCT6vRpN7cFVYvLBlCkXpS9ebRC2fZFKkn
/9rgsfLmWorUh1Zx3zlrVNlg8VigNrfvJbwT319t1EWTenFRJW93+Vma1Isp
XbJ5pe8pmHN4yUK96HxodF8hkzSPDezohGnftrwDuas3Lj3JoEm9piWpOvuA
Ek3qJ08n6w7V3TSpf4orHjken6BIPSKpLPtzihhN6o0LftOCRdVpUj9IZ8ru
K9pIkfGomcktUUbr2IWZXb+9FG+HcMVmYZYMTXj9nM1nMwURmvD62tysXSVr
UH9WKZIPy0f91jXjsns7Rfjby2NgqbQaGyJDF4YfD3gJTVXDMV+7acLjUcI3
/JrsacLjW26dLT72kQIH2bGpyp/z4HH339y389kw6ZNhUzbjHeTRQfYxWTTh
4f7b4eGZKjTh01MZh43t9tKEL0eYnZYJaL+Y9/bo7+pzkqAJz+nezoo8upkm
fNbqcT6lTZ2C3JGGla/RvJDoeXqey2uK8FUl+2Pq0iU0jCRZBn5a3QH3WvvL
rsykCQ+xG5LCJdfThH+EhY5ltFAUSHDz1rN92uDL/UANjgJNeGZDp2fyzXEK
DsrmhWeMt8Ml75LKoLk0mS8Nm8vvLu+iCK+UHbBi75emYc332vOqxh1goHq4
8YsQTXiE1ab0yGYVDcKzcwT2dqB5TGigW7iVIrzRERdd+k/9inkDZ8wbODc7
3Fcv66FIxryBM+YNnDFv4Ix5A2fMGzhj3sAZ8wbOmDdwxryBM+YNnDFv4Ix5
A2fMGzhj3sAZ8wbOmDdwxryBM+YNnDFv4Ix5A2fMGzhj3sAZ8wbOmDdwxryB
M+YNnDFv4Ix5A2fMGzhj3sAZ8wbO5Pui/2bMG+T6/+UNnMnvwf/NmDdwxryB
M+YNnDFv4Ix5A2fMGzhj3sAZ8wbO+P0a2f7v+zWcMW/gjHkDZ/y+Cmd7xfVm
D4W6f/2/DFV2fsZ/sopBkn/2f/JE0TPf5//Jt1TfD1H/ybSF6qSyz2+Ed4T3
WLzRFP61/X9MyBFN
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1647, 1608, 1643, 1626, 1651, 1520, 1630, 1613, 1594, 
            1639, 1622, 1565, 1488, 1335, 1386, 1445, 1217, 1514, 1440, 1499, 
            1379, 1564}}], 
           PolygonBox[CompressedData["
1:eJwV0L0rxHEcB/AvYbCe3V3IXQjJU04iGZw8HIXQcajfifNQRotRmU0s/AFG
i4dFmU1sFsXg6Q8grxtevevduz7fvon8drZYHkIoI+KjMoSFqhBG6aaJOmrJ
MU4frTTyab8oM/TQTD1xlpkgTRtJvuyX5Bi9tNBAnikG6GCdGUbYYJ49Eqww
ySb9RMyyQztrTFNkmAJz7JJilSxbDJbuetMLh1xTzRunPJX+gyPuifPKCY8M
sc8lPxUhvMsznslxzAMpMhxwxZ9tjeyiwAV3ulu++SWm6yTinBvdP27SMKE=

            "]], 
           PolygonBox[CompressedData["
1:eJwV02VoVWEcB+CzuTDmNnNhYQsGFmIHWBMMLFRQUIwPdmBjYKMoBmKB6Adz
KjYGdnd3TaezRedmx3M+PPd3+PG+7znn/u8t229452GRQRBEUNJHvZgg2M5A
upHG5+gg+EI2X8khl2985wc/+cVv/vCXfwT2RxBJHqKIJoZY8pKP/BQgjoLE
k0AihShMEYpSjOIkkUwKqZRgG6X5FBUE791/PY8ZxDKuUpfuzOY4halCOyaz
P3wP+/PJMrRgDDv4qP8Qns073vKG12Txipdk8oLnZPCMpzzhMY94yAPuc4+7
3OE2t7jJDa5zjatc4TKXuMgv8nqu0jRnNNu5oP9JrOtSNGMU2zivLyQrk8Yk
9oVz1MfIkjRlJOmc0yfKSrRlInvD2etryE5M5zDR9GIepyhBE0awlbP2DJRL
uUIdujGLYyTQhwXhWiqyklu0YQJ7wt+ec9bKB/RjUfjOVGcVt+nIU6ZxiCiy
WMNdepLBXE6SSibLuU5jnjCcLZwJZy7X8YgBvGAJl6nNau7QlZkcJZ7ezA/P
oAIruElrxrObXOf3lQvDGVGNDkzlIHnowRxOkEIjhrGZ0/bXkl2YwREKUp5W
jGMXOdZVle2ZwgEiSaYhQ9kUzs+6OFmOloxlJ1/1ETKJBgxhY/gd6rMJXBen
PoPZED6vvr9czCXS/Udryv9ls5qb
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 230, 172, 122, 87, 64, 51, 2, 3, 231, 173, 123, 88, 65, 
           252, 194, 145, 110, 267, 209, 164, 283, 225, 298, 52, 243, 185, 
           135, 276, 218, 295, 100, 264, 206, 160, 281, 223, 297, 77, 257, 
           199, 290, 151, 116, 270, 212, 292, 168, 285, 227, 299, 4, 232, 174,
            124, 274, 216}], 
          LineBox[CompressedData["
1:eJwV0kWIlWEUgOHfbsexexzHbl3YsbAD1DEWtiPYLRgLO8AWDDBQUDAXdmCL
gYmiqIiBiIJd2GI8Z/Hwnu/+Fy7/+W561oTM8dmSJHnJztxJkuJw17yLXPgo
yUNe8pGfAhSkEIVJoQipFKUYxSlBSUpRmjKUpRzlqUBF0njFXmbSj7Y05gvH
WcxwulOJ1+xjFv1pRxO+coIljKAH6bxhP7MZQHv+cJ7VTKQp3zjJUkbSk+x2
clnXM5XKvOUAcxgYe/Kd67qZDvzlAmuYFPvy/LZupxnfOcWy2JNnD3VU7Nh8
U7fGrsxPNZMc5iu6IfZpfqzTYu/me1pVd8c+9bnW0Qx9x8HYmfPcuBt9oNV0
UNyt3tAM3RL3pE+0hnbUf1yMHTqvjfvURzo57t98R3fEfZqfaXN+cJrljI7/
jGe3dBu9yOl8VTcynSq85xDzGEwnEt+7JOuYQgt+coYVjKF3vDsfOMx8htCZ
lvziLCsZS594dz5yhAUMpQutqM4njrKQLLrSOnZCTWpRO3ZMXepRnwY05DPH
WMQwutGG35xjFePoSy7veE03MYNU5/u6hzTzi/gNbaT/ASoSZ38=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$204072#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{302, 531, 473, 423, 388, 365, 352, 303, 304, 532, 474, 424,
            389, 366, 553, 495, 446, 411, 568, 510, 465, 584, 526, 599, 353, 
           544, 486, 436, 578, 520, 595, 401, 565, 507, 461, 582, 524, 597, 
           378, 558, 500, 590, 452, 417, 570, 512, 594, 468, 586, 528, 601, 
           305, 533, 475, 425, 575, 517}], 
          LineBox[CompressedData["
1:eJwV0lVoV2EYwOGzKRMVEXfhnMlsDBa209mtU+eccxbYhZ1ge2EH6CwwwAC7
QJ0BBhgoKIhxYQfORB0mij7fxcPve9/B+XO+s6Thk7MmxURRVMj+uChKj42i
GO5ZptGIxjShKc1oTgtakk4rWpNBG9rSjvZ0oCOdKO+5j/QAy5jCCDqT4G+P
9SDLmcpIkuzf6Ck2MI8uVLB/oodYwTRGUd2+UE+zkfl0JdH+qR5mJdOpZ/dZ
L7Kd0dSwe6tnyA/vbP6jt1lAsvmbXmV3eHdzLPedu1HR+ZkeCffgHMeqcI/6
S28yg/rmL3op3I9zKXaEe9V/2lfvhmdqWXIZY66p77SXFoT71ZJksyl8H/2r
ffROuCstQw4LzSn6XXvrtfBdtDR7wjfUYjxw7qHl6O5cSZ/r0fBdnUuwOvxf
6G+9xUwamL/qZXYyllp27/Usm1lEqt0Pvc7e8FtUtnuhx1jDLBraFekVdjGO
2nYf9BxbWExPqti/1OOsZTbjqWP/Uc+zlSXh7qhq/0pPsI45TCAz3E24v/AN
yKIf2fQnhwHkMpA8BjGYIQylmme/1pOsZy4TqWv/SS+wjaWk2f3UG+wjw1yc
h+G9NJ48hpn/AzF2byY=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$204072#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{603, 840, 780, 727, 691, 667, 653, 604, 605, 841, 781, 728,
            692, 668, 863, 803, 751, 715, 879, 819, 771, 895, 835, 912, 654, 
           854, 794, 741, 889, 829, 907, 705, 875, 815, 766, 893, 833, 910, 
           681, 868, 808, 901, 757, 721, 882, 822, 905, 775, 897, 837, 913, 
           606, 842, 782, 729, 887, 827}], 
          LineBox[CompressedData["
1:eJwV01VolmEYBuBvE4dxYBfmxMBERTEQFRE9sKdi1+xaODvm3OY2p6LO9sAu
bD2wC2zBAOPALrAFnWCg4PUeXNz383yM///f91t8YnJCUkwURYXsj4uitCJR
1JpijIyNolGMJpExjGUc45nARCYxmSlMpbu/LcVj/QRbWMU0etiX5ol+kq2s
ZqBdVd7plzlAEj3tyvBUP8U2ChhkV433+hUOkkwvu7I800+zPfwGcx2+6bdZ
w2BzdT7oV8P31psRcSj8RtmAn/p9ZuhtKE6Kubcsx3P9TDgDvQl/9R3hzPS6
fNfny47c0VNkS/IoSgZdWOvZEFmDbD6a58kOLOdaOD/ZnFxiSKczKzkc7kQ2
JIdf5gWyEyt4YJ4p25JPCTLpSqpnfWR5XuhzZHvOhnuVTfmn7wzvgV6PQv0u
qXor4lhnHipr8km/Hu5Qb0EsR8I7IxvxW3/IdPqaK/BSP8eu8K6Z6/NDv8d6
hplr8Vm/wVHSSLCryCv9PLvZwHC7eL7oNzkW7pF+dpV4rV9gDxvD+dDfvjJv
9IvsZROzmB3OhrnhbsK9hjNmIeksIoPFZJJFNkvIIZc8lpLPMgb4rCq81S+x
j82MsKvNV/0Wx8P/mrkxf/RH4Tvp7ShJFt0oCO+LZ/8BXQN7fA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$204072#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{915, 1143, 1086, 1036, 1001, 978, 965, 916, 917, 1144, 
           1087, 1037, 1002, 979, 1165, 1108, 1059, 1024, 1180, 1123, 1078, 
           1196, 1139, 1210, 966, 1156, 1099, 1049, 1189, 1132, 1207, 1014, 
           1177, 1120, 1074, 1194, 1137, 1209, 991, 1170, 1113, 1201, 1065, 
           1030, 1183, 1126, 1204, 1082, 1197, 1140, 1211, 918, 1145, 1088, 
           1038, 1187, 1130}], 
          LineBox[CompressedData["
1:eJwV0VdsTnEAxuGjrca4sEdiVmIkRkhICC7sEbONETMagohWJFzYI7YYMWq1
iurw0VarVbT2hT0u7JFY5cIeic1zLp685/c/50tOvhOXmByfVCEIgnIisUGQ
HhMEU+lKSnQQ7GAnu9jNHlJJY55nelCNt/oOl1ihB9GA7/oZe5mve1Kdd/ou
l1mpB9OQH/o56SzQvajBe32PDa5H0JworjhbZYfQiJ/6BVtcj6E1ldjnbKHt
TU0+6BQ7gfbc1xvtSFoQTSqT6cxV91fboTQmk5n8Cv8bO4mORJjNS+db7VgK
aEM2yZRQOXwnplFEN3KZQyn7/X6R7UM+tchgBsV8DL+NnUghHchhFg/c22RH
0ZIskoghjSl04Zrn1thhNOF3+I1tIp14pbfZcbSlCgecLbZ9qc0n/ZDNrkfT
iopcd7bWDqcpf3Q5GSzR/ajDZ/2IG6zT8cTxV7/mIEt1f+ryRT/mJpksczaA
enzVT7hFFtnkcIgIhzlCLnnkc5QCCjlGEcUcp4QTnOQUpZRxmjOc5RznucBy
7zCQ+nzTT7nNep1AM/7pN2x3PZ52VA2/N9PpTh5zKeOiZ/8Dz3eA9w==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$204072#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1214, 1443, 1384, 1333, 1299, 1277, 1264, 1215, 1216, 1444,
            1385, 1334, 1300, 1278, 1464, 1405, 1355, 1321, 1480, 1421, 1375, 
           1497, 1438, 1513, 1265, 1456, 1397, 1346, 1490, 1431, 1509, 1312, 
           1477, 1418, 1371, 1496, 1437, 1512, 1290, 1469, 1410, 1504, 1361}], 
          LineBox[{1510, 1327, 1483, 1424, 1506, 1564, 1379, 1499, 1440, 1514,
            1217, 1445, 1386, 1335, 1488, 1565, 1429}], 
          LineBox[CompressedData["
1:eJwV0UdsiGEcB+CvtEVi1cEesSVGYhzskdiJEVSQkGiMA1ordozYIcSIWIlw
MIvYMWLVrA7VRXWolqoWB3scPN/hye/NL/93JG/LuIRx8RFBEJSTGB0EKVFB
sIsZ3I8MguNyDj2pT8BXfRInrOfSiwZE8E1/QS5hMK2oyQP9STmP3jSkCtdZ
zSg68t3cRbmUIbSmFrdZz3i68tDcKRlPHxqF72Uzk6jKDdYwmk48ZQfT+WH/
JbmMoWSynzY8YhtTqc0dNjCBHA7RjVR2U8JM8jlKRXiG80/LBArpSwb7KKUx
SWyhmMnkcpgyIrnJWooYQzYH6UwyO4kjjyP8dOdluZxhZHGAtjxmO9Oow102
Ekt30tjDrHDWOWfkfPrRJPw/tjKFKG6xjrF04Zc9V+QKhtOOujzRJ8oF9Kcp
0fzWX5UrGUF7YsI/0p+VCxlAM6rxR5/MOetFDKQ51fmrf0YKqaSRznMyeEEm
WWSTQy4veUUer8mngEKKeEMxbymhlHe8p4wPlPORCir5xGfOe9diBtGCGvzT
X5OrGEkH6nGPTUykB+nsZTYFHKOSL/b/BzAYh14=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$204072#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1517, 1627, 1610, 1591, 1579, 1571, 1567, 1631, 1614, 1595,
            1583, 1575, 1518, 1628, 1611, 1592, 1580, 1572, 1568, 1632, 1615, 
           1596, 1584, 1576, 1519, 1629, 1612, 1593, 1581, 1573, 1634, 1617, 
           1599, 1587, 1637, 1620, 1606, 1642, 1625, 1650, 1569, 1633, 1616, 
           1644, 1597, 1640, 1623, 1648, 1585, 1636, 1619, 1646, 1604, 1641, 
           1624, 1649, 1577, 1635, 1618, 1645, 1601}], 
          
          LineBox[{1647, 1608, 1643, 1626, 1651, 1520, 1630, 1613, 1594, 1639,
            1622}], 
          
          LineBox[{1710, 1638, 1621, 1609, 1521, 1522, 1523, 1524, 1525, 1526,
            1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 
           1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 
           1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 
           1560, 1561, 1562, 1563, 1709}]}, 
         Annotation[#, "Charting`Private`Tag$204072#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1652, 1702, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
            1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 
           1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 
           1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 
           1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1701}]}, 
         Annotation[#, "Charting`Private`Tag$204072#2"]& ]}}], {}, {}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0., 0.01}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True, "ClippingRange" -> {{{1.8796613004033026`*^-7, 
        9.210340184010054}, {-13.167284936417946`, 9.01859655859865}}, {{
        1.8796613004033026`*^-7, 9.210340184010054}, {0.01, 
        9.01859655859865}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.01}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) (= \
\[CapitalDelta]\[CapitalPhi]/T)\"", TraditionalForm], 
        FormBox[
         StyleBox[
          InterpretationBox[
          "\"Liemohn and Khazanov \[Kappa] = \\!\\(\\*FormBox[\\\"3.55`\\\", \
TraditionalForm]\\) density factor\"", 
           StringForm[
           "Liemohn and Khazanov \[Kappa] = `1` density factor", 3.55], 
           Editable -> False], 24, StripOnInput -> False], TraditionalForm]}},
      FrameStyle -> (FontSize -> 20), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, PlotRange -> {{0., 9.210340184010054}, {0.01, 10}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"1000\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 1000], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"300\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 300], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 100], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 30], Editable -> 
         False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 10], Editable -> 
         False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\) = \
\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`", 3], Editable -> 
         False], 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.728301911362049*^9, 3.728302043070862*^9, 
  3.728302142218513*^9, 3.728302218518647*^9, 3.728302260095286*^9, 
  3.728302349446558*^9, 3.728302810463122*^9, 3.728303366750863*^9, 
  3.7283034255502567`*^9},ExpressionUUID->"c513fd01-7c83-4656-ad97-\
b2dbbfdaa35c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plotLKKappaRBFuncs2", ",", 
     RowBox[{"maxkappaRBVal2", "[", 
      RowBox[{"fillTwixt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"phiBar", ",", "1", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fillTwixt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"fillTwixt", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(R\), \(B\)]\) = `1`\>\"", ",", "#"}], 
           "]"}], ",", "20"}], "]"}], ")"}], "&"}], "/@", "RBs"}], ")"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) (= \[CapitalDelta]\
\[CapitalPhi]/T)\>\"", ",", "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)\>\"", 
      ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<Liemohn and Khazanov \[Kappa] = `1` density factor\>\"", ",", 
          RowBox[{"kappas", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "24"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3XY23U7t+GvHi69cnUE0W+QJDxD9jjPPF0Q/unYi
GkT/6r4DpnX4dBNBdH6adCGItl4VWgqin3DydoDo8sjeiSCaZ/5MMG1m1zcV
RKdFCkwH0dkeW2eD6MNhCUtAdFLT0vcg2jN1A5hWWnZ0rTaQbgjI3QSiWRg6
t4NoEU+NvSD6qkHQKRB9ZY7raRBt4cv3DETfONz4CkRvqPf6BaKvPdsMpls2
XGPTAdKXrrqzg+iSJZ58IDpAIxxMe0+slgTRzBJf5ED0jQ+vVUD0vKwbqiCa
9cCVuSBaRNJoHoj+EfR0GYi2WPQSTAMA7dij/A==
  
  "],ExpressionUUID->"a1d52373-c715-4cef-a609-8e06c679455d"],

Cell[BoxData[
 TemplateBox[{
  "FindMaximum","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"500\\\"}]\\) iterations.\"",2,197,22,28488301849097896721,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.728303453042639*^9},ExpressionUUID->"6f324386-2e2f-4012-a6de-\
e89a764814bd"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7283023968188267`*^9, 3.728302444910508*^9, 
  3.728303487740849*^9},ExpressionUUID->"0edccfcb-ac08-4d72-ba3c-\
01fa24ce7639"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Analogous plot, with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "B"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d65ce4a5-5ddd-4bc4-8430-23c23a79bfe1"],
 " as main variable"
}], "Section",
 CellChangeTimes->{{3.728291674024156*^9, 3.7282916826214933`*^9}, {
  3.728292607225048*^9, 3.7282926169594097`*^9}, {3.728300493266737*^9, 
  3.728300497770166*^9}},ExpressionUUID->"3aa86580-021a-4cc4-baac-\
7e1106a9b393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phiBars", "=", "RBs"}], ";"}]], "Input",
 CellChangeTimes->{{3.728291683952737*^9, 
  3.728291693568557*^9}},ExpressionUUID->"85487c99-fbfa-4ba9-acde-\
f3d958ea3556"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKMWellphiBarFuncs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKMwellDensFac", "[", 
       RowBox[{"#", ",", "RB"}], "]"}], ")"}], "&"}], "/@", "phiBars"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291736061108*^9}, 
   3.728291785191638*^9},ExpressionUUID->"5ae177cc-c1f8-4e64-97ce-\
f7e2d7fa6a72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKKappaphiBarFuncs1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKKappaDensFac", "[", 
       RowBox[{"#", ",", "RB", ",", 
        RowBox[{"kappas", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
    "phiBars"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291705310709*^9}, 3.728292566261046*^9, {
   3.728301019681707*^9, 3.7283011623844433`*^9}, {3.728301214147241*^9, 
   3.728301230792028*^9}, {3.7283012781999474`*^9, 3.728301294903751*^9}, {
   3.728301367103372*^9, 3.728301378847032*^9}, {3.728301412654935*^9, 
   3.728301412806398*^9}, {3.7283028596723347`*^9, 
   3.728302892509227*^9}},ExpressionUUID->"d091625e-aa13-4cd9-942b-\
df5a322564d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKKappaphiBarFuncs2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKKappaDensFac", "[", 
       RowBox[{"#", ",", "RB", ",", 
        RowBox[{"kappas", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
    "phiBars"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291705310709*^9}, 3.728292566261046*^9, {
   3.728301019681707*^9, 3.7283011623844433`*^9}, {3.728301214147241*^9, 
   3.728301230792028*^9}, {3.7283012781999474`*^9, 3.728301294903751*^9}, {
   3.728301367103372*^9, 3.728301417030385*^9}, {3.728302864671824*^9, 
   3.728302897463173*^9}},ExpressionUUID->"720ebb03-06d3-49f6-ba5e-\
a870383e46f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fillTwixt", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72830229094874*^9, 3.728302305883286*^9}, {
  3.728303053206518*^9, 
  3.7283030538222847`*^9}},ExpressionUUID->"27ba9891-e2d7-47bc-98a8-\
4c07a4b9dcd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{"plotLKMWellphiBarFuncs", ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", "1", ",", "100000"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`\>\"", ",", 
            "#"}], "]"}], ",", "20"}], "]"}], ")"}], "&"}], "/@", "phiBars"}],
      ")"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fillTwixt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"fillTwixt", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(R\), \(B\)]\)\>\"", ",", 
      "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Liemohn and Khazanov Maxwellian density factor\>\"", ",", "24"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282902912438383`*^9, 3.728290330184914*^9}, {
   3.728290374260867*^9, 3.728290411438712*^9}, {3.728290526276231*^9, 
   3.728290526892087*^9}, {3.72829056940798*^9, 3.728290696856254*^9}, {
   3.72829073067703*^9, 3.7282908804074574`*^9}, {3.728290956417171*^9, 
   3.728290956800665*^9}, {3.728290988445094*^9, 3.728291000510913*^9}, {
   3.72829103766509*^9, 3.728291107010591*^9}, {3.728291709172166*^9, 
   3.728291709512364*^9}, {3.728291740356946*^9, 3.7282918066719837`*^9}, 
   3.7283030640307426`*^9},ExpressionUUID->"cd032090-7124-4e60-8eb9-\
02ff06d78f85"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
69TnB4dwnppaNamSq0HHearM40jFKr9pnKc2GRm2HIj6i/OUgMDqCvOleZyn
XhpGRXycZeI85aQQlJ2RvYjzVMOftPiX3Ms4T30c2pSbtupfnppNuKChHcqC
89Rh7btRHr0sOE8tGDScE1dnxXnKVmj649UzrDhPBd985sgezorz1IuMVc5x
Waw4TynFbZh2r2HFeSo7V/HakT+sOE/JMB7rsDBZcZ4yTfc7WM1FwnnKyRYM
fRAl4TxFZUS4uUuRcJ4Kv5HtOqVIwnmqrqd+PFeVhPPU+RMXFxY1SDhPzS0U
1LzeSMJ5qq7lj6XdJhLOU5Wt7scu65JwnuK160k03kLCeWqBGNZ+pk/CeUr1
ygOzbwYknKcWGz082ciC1M3uc2N0FTHgVRq86+PqWWJbQo83sWYlyBqUK1jd
NEfERqp1TrCJg66eJwG7yUxC1Pz6I6EpccB3/tvdhN4FgiJhXB1HWwUqnvMR
PeeWCJTPUgPFtSaT/uWz5VMfjxRas+B89jRU4uzrXBaczyTOr9ec52bF+UyD
RXR0nzkrzmeZJqUdl66x4nzWcNY0ffwVK85nO0e45i3LWHE+018ILpPtZMX5
LJRIXEidZMX57JGsFzAnkXA+y71vISwpQML5TIA+Km4lQcL5LPuifs1FORLO
Z41NFTps60g4n7kPOb5hqJFwPtvWv2FmTIuE85nl9YIcER0SzmfeKp3nvTaT
cD5b3qMUcQHmVZTPrvNkPmXA80T5rPf6lOFWeH4on90cOmM6RwhSS4b0wsyH
RYHizfwG1X0zhEa4mii1RwxQtYsXDLfMET7rCsJivq8EseWkBJvbDOJvS1lI
a6Y4uB4UMFR6aYHglH9MCUteBdzuHeYSEl4iUN4rUVN8Rzq8/C/vJeoDMb1/
ee8Wv6xRyCsWnPfi3+U4/5hlwXlvcXvy6TVbWXHeK5MrkzJ2ZcV57xdrHMkk
lhXnvX17775TLWTFeS9YLFGE2cSK895lpcQnymOsOO893hFvQFlixXnv/p6V
j1fwkXDeO2Rz30hQnITz3sy8S6mfDAnnvQyBCrk7yiSc95yIr2d715Nw3jPe
fmrFkiYJ573nhnPep7RJOO/NVY81DcP7iPJeMtvrjdPwPqK8J6D+7uNLeH4o
75nY3qCOwfv46OmtsN4kebCVJ32bqyQJ5z8p7sXLhgoknP9+Bot82gP/PMp/
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
uNUeGfvPU97Pttp9OTeKPeXSKf8H+/6OYU9hNjt86RCbwJ5ydG7prG7wBPaU
LToSGY+GJrCnpJLui+3QpmNPab4ddU3TmY49JbtWYk49jo49pfyXmvqxYjr2
FJmHzrTj3XTsKT+3Zj8h5ujYU9rcH/v1cU9iTxEvNRvllpjEnnLgjlqjjuIk
9hSFLY4ddLVJ7CmGTLZ1XjqT2FOebLh9gaQ/iT2F+5PP1VLDSewpL+c+DBvt
mMSeUmpVGcpiPIk95ZHUmPHhXZPYU67d2LMsZjaJPaVudcubCPNJ7CnuN1nS
snZPYk9Jr2kxv28xiT2l9qeolsmeyX+e8oN8sQrOyFM67ctn9Cwnsaes+/zp
ThSckaeEsLuINcMZeUqacLqHyN5J7Ck1p8PnyRNk6kueSPFXDpwgoxy0zERV
EPGC0o6/jblBxKvi8XtyTcS86dMskgovGPEkL33y7ybCOOSTF1avAJYaKU2j
b/qIWitnm6K//OBkfIa8YMdvQv/swYB3FwTBgVBx0dNeQwTyGooes9gsbAR7
TQ1/MfeUwRj2mjDbj1MvY8ex18hsfFq8af8E9hq2hA03jxdM/POaA66t84J0
7DWB7l0Ge/bRsdfottSMrwuiY6+RUxl/YZ5Gx15j6rAq/VcNHXuNZufPDvIo
HXvNQIBtZjjrJPaap6Lv1o4KTWKvEc32ip2QnsRec6om8H3NuknsNXKWuZpj
WpPYa9wMFY6d0Z3EXhPuEqcWvHUSe82zNbJ748Ak9poj36vas4wmsdekaMd+
IkwmsdfY3vPI2Wk6ib2G8drDtwvuG/Kab4X519TgfiGvKZ63eLAW7hfymk9R
UqfG4Yy8xocSqBUG9wt5TWTE+XdkuD/Ia9znttw+D2fkNYFqRbo5cEZeY+Nm
m/gXzshrNK6/fPHFgZNa9Kuf7PSHDH4azVr2BVOIwC+39y7VcAG30PLBDq96
om/GU/H4Ox6goXSj/tHzTsKWEQgSE/iAv8oFo4wsGuG4uW8wK5AfNJbI7/mg
/JvgtP4WZqYuCIqTA4zkm/4QyIOkz5/mpor/8yBf2R9bAhpGsQexHtY/enr3
OPYgx4qm3C6dCexBQ+uVjEVfTWAPUjISXHlgaQJ7kGrvYaf0HXTsQZlH1APD
r9KxB/m8eLCL9Q0de9DynOSRpm907EEb7N0jaQN07EGvDyjEcS/SsQeVhr2V
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
w/4o+0vSZBbOyB+tugdbL7L1YX+sfy/7txzOyB+DM5Q6eNj7sD++abwqZgJn
5I8doXfL3eCM/DFZ5ajqYzgjf5TU8pgsLSJR7a8WpH5QXyCO1wxFVQ60U3Zu
uHen+88yYei0f1/NhSrKtHLChu4GVvDV9375KYOPlLe/nWTf5LKB6bipYTI5
i+DSZXzbFMwBDt/a7C119yuBPFN8PibvOF8t9kzldMkNDW8asWeqB5w3jdrX
ij2TX61lU4dZB/bMEJaDCmNBXdgzV//YfM/7TTf2zEOcrz4mHe3Bnqkj+f6s
y0gP9syKDd83d9r3Ys98EnFh+FFOL/bMOnm7KbulXuyZT9XDXhdvomHPjH7o
EFV2goY982Hr8yHdWzTsmU1rWHpfxNGwZ+oYSWc6ZdCwZzazq5eJltOwZ+6S
EVh1tpaGPVMmc24VqYOGPdOa+9Ut134a9sx5/c2ujcM07JmC/Oc7VtJp2DOd
uPfGGM/QsGcWy72WezJHw55peOKpwzYmDXumaIiNquEiDXumRp9OWC/cX+SZ
XnEhrBvgviLPnDi5M0sf7ivyzKgyyZXCcD+RZ7IuSvpkwhl5ZlPjaPYmuJ/I
M0fYf194BmfkmWkRzENDcEaeuburdqcq3Efkmdt39qgcgzPyzHWy2zSC4Iw8
syCA/6K9Hhv1Wav2tv2bmcRrZ92wdRe7KSs91XgV2ZYJMniSmGxaSzlV1HOl
wpYVhJp6dglfy6N0Xyo52bGTDaxtcVcOqE8mZDjbtHPEOICyw31ShF05gXz0
XIv47s/vfmEf/X1Bvm30VQP2Uc8j+vFP3Vuwj74VrQzwjm/HPnpuMtQ8hasL
+yj/dnHWzW7d2Ec1ktmvU3V6sI/y8cXJ7/zeg330XkHD2ucmvdhHt/14YW6U
1It99IWRQGXxaC/20dx6jdgwFRr2Udf3iv1bD9Gwj26+BLrYfGjYR8+9Xd8b
E0PDPhqyxKjY+oGGfVTs+ZC8RDEN+6j+qtYb3tU07KO8xvenrrXSsI8+fTUp
G02jYR81ig0tOzVEwz66OHYlpnGchn10E+dUit00DfuoEl/ao6q/NOyjRbzL
19/C5y3y0RhLudZv8HmLfNT7zntvX7ivyEf3j/Uc/A2ft8hHFymD95hwf5GP
/k5be6cH7i/y0ewzL9LC4b4iH42piptdCfcR+eg1k4s/b8MZ+ajwIkhuhjPy
0Y/3J3gk4T4iH41c3ju1D87IR6W13Syuw/mzXfb1X7ncoKG16dLFuCaC/1mx
yZvXvKDRtPrPNoU2YtuF6fIKJwGwsvuGlvFSF8FlN7JfKkYIDF1J8zh4q4fQ
qy49Fx8mDBZebgsL5eslmrtZ7ra4iwJ5i8iQ1u+92F+HbuU9PfSKhv319tmR
B2Y5NOyv3PPh9xTh+xny1ysbi555wdcH+avu7mMSXvD1Qf7KfvDinkb4+iB/
TfQ8XXIW/j7IX3fW815+AGfkr+ZRQyc5L7NR9e+NsyfmMYgvWXy/B9x6KH5i
i5XlD5aIY1bkJ2zddRQJnoBnW1azAr6vffNOwlTKgrbLrSs8bOAJj8EWcOoF
oXrpx7mr7exA4yEfVTutlECeO1VkKhg0UI0919xFI+jImgbsubf0HKS6Fpux
50p4ZJ35ubMde26chtvL6opO7Llb9+aJ/jrYjT13y9s52XGZHuy5X87UC9vn
9GDP5cln1evX68Weu/eOUJjG017suaI/NASF+3ux54bHnvuupUDDnmsf0ftt
5z4a9tx9aQaMnMs07LmCJhZH3aJo2HOvWac9DXpHw5479k21go1Cw55bWrch
aPwnDXtuvUXSV5UWGvbcfdYsK+N6adhzI2tdWF78oWHPPeqizKkJ7yPy3Oqo
n0874ecf5Lkx+6vCz8D7iP++4cfyisPwPiLPXdOcrH0f3kfkucW7X4ibw/uI
PLfWVLafCu8j8lwx9+0+rXDfkOe2DRrIfoX7hjzXMuge2RfuG/JcERaLTjK8
b8hzeUX6l6/CGXmukOFbt2o4I8/1bvQSEYH7iDxXev2AhAWckefOB5tJe8NZ
dZMTvc2PG1zvnbhzXLGJCHTXWKo/ywsi9nfwkwtaCa7jaWE7NggA0u/UFW6l
XYQ8n5oNi48QiKmX7yi+1EPULp8IE74kDG7eDWIWLPQQzxJ25kxbiwJXB+GK
luJe7MUv7XNig57TsBdvm/ubTcuiYS8ObapMzIbv18iLXcNe7zkIXx/kxcKD
Zu228PVBXqwq+fV5OXx9kBdv5jkUcgr+PsiL856c67v73338vxeHfd/XEwln
5MU7DDYF74tko4ac/jlYeZ1BbO3Kv7txtoei49ifuvLQErFdWCB308d6yvTH
AxpTDBbwZ8nW4mxgMYVnZZmwySgJ5AwP3a1TiiW0XhmxtVLYgepNtd/STSUE
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
9jPaeYNmCupnPvIFTs8F/8L9zMzad0aFw+W4n3EyXq+c8j0f9zN2IbItx4NS
KaifAeL2UzeuRlNQP7PwZI3lkKcv7meapuzVzmUk4H7m3Gkrx2flb3E/Y3BY
dtFhTRruZ+quVf+ZHk/H/czyVHtcPl8W7mf+fvp9OKYmG/czLrbTljqKOf/6
mX728Q6Qi/uZ7WwveIRX5+F+5mXN1AXRwjzczxw58+YO3Tgf9zN6u6jHjrzL
x/0Mc805oyBmPu5nMuWOifMQBbifmXVhnChyK8D9TOiOn+tCnhXgfkYrMNfP
rLAA9zM21NmRkYYC3M+s79s29naoAPczTQHCT/gYBf/6mdJdGQbkQtzPNJSk
vrglWIj7mXS2xLdbVxXifobxtskmH36+RP1MY/ro81D4+RL1M66bqpSOwucN
6mc0rj6ciYDPG9TPaI2aH2HCfUX9jEkE8zw7fN6gfuZwZ7JBJHzeoH7m+ZqU
HRS4v6ifcV/d8CEfPm9QP9NQpMnuDZ83qJ/ZcbxqNy/cb9TPEDF/9wXDGfUz
nA2tLwbg3BkdTfXsHiI+HY2sXawfpvjG7Zzy1aUTzDU6BXfX9FE4W/1EHCen
iSZR8ecOX9opq7x2pJDL54hffpQ9maL1lJKvLANHkxcIJllG+wfvD8rYro5T
CRosQCMmKXL4QzFlW9viiouiJMBn8CvRpiKTEqpAWeadZgNrYl8Lrwp8RVmo
4o72LOYAiakVAZ9LrlCi3vxJoLziBFOV6g+sg6Nwf0TidLv+JjgR90fn9Eq+
6Ra9x/1R5eG2kJ28mbg/kh1INuYK+Iz7o87bn3k/5+fg/qhGNDfn3KU83B9x
pVx3jbYrwP3RusOOtjeDC3B/tHd6pPG+aCHuj87fYVvfAD8vof4orS3+siB8
3qD+6PeJIj0teF6oP+oUF7iVC19v1B+9L1BbEPrvefP//ujk7qI0JTij/mhC
vcI74NsSRdH/qRq5aYDg+C4ltPbcBMW5MpxtbsUYUV2qcLD5f13ceTiVeR/H
cUtIejKoSCOtpoynSMqW+xRhJCGphMmU0lhKhZT1YFpEqGwRsp02x3LiOOfW
TyZLlGVCRyKKw6CQJaTMb67r+X3/eP78/Hvfv/t97vt6XdfZ14+sO12kdvd9
pmKNnUzDrLuR757sSdXoSUrhonaG9gsBIv5Uu6k4LHm0EfyJO69C43lgFfhT
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
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNzLcuAFAYhuFDlFXvi1nvTOoVWHSijiTKImFUL0K36mVVZvUK9M4FKPEM
T/L9b05Ods9Q42BkCCGCcXKiQhiODqGcb/uIGTrIJY98CiikiGJGvK/gxz5m
lk5KGNUr+bVPmKOLUsb0Kv7sU+aZjA1hgtQYf7DOF1XaobcN9jzXZGkDPOkp
7g7W+KRSP9Dr7TmuyNT6edST3e2s8kGFvq/X2bNckqH18aAnudtY4Z1yfU+v
tWe4IF3r5V5PdLeyzBtl+q5eY09zTprWw52e4G5hiVdK9R292p7ijFStm1s9
3t3MIi+U6Nv6FpvcEKc3scAzxd5s6P+CZT/t
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1WWUVVUYBuA71NAImCAxdIcIIiUhrajYTSigyICIgLSESXcbII0BFo3S
pYB0YwCiIF0GPt+PZ81+333Xmu+ec+4+Ka06Nk9Nk0gkkjhg0Ts5kTiRPpFo
628+dmRIJAZTn0X6aroz1jN5nlv5Xd9On5+d8hAasFhfXXfWehYtuI2T+pf0
BdglD6UhS/Q1dOesZ9OSPPyhf1lfkN3yMBqxVF9Td956Dq3Iy5/69voU9sjD
acwyfS3dBeu5tOZ2Tulf0RdirzyCJizX36O7aD2PF8jHaf0Katu7JM/nRfLz
l76DvjD75JE0ZaW+ju6y9ae0oQBn9N9R194V+TPaUpCz+lR9EfbLo7iP7/X1
dFetP6cdKZzTd9QX5YA8mvtZpb9Xd836C16iEOf1q6lv7295AS9TmAv6Tvpi
HJTH0Iw1+ga6f6wX0p4iXNSvpaG9f+UveYWiXNKvo5G9/+Sv6EAxLuvX09je
dflrUinOFf0GmthL8I2uIyW4qn9VV5xD8lgeYKO+qS6Jb+VOlOSavrOuBIfl
cTzIJv19ujQskl+lFH/rN3O/Pi2LdZ0pzT/6LTTTp2OJ7jXK8K/+Bx7Qp2ep
rgtl+U//Iw/qM7BM9zrluK7fykP6ZJbrulKeBNvsNddnZIXcjQokxf/WleSI
9XgeYrvPP6zLxEq5OxVJw0/2HtFn5jv5De4gLTvsParPwvdyDyqRjp32HtNn
ZZXckztJzy57j+uzsVruRWUyxPfXleKo9QSas9vnn9BlZ43cmyokxzXRleZn
64k8zB6ff1KXg7VyH+4iI3vtPaW/gXVyX6qSKa6hrgy/WE/iEfb5/NO6nKyX
+3E3mdlv7xl9LjbIb1KNLByw96w+Nxvl/lQnKwftPae/kU3yAGqQjUP2ntff
xGZ5IDXJHvdRV5ZfrSfzKId9voXuZrbIg6hFjriPunL8Zj2Fx+L+yeU5Zj01
7pl1BY7HPfK3Ir3i+Yjvls75E78d5lM5fufM45q9O+MMYS4r5atUinOIObwt
L+APisacTI7rKa/gCnfEGchs3pK/4CRF4jowKe6XPIjP+Z3Ccf2YGPdZHshn
nKBQXHcmxDMjD4jvwHFS4jsxPp4/uT/zOUbBmItx8dzKy7lMxTjvmcWb8jx+
o0DMxdj4Dcj9mMuv5I+5GBO/HXkZl6gQ7xpm0leewy/ki1kZHb9DeSkXKR/v
MmbQR57Nz9we8zMqfudyb2ZxlLwxPyPjfJB7MZMj5IlZGRHnityTGRzmtpiV
4XEeyT34hEPcGnMxLM4xeQkXKBfvZj7hDXk6B7kl5mJonIlyd6ZxgJtjLobE
WSp342P2c1PMxeA4l+WufMQ+boy5eD/OePl1PmQvuWMu3ot3g9yFD9hDrpiB
d+OdIr/GVHaTM2bgnXgXyYs5T1m5HdPjPSBPYRc3xFzxXNNAXsQ5yshtmRa/
FXkyO8kRs8ZzTX25E5PYQfaYlUHcK3dkIj+RLWZlIPXkVCawnawxKwOoK3dg
PNvIEnPRnzryt5yltNyGj+NZlsexlcwxVzzX1JbbM5YfyRRz0Y975G84Qyn5
RT6KZ1Meww9kjFnjuaaW/DV/UVJ+gQ/jWZFHs4XkmD+ea2rK7RjFZjLE/PSm
hvwVpykht+aDuN7ySDaRPuanF9XlNoxgI+lifnpSTf6SUxSXWzE1vo88nA2k
jfnpwd3yQv6kmNySKfF95GGsJ03MH88/VeXWDGUdSTE/3blLbsUQ1pKIWelG
Fbklg1nDdarpu1LZugV9nMn/A+W4cfY=
            "]]}]}, {}, {}}, {{}, {}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 184, 155, 127, 100, 74, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 185, 156, 128, 101, 75, 52, 29, 186, 157, 129, 102, 76, 53, 
           30, 187, 158, 130, 103, 77, 54, 31, 188, 159, 131, 104, 78, 55, 32,
            189, 160, 132, 105, 79, 56, 33, 190, 161, 133, 106, 80, 57, 34, 
           191, 162, 134, 107, 81, 58, 35, 192, 163, 135, 108, 82, 59, 36, 
           193, 164, 136, 109, 83, 60, 37, 194, 165, 137, 110, 84, 61, 38, 
           195, 166, 138, 111, 85, 62, 39, 196, 167, 139, 112, 86, 63, 40, 
           197, 168, 140, 113, 87, 64, 41, 198, 169, 141, 114, 88, 65, 207, 
           178, 150, 123, 97, 42, 199, 170, 142, 115, 89, 66, 43, 200, 171, 
           143, 116, 90, 67, 44, 201, 172, 144, 117, 91, 68, 45, 202, 173, 
           145, 118, 92, 69, 46, 203, 174, 146, 119, 93, 70, 47, 204, 175, 
           147, 120, 94, 71, 48, 205, 176, 148, 121, 95, 72, 208, 179, 151, 
           124, 98, 49, 206, 177, 149, 122, 96, 73, 209, 180, 152, 125, 99, 
           210, 181, 153, 126, 211, 182, 154, 212, 183, 213, 50}]}, 
         Annotation[#, "Charting`Private`Tag$188050#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl0UOQWEEARdGZ2LYntm2bEzuZ2LZt27ZtW9vYtu2TyuLUrV+vqxe/g0K6
BHcODAgI+Mpl1vsYQytKk5oIXLFd5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZ
z3nBSza4eyytKUMaIvLKtlHH0YaypCUSr22bdDxtKUc6IvPGtlkn0I7ypCcK
b21bdCLtqUAGovLOtlUn0YGKZCQa723bdDIdqUQmovPBtl2n0InKZCYGH207
dCr/fnIVshCTT7adOo0uVCUrsfhs26XT6Uo1shGbL7bdOoNuVCc7cQL/v+Ee
nUl3apCDuHyz7dVZ9CCYnMTju22fzqYnNclFfH7Y9uscelGL3CTgp+2AzqU3
tclDQn7ZDuo8+lCHvCTiNCsYRjOK89v5QzqfvtQlH4k5w0qG05wS/HH+sC6g
H/XITxICOMJC+lOfAiQlkKMsYgANKEgyQnGMxQykIYVITmiOs4RBNKIwKQjD
CZYymMYUIYiwnGQZQ2hCUVJyllWMIISShOMUyxlKU4qRinOsZiQtKMV51jCK
llxgLaO5yDouEZ6/0YZ8bg==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$188050#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV01WYlWUYhtFNd5co3SUYINLd3d1KN4i00t3djdKd0iEoSEkPM0MrICGg
tLL+g7Xvg2df/9H3ZmzdrXbXKKFQKIWfU+yOGgpNpRPlyECI07YznOUcv3Oe
C1zkEpe5wlXCuEY4EURynZ98axqdKU9GonDDtken04UKZCIqN217dQZdqUhm
onHLtk9n0o1KZCE6t237dRbdqUxWYnDHdkBn04MqZCMmd20HdQ49qUp2YvGH
7ZDOpRfVyEFs/rQd1nn0pjo5icM92xGdzzfUIBdxucpmxvE1Jbnv/0d1AX2o
SW7i8cD2sy7kW2qRh/j8ZTumi+hLbT4mAQ9tx3Ux/ahDXhLyyPaLLqE/dclH
Ih7bftWlDKAen5CYJ7YTuoyB1OdTkvC37aQuZxAN+IykPLX9pisYTEM+JxnP
greoK/mORuQnOc9tp/UHvqcxBUjBP8Eb1R8ZQhO+ICVhbGE8bSnFv8F71lUM
pSkFScU1tjKBdpTmRfD2dTXDaMaXfMDL4CZ0DcNpTiFS8yq4FV3LCFpQmA95
HdyQrmMkLSnCR7wJbkvXM4pWFCUNb4Ob0w2MpjXFSMu74BZ1I2NoQ3HSEc42
JtKeMvwX3K1uYixfUYL0RLCdSXSgLJHsYDIduc5OpnCDXdzkf999D0z0lPo=

           "]]}, Annotation[#, "Charting`Private`Tag$188050#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0neczgUcB/DfbXcppdvn5Koz2golaUh1iESSJpdKqruGhgpNhHZWhUqk
Mkt7kLS3dlrccdvtfZz374/38/k+38/veb2e1/d5snLzR+VFBEGQ46UgMgia
o4LgSxZxPQNIolC3i90UUUwJpZRRTgV7qKTFZ75iMZM5jWSqdK3ya57lBgaS
QrWuTX7Dc9zI6aRSo9srv+V5buIM0qjV7ZPfsYQ8ziSdOl27/J6l5HMWGdTr
gugg+MG8jJsZRBcadBG6H80vcAtnk0mjLlL3k/lFbmUwXWnSRem2mV/iNs7h
MJp10bqfzcuZwrl0o0UXo/vF/DK3cx5ZtOpidb+aV3AHORxOmy5O95t5JXcy
hCPYq+ug+938CncxlCPD72O/R37M40xgn+fj7f8wr2Iqw8gOv6N9pdzEE+TS
7vkE+z/Nr3I359OdgAN0f8nXuIfh9CCCjrrt8nXuZQQ9ieRA3d9yNdO4gF5E
cZDuH7mG6YzkKKLppPtXrmUGF3I0MRys+0+u4z5GcUx4X/squZknuZpYDrH/
X67nfkZzLHF01u2QG3iAiziODhyq2ynf4EHGcDzxJOoK5Js8xMWcQAJJukK5
kYcZS+/wN7avlp/wFBPDu5Jsv0u+xUwu4cTwd7evkVt4mmvCW5Niv1u+zSzG
cVJ4a1J1RfIdZnMpfcL/iX2t/JRnuDa8P2n2xfJdHuEy+ob3J11XIt9jDpfT
L7w/GbpS+T5zuYKTw1vTRVcmP2AeV3JKeGsydeXyQx7lKvqTbV8ntzKf68L7
09W+Qn7EY4znVLrb18vPWMAketg1yM9ZSE/vG+UX9DI3hf8vmSj3Ay1NpDc=

           "]]}, Annotation[#, "Charting`Private`Tag$188050#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03e8jgUYx+HHnlkhSmZR9t5773Fsso69ziGjlKLMoiikbbULRWkZRbuM
pqJSRtlFqNC47j8u5/ne53zwvuf3lkpNT0nLkCTJHH9UyJwkN2dJktpc8vwu
8xlARSpRmSpUpRrVmeTn63DZ83buYSA1mOxel3887+BeBlGTKe71+Nfzeyzg
zmxJMtjXWkz1vfr85/l9FjKE2tzi3oCED/R9pFKHW90akoEP9f0MpS7T3BqR
kY/0IobxhB5CWU7qjdTjNt2YTHysFzOcJ3Uq5TilX6U+t+smZOYT/QAjaMB0
t6Zk4VP9ICNZoYdyA6f1azTkDt2MrHymlzCKRvE+uTUnGzv1UkazUg/jRn7T
m2jMDN2C7OzSyxjDKj2c8vyuX6cJM3VLcrBbP8RYmnKXWytyskcvZxyr9Qgq
cEa/QTPu1q3Jxef6YcbTnFlubcjNF/oR0mjBbLe2XMGX+lHSackct3bk4Sv9
GBNoxVy39uTla/04E1mjR1KRs/pNWjNPdyAf38QW4nPAU3oUlfhDv0Wb+Ezo
juRnb2whPgO0je27daIA38bvNj4DtIvtu3XmSr6L31V8Bmgf23frQkH2xe8l
9k+H2L1bVwqxP97n2D8dY/du3SjM9/EaY/90it27pXAVP8Trif3ztB5NZc7p
t+kcnwXdnSL8GD8X+6dL7N6tB0U5oJ+JrdM1Nu7Wk6v5ST8bW6dbbNytF9fw
s34udk1K7NmtN8U4qJ+PXcffrcdQhfN6M91j47oP13JIvxC7jn9Pj6UqF/QW
esTGdV+Kc1i/GLumZ+zZrR8lOKJfil3H/0+Poxp/6q30io3r/pTkF702dk3v
2LPbTZTiV70udk2f2LPbAEpzVK+PXdM39uw2kDIc0y/HrukXe3YbxHUc16/E
ruM90uOpzl96G/1j43ow13NCb4hdx3uk06jB3/qdeB88p1OTi/HafZ1ALdYy
kXXxmnzvf2wvwPA=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$188050#5"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03OYVgkUwOE71cxk25Nt2+Zk12TNVLubtrY1wpq1tsMi25xsbN5s871/
vM05v3OfevrufDFxCbHxEUEQJPpjdmQQVIgOgv+jguArupCe4/oc5jKPip45
p39NVzJwQu+nZ2Ob/XXq8pdeSTtv/oZuZOSkHqdnJ9H+BvX4W6+sXTB/S3cy
cUrvr+dgu/1N6vOPXkW7aP6OHmTmtD5Az8kO+1s04F+9qnbJ/D09ycIZfaCe
i532qTRkvl5Nu2z+gV5k5aw+SM/NLvs0GrFAr65dMf9Ib7IxOfxc3Qb7mYfd
2nQas1CvoV01/0QfsnNOH6LnZY99Bk1YpNfUrpl/pi85OK8P1fOx1/42TVms
19Kum3+hHzm5oA/T87PP/g7NWKLX1m6YfyWOXFzUh+sx7Le/S3OW6nW0m+bf
6E9uLukj9AIcsL9HC5bpdbVb5t8ZQB4u68up53bb/gcDycsVfaRekIP292nJ
Cr2+dsf8J4PIx1V9JQ3c7tpnM5j8XNPj9UIcsn9AK1bpDbV75jkMIYbreoJe
mMP2D2nNar2Rdt88l6EU4Ia+hsZuD+zzGEZBbuqj9CIcsX9EG9bqTbSH4XeG
4RTilr6Opm6Pwu8HIyjMbX09zdweh98FRlKEO/oGmrs9CX/viacod/WNtHAL
mK8lUIx7+mitKEftH9OWTXpLLYIF9lEU574+RivGMfsntGOz3kpLwkL7aErw
QN9Caz0pi7QxlOShvpU2ejIWa89Qikf6NtrqkSzRnqU0j/VE2ulRLNWeowxP
9O2016NZpo2lLAE73GL15Cy3j6McEeG/rRXnP/OntGen5ztoKVhhH095krDL
raOekpX2CVQgKbvdOumpWGWfSEWSscets56a1fbnqUQke9266GlYY59EZaLC
/79WguPmz4hln+e7amlZa59MFaLDz0QryQnzTDqw3/PdtHSss79AVZJzwK27
np719ilUI0X4GWqlOGmeRUcOer6HloEN9hepTkoOufXUM7LR/hI1SMVht156
JjbZX6YmqTni1lvPzGb7K9QiDUfd+uhZ2GJ/ldqkDd+jVppT5s/pxDHP99Wy
stX+GnVIF75HrQynzV/QOXx/9rKcMX8ZvjNzOc6G78jP8kwKfz/8vU8BeOzv
1Q==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$188050#6"]& ]}}], {}, {}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0, -4.719888904437129}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True, "ClippingRange" -> {{{2.3495766255041283`*^-7, 
        11.512925230012566`}, {-4.719888904437129, 2.8753533734830783`}}, {{
        2.3495766255041283`*^-7, 11.512925230012566`}, {-4.719888904437129, 
        2.8753533734830783`}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\)\"", TraditionalForm], 
        FormBox[
         StyleBox[
         "\"Liemohn and Khazanov Maxwellian density factor\"", 24, 
          StripOnInput -> False], TraditionalForm]}}, 
     FrameStyle -> (FontSize -> 20), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, PlotRange -> NCache[{{0, 
         Log[100000]}, {-4.719888904437129, 2.8753533734830783`}}, {{
        0, 11.512925464970229`}, {-4.719888904437129, 2.8753533734830783`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"1000\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 1000], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"300\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 300], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 100], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 30], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 10], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 3], 
         Editable -> False], 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7282917844447603`*^9, 3.728291811639559*^9}, 
   3.728302908595462*^9, 
   3.7283030773933773`*^9},ExpressionUUID->"5eea76bc-901a-460f-8989-\
6c8d64ac819f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{"plotLKKappaphiBarFuncs1", ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", "1", ",", "100000"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`\>\"", ",", 
            "#"}], "]"}], ",", "20"}], "]"}], ")"}], "&"}], "/@", "phiBars"}],
      ")"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fillTwixt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"fillTwixt", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(R\), \(B\)]\)\>\"", ",", 
      "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<Liemohn and Khazanov \[Kappa] = `1` density factor\>\"", ",", 
          RowBox[{"kappas", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "24"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282902912438383`*^9, 3.728290330184914*^9}, {
   3.728290374260867*^9, 3.728290411438712*^9}, {3.728290526276231*^9, 
   3.728290526892087*^9}, {3.72829056940798*^9, 3.728290696856254*^9}, {
   3.72829073067703*^9, 3.7282908804074574`*^9}, {3.728290956417171*^9, 
   3.728290956800665*^9}, {3.728290988445094*^9, 3.728291000510913*^9}, {
   3.72829103766509*^9, 3.728291107010591*^9}, {3.728291709172166*^9, 
   3.728291709512364*^9}, {3.728291740356946*^9, 3.7282918066719837`*^9}, {
   3.728302924080749*^9, 3.728302973850775*^9}, 
   3.72830309168649*^9},ExpressionUUID->"bdbd6fd0-e01d-4c86-bd26-\
68fdb7d1d988"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
vsoqM+iQT8f9/YAv5cyFz3Tc3+2dnboeX+m4v6e/xXEzUui4v31EBOlLJXTc
3+WbKoy9yui4v2OrPlp9+EbH/b3lnspg4nc67u+p1Dc0h3I67u8pGv/MPFyj
/r4X/NvUvYKO+3s0xepsM1yj/h6mOt5L92KjGJ05dP+tGz8wi/nELV78m9hK
dnMcOCoATkVU7m758pe4oL384aG1IDj0W4zhh9EE8eXUU6eYfULgp6reUYY3
k8QJp4BhPkNh4PVzSLDyxhSBer7iaSIxrTyNez7I1/p2TdY07vkTynZ2c+Iz
uOeb/X3fSF6awT2/b3a1cqZgBvf8u8mLf/MmZ3DP77agVrLK0XHPT7Dn7Vba
Rcc9v2s7/11dJzru+UhXjbUIbzrueaZG/ecv/Om451tDQ2Tiwum457s/Pj9Z
kUDHPZ9HStPOTKfjnr+3rV2tOIuOe94ruzZGKo+Oe/79L1GLe5/ouOfFXp+S
In2h454PvNHVVlNMxz2/62VYJQ+cB9TzC6LfUkpK6bjn396xjJCG84B6/tGD
UjttOA+o54M7jj5lhPuPet4ryI94B9eo57efujOhD/cf9fzGzh6JVLhGPd/W
sV57isZGYbOtCt2nyQ8s7YoKRHpphIfKn1OvFQWA8uw21SD+v8TLp3prHvyC
oGieXkZOGid6z/IWp3MJgQdpiiLJFyaJ0Q4+471rQkCU0mRmbjFFIB+w/yok
qbA8hX1AeXtD5tYn09gHuD3z8igMM9gHNknsqWA9OoN9QP6ws5NZxgz2AZ5O
JUnNgRnsAxZ15TxhwnTsA0acFwZPGtGxD4wWSHnct6djH2DcHP0pzZOOfeBP
UQn561069oH1Kikv9zyhYx/4N2PDvj+Ojn3gi9yTc6FpdOwDESzGNza+o2Mf
0FIZ/DeQS8c+ECS0bfVKAR37wIZ5kv/2Ijr2gbet4y6KcB6QD7SU+l0Lgp8X
yAfMAmwjTsB5QD5whCuVpRp+XiAfWPd4LXYGzgfyAaLRQPwHnA/kA5G/bjk+
gPOAfGDme0ujGNx/5AOnI6XCAuEa+cAjNvW6r3BekQ/Uc7npupHp//MBr7zT
B+DPIx+Y8Qhk/grXyAdeUZy/MyuzU8Zr7keI8/KDDVWS0obuNOLRrw1ng1kE
wDpmTWOPgj/EttIG5YFJAfBvpMo3x2ac8PpTO5b1VxAs3vC7/Mlikngfe/DS
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
XZJB3x/yTOrdG+cVZoijr1Ms/b4PkkUluNVk6uaI0hpWH9KJbrJR0ARz6udF
wvSmW5ju+2bybZGV2u9hq4SG7w7ViG3VZAnO+3GGkoygSSRWsO7sV/Kyrse9
a5wkYLziHR6VlkLe4Flz9nonM9iw3uXq2I5wAvms7oFWlj+Xs7HPzjq1vgqz
+ox9VpaT4m7QTcE++2c1tteF9A37bGQZPWCLezn22Ss7xeKHd1Rin+Xac+vK
7Yoq7LP7321UeTlejX1WuPKZd/VIzf/+ecDMb0Ghr2qxz8ouT1LEN9dhn2Uo
eefcmVWHffYzOTjhFns99lkDsxUvD+t67LNmc46+24Lqsc/28dwp2fipHvts
ci/9hUp3PfbZK3QvqS1L9dhnU0XvXxYToGKfreBU6LurRMU+m/SpoF1zExX7
rKbzTSfGbVTss+nDrteV9lCxz54aexPGCM8f8tlqY5/7FfA+hXzWKr6wkw+e
P+SzfIYfpS/D84d8duexDxRLeP6Qz8qvi830gucP+Sz3b8XZnfD8IZ/lvBL9
NBWeP+SzCtMCDu/hfCKf9Q7gbAmD5w/5bEVq5MHN8Lwhn/2Y3Wr4Ga6Rz4bz
nDyyHs4z9llXL8NbcP3AS2u1+QwXODmtvE75cSmhyK1hz3BDANzw0OZePlFN
/FhzDhX0FARnDAN/y12uIV5EStmnMcAetfmWU5Zcj3132Uhuk3NtPfZd05cP
Q4pMqdh3H2ccl3GH5w/5bvzuDO5z8PxJxRxhmWRWBovWsuu14d8P+a42XZea
8p/z91/fLfPhP/0RrpHvHjco/8o5vka+UPuEtMAzTqQ2OdC3O/8l23SfYDMf
mSbkj5/bv1ttiHzVMm1OLnSOqN6cvuMcXw858FQdrdZ3kYgsumhz1KCFrOc6
9E7UbpVg6Bg9w8ZRQ6a/P6g1s8gAbgqfcG2oKyZzin4T3DvGBBa2VR56n5dG
1k4xJrWTmUFn47FJW9ITAvmymdLU+OLt99iXV64evaNTXYh9WbNe6sxiKgX7
8mcr0X8HfpZhX079d/Vdg0U59uWJj7fl2xQrsS8X0O9rjuVWYV9e630dM9hZ
jX3Z1u5Vx4b2GuzLSRxJumFxtdiXlcJv/riiWYd9uUdv2i4wow77su77lOYQ
Uj32ZfKb/cfWmddjXzYPOH1JMqAe+/L03TkO34/12JeFPp3bLthZj335usSE
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
2f94aJ9Kg45qBQl8YmxivaQfTP7/6/8DnwXKtA==
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNzEs2AmAYx+FXyH0DEdoDuS2gWQMTxsYql9NWIhEDKbIQCyiXXKMMrcEz
eM75n/f3nS+zV9ouJiJihDyV0YjrsYgyOVL8uT1wwilVzqhxzgV1LrliNxmx
w9x4xBbH3PNLxv3Dn7P2Jke0GbKsvWsz9gaH3DFgSXvTpu11Drjlh0XtVZuy
1yjR4pu01tMm7SxFmvRZ0F60CXuVAjd8Ma89a0880iXpvsI+DT5JedfR/gFX
jyoO
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1GWcVWUQB+C7dEmnKN0dtnSJNCihlKCUhYEi3aBgI42SdlCCtCLdIQYo
KigN0l0+8+H5nZn/nJ139+65p2Dnni2eT5ZIJJLorWidKpH4K0UiUcj1cMpE
4mt6UYWM/G1W2OyI+hteoSqZ2G9WxOyoeg6vUo3MHDAranZMPZfeVCcL9eW3
8ZN6Mp35x/3FZMfV83iNGmTlX7PiZifU8+lDTbJx0KyE2Un1AvpSi+wcMitp
9p/6W/pRmxw8LM/IbvUUnuSw+0vJTqkX0p865KSBPBM/q6fyFEfcX1p2Wr2I
AdQlF0fNypidUX/HQOqRm2NmZc3OqhcziIfIw3Gzcmbn1EsYHJ8Xt3PCrLzZ
efVShsTfQV5OmlUwu6BextD4nbmD/8wqml1UL2cYDbkzrvLM/KL+kC6ccn8l
2SX1CobTiHxxlWfhV/VHdOW0+yvLLqtXMoLG5OeM2V1mV9TfM5ImFOCs2d1m
V9U/MIqmFOSc2T1m19SreJ1mFOK82b1m19U/8gbNKcwFs/vMbqhXM5oWFOGi
2f1mN9VrGMMjFI3fV56V39TT6MYl9z8gu6Vey5s8SjEumz1olmCd/i1aUpwr
ZlXkSazXv00rSnDVrKo8GRv079CaklwzqyZPzkb9u7ShVHxmsmzsUU+nO9fd
X12Wgk3693iM0vE5yrKzVz2DHtxwfw1ZSjbr3+dxynDTrKY8FVv0Y2lL2fjc
ZTn4XT2Tp7nl/lqy1GzVf0A7ypGgtjwN29TjaE95kqgjT8t29Xg6UIFk1JWn
Y4d6Ah2pSHLqydOzUz2RJ6hECh6SZ2CXehKdqBzPhSwnf6hn8Uw8D/pc7FPP
jmdAnZuW/Bn/Y9c8tIrPSr8+uXeVv3cWu+jFTHZSj5eZwQ7yUJeXmM52Tvr5
bPG/4lkms5F18tyudXiRaWzjhDxrPAs8wyQ2sFZ+nCzxDPE0E1nPGvkxMsez
Rw8mxBmslh8lUzyzdGd87ONH+REyxrNON8bFPlbJD3NbfG/oygexjx/kh8gQ
3ze6MDb28b08l2ttXuAjtnJQnj6+uzzF+3EGK+U543miJx+yhX/l6eI9wJO8
F+eyQv4PaeP9QWfejXNZLj9Amnjv0Il34gyWyfeTOt5XPMHbsY+l8r9JFe8+
OvJW7GOJPEd8P3ieqWzmL3nKeLfSgTfjDBbL/ySFugLtGRNn8J18H8nV5WnH
6DiDRfI/SKYuR1veiH0slP9Okrosj/N67ONb+V4S6jI8xqjYxwL5Hm5RWt+G
kbGP+bLsrjV4jils4jf5TUqpWzMizmCe7FduUFLfiuFxBnNlv3CdEvqWDIsz
mCP7mWsU1z/K0NjHN7LdXKWY/hGGxD6+ju8dVyiqb8Hg2MdXsl1cpoi+OYNi
H1/KdnKJwvpmDIx9fCHbwUUK6ZsyIPbxuWw7Fyiob0L/2Mdnsm2cp4C+Mf1i
H5/KtnKO/PpG9I19fCLbwlny6RvSJ/bxsWwzZ7hT34DXYh+zZZs4zR36h+kd
+5gl28gp8urr82rsY6ZsBm28u/4H4lxJaA==
            "]]}]}, {}, {}}, {{}, {}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 155, 132, 110, 89, 69, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 156, 133, 111, 90, 70, 52, 34, 157, 134, 
           112, 91, 71, 53, 35, 158, 135, 113, 92, 72, 54, 36, 159, 136, 114, 
           93, 73, 55, 37, 160, 137, 115, 94, 74, 56, 38, 161, 138, 116, 95, 
           75, 57, 39, 162, 139, 117, 96, 76, 58, 40, 163, 140, 118, 97, 77, 
           59, 41, 164, 141, 119, 98, 78, 60, 42, 165, 142, 120, 99, 79, 61, 
           43, 166, 143, 121, 100, 80, 62, 44, 167, 144, 122, 101, 81, 63, 45,
            168, 145, 123, 102, 82, 64, 46, 169, 146, 124, 103, 83, 65, 47, 
           170, 147, 125, 104, 84, 66, 48, 171, 148, 126, 105, 85, 67, 173, 
           150, 128, 107, 87, 49, 172, 149, 127, 106, 86, 68, 174, 151, 129, 
           108, 88, 175, 152, 130, 109, 176, 153, 131, 177, 154, 178, 50}]}, 
         Annotation[#, "Charting`Private`Tag$189142#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt0GVTVQEYhdELKhaC2C1gK3aiIpIGJgZ2YCdiYrf+IMXAwO7ubkWxsLDR
xQwf1rz7PDN37pwTlZmVvjgoEAjcZBfzPQylM3X4o71kN7nsYS/72E8eBzjI
IQ6TzxGOcozjnOAkpzjNGc5yjvNc4CKXWOB/h9GFuvzVXnGZhZ6H05V6lGgF
XGGR5xF0oz7/tNdcpfQlR9KdBqUvzBvnGll2Oj1oSBCF+nWW2KPoSSOCeavf
INseTS8aU453Zd9yqT2GWJpQnvf6LZbZY+lNUyrwQb/NcjuDPkQSwkf9Divs
cfQliooU6XdZaY8njmgq8Um/xyp7Av1oRmU+6/fJsScST3Oq8EXf7M5kIO2p
yQN9tTuJ/rSgKl/1h6yxJ5NAS0L5pj9irT2FRFpRjWL9MevsqSTRmjC+609Y
b08jmTaE80N/ygZ7Oim0pTo/9WdstDNJpR0R/NK3uLMYRAdq8Vzf5M5gADHU
4Le+1Z3NYDpSm23MIY1ObGcuQ9jBPHbywu//A645aDI=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$189142#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzVOQXVEURdEX23Y6tm2bHdtOumPjN7Zt27Zt27Y9PkadvWbdqhvUOjQ4
JEwgEPjOcEfTsIFAYRLx1b7KTkYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc2nmP0VIzDf7GruYR3OtKEn4bl9nN/NpoRUjKT/sG+xhAS214iTjp32T
vSyklVaC5Pyyb7GPRbTWSpKC3/Zt9rOYNlopUvLHvsMBltBWK00q/tp3OchS
2mllSM0/+x6HWEZ7rSxBBLivHWY5HexypCEMD7QjrKCjXZ60hOWhdpSVdLIr
kI5wPNKOsYrOdkXSE57H2nFW08WuRAYi8EQ7wRq62pXJSESeaidZSze7CpmI
xDPtFOsIsauSmcg8107T312PvMTlo7aeUHc1shCFF9oZBrjrk494fNI20N1d
naxE5aV2lo30sGuQjWi80s6xiZ52TbITndfaeTbTy65FDmLwRrvAFnrbtclJ
TN5qF9lKHzuYXMTinXaJbfS165Cb2LzXLjPQ3YD8xOeztp1+7rrkIQ4ftCsM
cjekAAn4og32NqIgCRlCYwoxlCYMY4dv/wPVln+I
           "]]}, 
         Annotation[#, "Charting`Private`Tag$189142#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03e8DWQAx+FzXXvvva69Q1aSvbcbslJZlXEvDRnFNcrerk3ZsrNXRIWy
KrJpoF0ku8Lz/vGc8/6+n/M5f71vTLf42LioSCSS3UdCkkikX3Qk0oD83LNP
sokRjGQUo3mX9xjDWMYxnglMZBKTmcJUphHnPxtSgPv2KTYznXitEQV5YH/L
FmbQX2tMDP/ap9nKTAZoTSjEf/YZtpHIa1pTCvO/fZbtzOJ1rRlFeGifYwez
eUNrTlEe2efZyRze1FpQjAgXtF3MZaDdkuJEcVHbzTzesltRgiRc0vYwn0F2
a0oSzWXtYxYw2G5DKZLynbaXhQyxYylNMr7X9rGIofazlCE5P2if8D5v220p
Swp+1PbzAe/Y7ShHSq5oB1jMMLs9T5CKq9qnLGG4/RzlSc017TOWkmB3oAJp
+En7nGXhXtkdqUhaftYOsjzcN7sTT5KOX7RDrAj30O5MJdLzq3aYleF+2l2o
TAZ+074I99G5F7XIxS1tVbjLzs9ThYz8rn0Z7q7zy9QmN7e1D8O9d+5KVTLx
h3aE1eE92C9Qjcz8qR1lTXgn9os8RRb+0o6xNrwf+yWqk5Xr2nHWhXdld+Np
snFDO8H68N7s7tQgO39rX7EhvEO7B8+Qg5va1+E9Or9CHfJwR9sY3qxzT2qS
k3+0b8LbdX6VuuTlbnizvntTj3zMoA/1mUlfEvnIbx8DT4iP9A==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$189142#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hecz3UcB/AvLopCZbaRbFktKkqUEF3SEYpsRUmaMhpUVpFx7o67kwYp
V8ZlZVfWDbM9VYqGdqme7z+ev8/7/Xo8fq/PH7/v91ej34jU4SWSJGntY1ap
JFmYkiT3cS1ncFT2DrOZw1zSmUcGmWQxnwWklU6SbGcOL/j+aK7jTH6QvUsu
i+z304Gz+FH2XtzPi/YHuJ6z+Um2Pfp4yf4gHTmHn2U7oo+X7Q/RiXM5JtsZ
fbxif5jOnMcvsl3Rx2L7I9xADX6V7Y4+ltjH0IWa/CYriD5etT9KV2rxu6ww
+lhqH8uNnM8fsqLo4zX7OFKpzZ+y4ujjdft4buIC/pLtiT6W2SfQjTr8Ldsb
feTZH+Nm6vKPbF/08Yb9cbpTj+Oy/dHHm/YnuIX6/Cs7EL+FeR530YZK5MmX
O58kjQb8JzsYd7DCPpEeNCTh/biDleZJ9KQRJfgg+lhlfopbaUxJPow+8s1P
04sLKcVH0cdb5mfoTRNS+Dj6WG2eTB+acgKfxHPkzGA4V1GZfPka5xRuoxml
+TTuYK15KrfTnDJ8FnewzjyNvrTgRD6PPtabp9OPiziJL6KPt83PcgcXU5Yv
41l2ZjKCq6nCOvkG53P05xLK8VU8384s7qYtVVkv3+icwQAu5WQOxb1sMs9k
IJdxCl/HHWw2P88gWlKeb6KPLeZZDKYVFfg2+thqns0QLqcih6OPbeY5DOUK
TuW76Iv/FvNchnElp/F9vJvO+dzDNVRja/x/ONO5k9aczpF4X50LGEk7qlNA
NvfSnkJyGEURuRSzzff/B50Cshc=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$189142#5"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0lWAVVUABdA7MAzd3Qzd3d0gSIiEgIoC0ql0Ka2glEpIh0lLCwqYhHR3
d3fHuh9r7j57n4/37rzo1t0bdYsIgmCEP/sjgyBdVBCcihUE39OF4kRxwHaQ
QxwmvXun9T/QlRLE5ogtg+2M/CPdKEkcjtoy2s7KP9GdUsTlmC2T7Zz8Mz0o
TTyO2zLbzsu/0JMyxOeELYvtgryQjylLAk7aom0X5UV8QjkS0iz8nvasnpec
F9OL8iTitC2b7bK8hN5UIDFnbNltV+Sl9KEiSThry2G7Ki+jL5VISm19QvbJ
39Gac+7n1F2Tl9OPyiTjvC2X7br8K/2pQnIu2HLbbsgrGEBVUnDRlsd2U17J
QKqRkjf0idgvT6cNl9zPq7slr2IQ1UlFHX1iDsgzaMtl9/PpbsurGUwNUnPF
lt92R17DEGqShqu2Ara78lo+pRZpuWYraLsnr+Oz8H2Rjuu2Qrb78m8MDb8H
6blhK2x7IK9nWPiZycBNWxHbQ3kDw6lLxvCpT8JBeSYfccv9orpH8u+M4E0y
hU99Ug7Js2jHbfeL6R7LfzCSemTmjq247Ym8kVHUJwt3bSVsT+VNjKYB0dyz
lbQ9kzfzOQ3Jyn1bKdtz+U++4C2y8cBW2vZC/osxNCI7D21lbC/lvxnL2+QI
P68+GYfl2bTnkftlda/kf/iSxuTksa2cLeBf569oQi6e2MrrI/jPeRxNyc1T
WwV9DLY4j6cZeXhmq6iPyVbnCbxD3vCd6ZJzRJ5DB567X0kXyTbniTQnX/ge
dSk4Ks+lIy/cr6yLxXbnSbQgPy9tVfRR/O/8NS0pEL53XUqOyfPoxCv3q+pi
s8P5G96lIAHV9HHYKX/LexQigur6uOySJ/M+hYlBDX08dstTaEURYlJTH589
8lQ+oCiR1NInYK88jQ8pFv4udKk4Ls+nc/h7cE7NCXlB+BuQ09CEk+H/2DMt
TcN35fwarzDAjw==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$189142#6"]& ]}}], {}, {}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0, -4.780455880638662}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True, "ClippingRange" -> {{{2.3495766255041283`*^-7, 
        11.512925230012566`}, {-4.780455880638662, 3.028255223728333}}, {{
        2.3495766255041283`*^-7, 11.512925230012566`}, {-4.780455880638662, 
        3.028255223728333}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\)\"", TraditionalForm], 
        FormBox[
         StyleBox[
          InterpretationBox[
          "\"Liemohn and Khazanov \[Kappa] = \\!\\(\\*FormBox[\\\"3.55`\\\", \
TraditionalForm]\\) density factor\"", 
           StringForm[
           "Liemohn and Khazanov \[Kappa] = `1` density factor", 3.55], 
           Editable -> False], 24, StripOnInput -> False], TraditionalForm]}},
      FrameStyle -> (FontSize -> 20), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> 
       True}, PlotRange -> NCache[{{0, 
         Log[100000]}, {-4.780455880638662, 3.028255223728333}}, {{
        0, 11.512925464970229`}, {-4.780455880638662, 3.028255223728333}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"1000\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 1000], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"300\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 300], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 100], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 30], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 10], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 3], 
         Editable -> False], 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.728302959829711*^9, 3.728302976902367*^9}, 
   3.728303095024643*^9},ExpressionUUID->"8b79b480-79c7-457d-92aa-\
7d25a90e60a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A log-a-tized version of the Liemohn and Khazanov density factor\
\>", "Section",
 CellChangeTimes->{{3.728292627736665*^9, 
  3.728292652117406*^9}},ExpressionUUID->"e8f21a55-743e-4389-91b2-\
b7de61fdc9fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LKMwellDensFacLogParams", "[", 
   RowBox[{"log10phiBar_", ",", " ", "log10RB_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     SuperscriptBox["10", "log10phiBar"]], " ", 
    RowBox[{"Erfc", "[", 
     SqrtBox[
      SuperscriptBox["10", "log10phiBar"]], "]"}]}], "+", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["10", "log10RB"], "-", "1"}]], " ", 
     RowBox[{"DawsonF", "[", 
      SqrtBox[
       FractionBox[
        SuperscriptBox["10", "log10phiBar"], 
        RowBox[{
         SuperscriptBox["10", "log10RB"], "-", "1"}]]], "]"}]}], 
    SqrtBox["\[Pi]"]]}]}]], "Input",
 CellChangeTimes->{{3.7282919606385317`*^9, 3.728292010962837*^9}, {
  3.7282920413863*^9, 
  3.728292098833578*^9}},ExpressionUUID->"658ec97b-d92d-4fd4-aef8-\
52356f4e7ce2"],

Cell[CellGroupData[{

Cell["Now with plots!", "Subsection",
 CellChangeTimes->{{3.7282926606523657`*^9, 
  3.7282926630468817`*^9}},ExpressionUUID->"699acdc9-72f4-4382-a610-\
1198749f2427"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"LKMwellDensFacLogParams", "[", 
     RowBox[{"log10phiBar", ",", "log10RB"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"log10phiBar", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"log10RB", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728291901084506*^9, 3.728291930843758*^9}, {
  3.728292104085142*^9, 
  3.728292160585799*^9}},ExpressionUUID->"d3f5b92b-fa91-44ab-a17e-\
96c9d8149532"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
+qtfgL8W2um4getmfj/5z4adduwr4f4e7OJDS7PqH115vwV7GHc1vXZRCfe3
Ub5b0wz30lM6grd5QksLX12yb288gxy2PtMh+/g2K/xmcnil+Ngc7VSla1/I
zsMeXL/3sTaqRSqV2zvN6pWBRZ14vPcEm8rHWfR53IPSX07JTeKD7kvj1/0u
ps9NR15vTf7jryjXZoTt7lZJnxeMP6EiEskLdeNqY8Js6sT4HFmz/ISBhaLQ
Lv3uyNCTzWJ8bntrSDcLX2WhZZuUHT9Xy9Jnt6Wyd52SVYV1jYuv3FZXoM//
00lDeNqQ7Z57S4k+G/6jj5bQ1WaY3rzpqvR5onjEDadkbcHl7qGh2SXq9Nnt
9LnS5mYdIW+uq8JuXy36fKVcwcjXoIXwKLV/lG57Po8OXQNvmex/OuI+9VvQ
P2Rp2kLdZB36jPsS8+WDVnjpUj+F+8znDN06+U8/BY7yGVmzxnUOvkLj5HSf
7oD7A434vDy+J/lNdcnOP/01PtN80XqnD3sm/InzWP+Cfqz7K8t58RVXab0E
uEyYz/irF0LFqwfn6j1wKqdr3lLZHYui39Hnnmf2jhSJasSTK0ZYhT5OpfaE
7yke9vPFiS0J1E+Bh5+0aXk6/xvdj2ucsNao5fo0qgf6k/4vE1SDFbKJo1/S
WFN9PSU3k+7PkO02y8K3Qay7MdPgXFw+3Y96GZic23X3RwbdD15nP6djK9cc
uh9X7ylnz3VPKKB6U3+n3tUtrrmYOM33Wk972z/tN90fP2zJcAtfkfAgfUuq
16Eyuh/16lF6ruOXNXy+GLx5Yu+Mq3UldD+uiop1r/Z2KefxFeuvdp99MWRL
p0ri6PdObRl4KOhwBT1nQP6A507JssI5sxtvuz6ppvtRr48OtaNPbOPzhRTf
OHfeaDemSoz7cZ0+YLmb+uIa0hn9m/sX9xkpU+qIo5+8pTRhVGRULT3H61zj
dF8DBUHh7fOYuzUNYtyPeq0+NHa8zTM+fwZe33KXdcr2ejHux1WYO/aOVSD3
V9AfXlozIvHp3mbi6FdvmhuquVc20XPyLd/9CHdSEpRvBD6P6CBD96NeP37M
i1ut2EzzSeAT+yRs/blERPfjauRzw+fAWu7foP98Wr6iPHEpjzNpHdCpjXqX
2snS/ROV/B2Sw1WEKZW3IodGydH9qNeoZaVOOt35fBN49r2GO6tk5eh+XMMH
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
MKZzwNtDSYmkw3z2vja6jN7aJz+LdIhzanBPDpcTljzKtP+aX0I6bOhttyY5
XElY1DW9/Tkj3i9jntOyU6xfK2veLy/cajjZ10BJMLNskfTTnY9L4PpZKu52
Zc8vN/7Vr2CHiPrNXPb8vQ++OUTb1JEOC9jzrzgmd1UJKSMd4tn8kazB2vHN
xTmkg1lcU08LX0Vh2JnVi1plJFH8GMHmoT6dy/yw78oJ0qE/e49HZ8hnL7f/
Rjoksvr26KLjq7zqL/+EzdO6OFq+MtnHdXg0SOZruJOKcHRo0fWhn3ncjfkp
j5bPox7I1JM+i/4jvsbV3nLh7eoVPL42x/fmtNu3570s+RWR7HsPPhw1cm1V
E+kzgH3v2nP+Ircp1XzcZs/7MKdkZaFr7rqp3f1KSJ82bH6t1/uyjeeuZlKc
eCjptI+BhbIQfvVMyH6Zj+SXDP5nXlddOB9d6hW0h+tD8+PvHgeOPc/1aZcV
tzw5XE0YYZNpf1uB+2+Yd4tvMNgwfzH332SNAsb5GqgJn68MnPrdl49LRP1H
HD2I1aef68Ifq0IUSZ+27HsVJpa00eigQPGyDHv+dNFhixs59aTDBjY/2H9Q
+9LBAypJh7yD9p0tfFWFKHl3k1MpRaTDkX/msTWFmtiic1lHuQ6YP0/fFX5t
4C2ugzurl+2GSvXEzlwHzBvWWO/tIHuU6/C/+XYN4dsMnaLrJXycAfOPFrv8
Iju1lJXy2//fuNib1bON+5CG+HIlinMT2XN+Ha6bv2SciOK4Cf/MJ6oLooOt
Fw96W0u/121bfHy4k7ZwTiVi2IuT/Pdinv/02OOXM0P5782/Mlzsa6AtpK0c
ND25L/+9mN88o7zbWBzMf++Tf9b7aQnpJqMe3NfmfjvmSfdlXXuna8r99v/N
W2oJg0seXFFY8n/Huah/zUztM1sClen3XmbP2TZ6k3K6tyz54Ze/jGhj4asj
NCnNazfrr7h1MVsHMd/Xs/Wiv+LWdjLn9hpY6AgtNY5U+Rvy34t5WG+RnKdV
OP+93qw9xi4osZrf6a84hc3nnt7ruXzzfP57Za1W2SaHawvZj2ZmyRzhvzf/
P+LWS6z+pXP1Gs/X8rgV9dfsojD+ZqEq/d5PgwMXJofrCtunemT3+Ss+xXqN
RTsDP/T5Kz6dOF/hXbiTrmDiq7Stw1/xKearfw9/Kdvx8V/jGB6rR/ka6Ari
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
H/aL3rNY4yPpTN/74OawIOMM0pn2CWk1aG/vn0WkM+Wbnpuf+dKognSGP/Uu
9revhV4R5Z/Dj8N5Q9Af5UO8lT97XMkgjvI4t4jyhFn5Zo9Jb7tPKieO8tLn
FqH8+Kvfz8nHVBNHeenzjFBe8VTskqHP+T6A4KrHaq16XObnRlH+R572qtcn
+b524FPG3dN9uYWf6wMesz7XdmZcNXHUJ0bqnCOU7x6rPrFLMT//BuVlpc4/
ot/bfbvx2l1ZxFG+SupcJJRf4u6uqbT6E3GUr5v17/OSUD4z0tW/wOE4tR+U
XyV1jhKNf3S2//QlKonaFcqX1P77fCWUn3+8S+OJ+ixqb/T3YucuoV3BTx++
NOCK+TnerigevTB0Ul02bz/gV6unrk54ydsJuOjWD7Xch7w9gC9cMrHPz738
3CBw81OKXyqe8jwr8E6HtGONVzaTnuAOob/KXu7heTjg8Sb9p6ruLiPdKL/K
3mF297Q80gd8QYbPTz39n/R+IS651X6a9cMHXAfwBz/a7Ugr5zqAt+r9MPjy
T64D+JQ13oeU8rgO4LFHnq27lc7PRaJ19AcixNdn83N9wItX6zo9v8PzpsDb
+iY/7+7Dz00B73qyxf7oBTwPB1yY/bipz5/+CzqAO17/rN/zJz9XFXHYAZOs
Wy6vuA7gO3vOVZpXz3UAf3VxlopiEdcB/MlBo/WF8nyfbdrXIW/FYN+2fH9s
8N83er3zOMDPxQAP7rszskc+P3cHvHbRyFXeZ3l+FLhHUszAE2v4uSbgpRt2
q8W353k44NtPRqULlnVS54BoCdr1u5JTP3AdwJu/t1INbM6QOh9ES7g564b1
uErp80G0hEK/l/tyWkqfD6IlvLUwnbBlhPT5IFpCrPNplVlXpc8H0RKqqnc9
duomfT6IlqDXp2VP7x2KUueDaAn2bF+1f58PoiVMk9oHG3w62wf73+eDaAnL
2f6Q/z4fREtoe10ybfYhZanzQbSEu6uOaNRP5ueagG/qeUhmpBLf9wRx82ov
VZngRK4z+Ph3BnvVZDNJZ3BFP+8vhbVcZ/DPd6NG1XbiOoP7db2Ro2zBdQYv
s9ztZfaQ6wzeK6fVtxbjuc7g1Q9Da8c+4TqDd/a+oLu2Fc+PBR+n1a9V2RCe
z0nrcWoeDhd94uc3gV/I9zty9QzPx6P18lsGTNzVyM/RAY+Yuaag7SZ+Hgz4
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
U/j/AG6rFAI=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
t7rCg/R/l8z24r9q30r4JdWvF9aZt6j+n+pXM5/zZum+s3StdwrbU9hOL6me
l/kaL2YeB5l1gv5bqHqR5r9VsA6/TW1PlN47l6qepOOPhD9Wn1zjdlSfl9Xe
SeU13k+07dEm6cIQPfaOqvfO3B89/b/Sdan2J0v3vUx1dx2frT7/CH/Oe1Pp
of+Wl7b3eZ/3lX622CFNo+2QXVTfU9oeeV/1rtpExxVeP/eWtiPmq95A/eZk
tuXZy+i1p1T/ojJZbd2iZQi2wR7RsoW5MUdkFDru6dL2NvL/mdJ2DPYMRu6M
0s8NW6WNynu8C5Xxms8N7JnM7dgv4Omlba73VDeL3gvjVHdR/wPU/0rhLYX3
Eb5Y+P7S7xE7uZHKddhZqrurz3j1uUG4icotah+j+qRgebtjaf8Cvfas6lVU
rlefXupzt/pMEt42Wl92qFl//lzax3wleP8sTc8fm4N3gg2CHEQeYv8O1Rxu
0hz2Ed5X+Nvce4t9tSTts7albW367KM+16j/fbruhipPq20H1UPUfnrhMR8N
tj8+U2mqc29V3Ru7UX06qc+ZwiOFdxc+X7ix+rylPj2jz8UWe1zHjwf7brz3
O4Ptwm2i3/2K1Ie1ga3yRGY91D/hTdRn+n/vV32uxt6q7B9NTrbRCdxbZtvx
aeyWmn3dG3XOhTX7aDehv2v29djvW2a2OR7RmNsIv67rzC7sx2Evrbx2msvz
pX36A0v7ePT5SPg5lQnCY1Q/WthXwwbDhxwpvEGSG4zPPJAP22aex3BsNeaL
vyb8KOtZeITwbNaJ8DDhh9kj6MToc9/Qta5TOUXt80rv606Zjy/KXU9LcmZr
lSnYCrlr7PMb1NY9s0+1RvAaXl31i6Wf21Gl+YbNMt9zFx2/qXpr9dkts+9X
JV2ETsL/WiO1L67Zd+jNPIVPSs+Q5/UPcjqzjvu4tL6ro/pa1dtn1oWbR+O6
pddor7RmT8v9ruBPVk3XZU1zzd3Sde9Tnxtrtr/vibYHl7G/om3Jpexf9bmp
Zh8A/bU7OgZZXXi+yPAFaf4b67pv6/jjmuVw59J9Fpf2s/pk9r3fKOzX3lx4
HSN7WdcvFn7G6PfXMuugGSp9sLdU36G57Cp8Nc9MeCOd86Tw2prnLsge4dvV
/lph+cn4NyE31N4OGVP6flkPVfSaqqP6sWhbEZvxZv13Q81ru46Or9A4UfWw
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
xgb7Xbie6jtL27HEgaep7UeVCzLnWnybZB8xfdrR78jIb5Kc/CrJbXzYTYW/
ziyj8XPB8DZTU39yLfYOjsv0TjZj42RfkQvQUPh09m30vI7QnEfBNaj/7NzP
mmcOPwXnDQ/eQk1j1f9B1euW5kPxGd9Q/wtL//+w6p9zr+ddWZ/RMpV4y7TS
OvZU4WWldSY284zERcBJwGEiD4l3w0neUnNeyz2J64M/2SxYd/P+Dkk+7PO6
1v3RPmZ79Rmp9ruRA7n39fS0h+FF2Vvt1Gc0NoZwfeF9C+OZuTlP9maz0nwv
cgD+hP3AvjgMnyTJDeQHPCqybRvV++vc5rnzPcYHz/8BHW+g0jL3uE2SPcfa
OCTYBzpY9aW5c2z+1VzWxDdOenRI9PsarHrv6P+Ida5fOJ54fO6ckO/RsZU5
bWQdXNe44PjXLfgyiTOBO+kTLbOJI32a/BH8kgtKc2BHB+fL8N6X17yemyYb
krgH8Q/8PcZbN/c1xgTP/zId74ddlTvuBodzoP77LTr2yrn44ejcOsl/xI8E
s1bwuVfJHZt8KjgOO1nnPhEciz9B+MngmPKJ7F3dd0/hUTrnoeC4/CS1vxsd
qz5c9Q3BcfYjkw2DXILHvTE4tn6U2u8IjvNOxMcNllFHwOsEx3lPwv4S7ssz
F54RHOs/hv1Ymie5BRlemsO5Sbi18BzhG6PXJevzZvRa8JyPFt6sNG9zm/BP
wdzLucL3Bcf6j4XrC47XHyf8s/BZwudgwwdzR+dxr5W5D3j7L9V+vNrPis6V
gosivtNB935aZr4AjgsMD8waY70Nwv8OXnesN2LY6DJ0GnJlapJF8OWn1MzR
/l1a1mJj3Bud2/VdtKw9O8nbnwrblr/AwQTHys+O9hexQ7Dv5wfH9E+Pjhfg
m3wanS9F3tTPhXknYkDEguYF5wxMEX4vONZ/mvDzwXkFp0Tnb41G5ggvEj5Y
+IzoPLdv4VnwnYPjmFOF5wrvK3wy+6s0p32tcIvSnPZ1rOHSnPb1MfmFySfF
NwUjcvYKzsX7oLCNBI8A18SfyCHiPCHxC+zDTXLHcD9W/9U1/u3Cl6jPaqU5
tEuF1yjNm10m3Fcl5o65NyjNiV0ezTGTT4MdvHO0rYLNMiw4lj1S5+wTvLcG
Ci8rvN/IPflvH6Iz7kjjcP5quTmwffErc+eCMBb3gg1ATCOm+bfPre/ZX/sF
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
5Vgg8cH/A1Vdbsc=
           "]], Polygon3DBox[CompressedData["
1:eJw1m3UcVcXTxk/tuSCilFgoImAHgoGB0iIiSkmqSEoIKKWCoqQBFgIqqNgK
YmMXGCgqJjb+MDGxu97ny7PvH/u5Ozt79p57zu7MM8/MbTBgdNdRWZIkt+dJ
Uujz7EqSnKbOSvW3D0nyQZkk4zSht+T7NP6U5OaSt5E8WfK1am3Vr6rrt9S1
G6Q/X/pxGlsr3flqu6r/i8aqSb+b9M+k+g6N/an135c8Vrpeku/V3JFqO0m+
QfII9etIf43m11B/kK6fpc9dpPtZczaT/KL0ndXfQ2MXSXeg5A80/3XJd2v9
5yUfnfkeuJeTJdeXfKPkrdR/Qa2T5N0kXyD9CsmHSN6WZyH5ILV1Wq+K2pv6
jVdJ3ku6Uv03NfdKyXtKDpLfkHyd5HaSN5NcQ/d3iuQdtN7lGhuq/mK19upX
k76m9K/qmt7SH6SxecyVfLe+q4Hkz3T/r0vuK/3BkhdI/5rkPpKbS54v+QX1
n1T/b13TtfA99NPYIYnv7XCtUVf9Jhp7XLqzNKavTTZIfkLyy2rHZf5Nc6Rr
pfnbJX4GPIvpus9vJe+m9Zer/5zGjpSukcZmaH49ycukqyn5Y117mFod9ffS
nEel2yN4L43V3HP0xSs1dljm7ziH/aQ2RP2dtfYO0j8pebDkBpLrSb5J8qGS
a0h+V9c+rXa4rt9eY1OkWy35GMm7S75Q8kuSj838TmZLfoJ9o/5Oun57rddC
97OV5H005zH2olpL9etp7FzNPUDyK+q/qvnHa/6zkttL31Bj06U/QfK2kqdK
7qf+XmqX6fe31fyRmr+H5IskHyR5RMXPiO/7MfOz667P/SVvzpmS7jzN+5L7
0zXdNHau5C8k1+d9Sp4l+Xuep+SH1d9Ga9yofm2eU8V7mrP4a+a9PlGfJ0ie
oDk7aP5Mte8k7yn5IfW/UZui/lPsMV17otqWuqaG2knqT5F+Q+I92ELyF1rz
AunGa+ztwnuUvZpq3hYVPxPe9w+Zn9VgtZ3Vv09j26r/sdo0yadiA4LfCc/6
z8zvijPHWfst81nkHbI3fs/8bjnTvOs/Mp/1g9U+1b0dobHbpPuUa3QvP0p+
Vuv3lVxXc0+X3Ef9ocH9GRobpvv9XHPH8izUttf1h2nOV+pPVvtVc4/Q2Ofq
H6trRuqakyXXzPzMvtW1vTV/oHRnsSe03on6bCF5uPQV6SerfcJvl7yrdDUL
n8231PZV/zGN3cXv4TsK28MZ6u+R+/4+1OdQyQU2Te09zTmF86vxrzT3jMzv
jvvZUWO7a+w59Rtr3nBd316fl2j+ao0dyZnTnM8l12OP6tovJZ+p/mNcL/3Z
kj/D1ktug93Qel+o31pjSzk77C+Nj5U8S5+fl/5EfkO6PoX3cnW1vtxrsG6m
5DN1PyP0eYzkMVqzlr5rvPTTJF+h8bOk/0Cf76tNlO4MtTXxjDTTnMu0XgfJ
t6Y+k0eq/6+uv4B3xbmQfAV66e7nXGm9uZJvwVexhuSrJS+X/KTkQ7EnkldJ
flnykZK303c8oPU6J76/HSQ/IvnExOdnRWHf1Ej9dbx7tQa6dpTGJ+v60/XZ
WPIumW3cp4V938Ga/wP3Uvj315RcW/N31Nj9Wn8/jX2l37Kt9PdKPjzx/mkv
/U2SM7Wl0n8u/QTpDpXuJ+k+K3wWD2HPS/6o8NnaX/JGyQvUlkh+EJ9SsQ3G
FtfW2ETOr+Tb1F+usQOkny/5dskPSD5Q8vWacyT2SevVkrxQ+gckPyX9Yex3
yfUy+7Lf1X9H7RTJR2nOjRr7UW0m70rX/4Ut1m/YO7GPwdd8y56T3Er63/B1
ko+XXFdyXa2/j+a/hb/gWUj+QfoZkttL/pPnqc//ST4KH69+E81/R/J49Tto
/r6S35Y8Lvf7vVPXd5dcR3IdyXdJ7oHvl7yV5G94j5JbSv5V61+r9rDkp3W/
R0h/I+dL8kuZ7+cGyc9KflFyO8n1dP3DupdWie3JcrV+9LHV0g/V/EaZMRXY
6h599pR+a+m3lrxY+sckr9KcVpKvkfyQ5JWSD5f8teZPknyE5v8i3SK1ByWv
wO7wviQ/Lvl5ya0lNwTD6H5+0tijuf0V57d57vN2Ff4aHZiC31MYW2wh/ds8
XzCR5Fd4p9K3Dra/+Gx896nRV+Azauuao4N9b6dov/Eh6LGZ/dXvFIzNjon2
vGMw1jo6+qv31E7P/Ex4Ni2D/QEYE6y5XG0N+wOcUDGGAcvgU8/U2O1gGPXf
xM5UvAfBPlvm3pv7SX47NUZ6SWNHBPvLA8FNpfc7WKq6dG+VxgRgA3zaGYXP
/1D1G0q/Y8XXcO3WGpsk3W2SX8IWaqyT9LdKflHy65KPlryV5tyi7/9QY+s1
9hk+Lff7eS4YQ56QGeOALdsE+0cwDljnE3wktgSfGNymab3vc+vARMM0t2Ni
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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1ge0FdUVBuDLK/chXQVjByLFJDQpEekQQaooPjoovUkVeHQQCb1ZaVKM
0jQiKEVCEkRAEDFRFAGxYKVYo4KgWYDfXsNab787+5v/zNwyc86U7jGkzeCM
VCr1vMpW3fwrm5lKjYCd9LuyUqmx6VTqepbHurDNYXL12Tw2nn3DerDyrFRO
KvW6fp/qyW5mpdkb+v3qfsc7bVwz1VTt1Q9TBeR66m93vOVy76mDaop9Fe07
4bW2430uk8v9pUb5152Vs7+kc+zWv6YGyp6Ra67KyU1nneWKyXVlddgq1pVd
w/pFlm1kXdjVrG+8R/YSu5ddy/qzFmwTe4utsN2aN9O/7Jxj1HX6kXKd7dvC
75Mrw4azjmwnmylXjy1hM9kpNlKuJutlewT7wus7rHa+VGq93AL7VukPqjps
A1vI1ujnqM62X2KrjC2s7+kcgxzjRbaS9dK/rz+iptquLH/K60TZ221fVFPk
vrf/gHpbdbS/RFwLXqepW2Tm6MfIHbO/lrGf6Y9yf6k8NkDuBLtFVVWX+V1m
ybUTeE6/VC5LP0Ldys7Fd8M+N/ZKY5/02VrbLqiu0M+V6y6zNSO5Tovr96lq
cjviGlRL9ZtlixtTQn0kV4NtZJlxrWQl3+MBNlu1N+bvjrcsrnt9X7mhMtvZ
JtZP/5l+sO3vZL9XL6aTz3ZSprqqprbrZ6mm9q+O30P+jHGNHfNG243YczFW
X1yuSFybqiTvrp/J747fNX5f+Qvx27BWbDmbx36N9y873/s/zx+OfTIN2Vn7
X9U3lmmkv0cVM26Q+pqflTts3yH1V/sqsZNes9W5uBb1F1Q6Pr+6zHaPeG/q
Pf0QlY910P9Z/nHHmcHqssVsBvuKNXGe/+k/5leyKezOuKdZe9vtVKt0cm3F
Ndbbax+1ja2P39y4N1RDn/FYXM+suX6t8Yvlf5adzZrF9c4WsdPx+7C48Nqz
GjYfY4PYRX071Va9Fde9Y6Yde6VsdZkt7Fk1Tn9M5kNjq8uMjvuNzWKj2AnZ
x+S6sFfYZlZU5mGWyzaztSwfmx/fP9vE1rCLxg5nhVhv1oQ9xVayEewIO8Qq
Gfso68i2sX+oLPdMI/6N7dqqkNwkYx+Rayu3hT3LMuLeVd/p66sibLLcPLk2
chvZ6lQyucf3cuHSnBtzb6Gc5Lwd5J7Xr4v7ld3EtvuuSsY8FfesfkXMJbYP
yLyt8st1cMzCrJP+Nqd4Wv4pucHsHbaflZHppIqyLvFZ2Eq53PiubMfi00Pf
Vr887i+5/7LX7Stt3BPsXvYqe5kVY93Syf1zf8w1Mb+mkzk/5v4H08ka9InX
x1VX2ztktxhbxNgF7D62k21ll7NVbCR7nx1mldlqlseOsiOsClsT8zv7KOY7
VjXmkbiu2F2sIlsSn4VlsTvZn9iiuP5ZNmvNKrDF7Ors5HrfF+uAesHxG7Cv
ZG5VBeQmyNVnp+L6jrmUjWf12HF9ZeWnSI1lddgXcc6MZC0fzaY7Zg3HfiQj
mS8v2lFXfRnvV8XtM0auBTurr6WuZbPYXrVHTUon6+sxry3lzsX6qa6Tm21/
M/ajvoq6ik1jbdh5/R2qLHuUNWU/6CupEmwq+wv7Vl9XFWYPstbs/xnJ3Blz
6DzWkH0d15kqyCbG/MJ+1TdQN7C5l54v4jnjtH3jfd4zXnNVpvffSu6Pcgvt
v4dlsJbsD2wBa85+1tdU17CZMWexX/T11PVsDhsT66+xs9lodpL9LeZK9i57
k5WVeYYNZ4djLmUV2YDs5FmmbE4yJ8fcvFZuLPtY7gO5avHeWWk2jvVi2+O5
KTuZv8vlJGt4rOX9WQVWJid5VopnpiGsKpts7EBjP2HDWPVY3zOSNS3WtkGs
CpvE+rMPY23KTp4LyjveUf0HarT38js2LOZUuQ1ZyVqRPzOZX2OeLSr/NHuA
HdIflKvgWENjnWYPxZrEPo31g93FVrIn2Pm4b1ljtoBNZT+w8XF/xHrHJsY6
zMaxBmw+m8C+ZZNZE7aQTWM/sjx2G5vBRrIvY/1jLdkyNpf9wkaxWmwmy2PH
2UPsDraITWc/ZSWfJT7TsHhuUBt81vpqh2tstFzDuCf1U+RaxPMImyN/7tLz
7k+XnhfiuaGA72oUu0puaKxRcuvlyrOdjlfG9hz71ukXq16298r9S66E4y9h
fWK9ZLvZjexJ1pftZ6+xG9gi1pPtCYt5wnmLskXOkd850mqTfqtqEdd/VvI8
m2PsQtbN2F2xHrEr2ITs5HkknkvO2Hdev0yuv+3/sL32lcpOnvvj+X9yOnn2
/9TrUtXP9ptye+RKyj3ACsbzLmvMVsTvy0qxsawn+zd7N56D43dJJ9f68Ziv
41kvM1k/Yh1ZF8/M7HI2gLVka+I6iOdXNoTlshfYBPZ7Np71Zq+wiewmNoH1
YTuykjVvYGby3cV32CAn+U57ZCZrdKzVNdmuuKd9p9viuSGuD5ndca+yf8Y8
EetrrO+siO3OMc86xzPO8RsEBKnL
           "]], 
          Polygon3DBox[{{1384, 811, 1123, 1721, 1234, 1235}, {1677, 846, 685, 
           684, 1020, 1539}, {1617, 1116, 609, 610, 1117, 1618}, {1383, 810, 
           1009, 1714, 1232, 1233}}]},
         Annotation[#, "Charting`Private`Tag$61622#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jkvRFEYBuAz9n3GUgpRiiAkIoKIFlHQ2ekoqCS0GqKgI6G2FDSCPzBC
bwxjpxOtaMVzSe57n/e7xZxz5t66mYWh+VgIYV0mlaiPuhXJYk4ICXOpvqLX
6oP6pt6k77KbBxzgOUd5ySuZ01+5zE+u8ZvbDLkh7CPOM9bwgqeMW2NaUuYJ
Vkk6K4Qb8y3TvOMtM7zjPTN84D0f+SQP+jMf+RI9i/bEZ77xhansEPqs8aof
6Qn9TT/WK/QZeTePsVw67PHa3MAkq3ka/U/c448zbvGLq/zgUrQPPsmsnuRI
dF72c49d3GEjN1jDE79ZYs0piZvHWSm99l5m7mEpu1nCThazg0VsZyHbWMBW
tki+3sw8Nmb9vY7QQMuGejp6GDbEdFc49KAw9v+N/AL4UEIl
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1141, 1422, 1461, 1508, 737, 1507, 1506, 1564, 1895, 1338, 
       1142, 1609, 1610, 1906, 1339, 1143, 1723, 1340, 1144, 1724, 1341, 1145,
        1725, 1342, 1146, 1726, 1642, 1801, 1147, 1727, 1343, 1148, 1728, 
       1344, 1149, 1729, 1345, 1150, 1730, 1346, 1151, 1731, 1347, 1152, 1732,
        1348, 1153, 1873, 1457, 1349, 1458}], 
      Line3DBox[{1154, 1423, 1463, 358, 1883, 1462, 1424, 1464, 361, 1510, 
       1509, 1565, 1896, 1350, 1155, 1611, 1612, 1351, 1156, 1733, 1352, 1157,
        1734, 1353, 1158, 1735, 1643, 1802, 1159, 1644, 1803, 1160, 1736, 
       1354, 1161, 1737, 1355, 1162, 1738, 1356, 1163, 1739, 1357, 1164, 1740,
        1358, 1165, 1741, 1359, 1166}], 
      Line3DBox[{1167, 1425, 1511, 1592, 1082, 1465, 1426, 1467, 1512, 1870, 
       1513, 1466, 1427, 1468, 993, 1516, 1515, 1514, 1566, 1360, 1168, 1907, 
       1613, 1614, 1361, 1169, 1742, 1362, 1170, 1743, 1645, 1804, 1171, 1646,
        1805, 1172, 1647, 1806, 1173, 1744, 1363, 1174, 1745, 1364, 1175, 
       1746, 1365, 1176, 1747, 1366, 1177, 1748, 1367, 1178}], 
      Line3DBox[{1179, 362, 1049, 434, 232, 945, 289, 233, 946, 290, 234, 372,
        999, 371, 1180, 1908, 524, 1181, 1749, 1648, 1807, 1182, 1649, 1808, 
       1183, 1650, 1809, 1184, 1651, 1810, 1185, 1750, 1368, 1186, 1751, 1369,
        1187, 1752, 1370, 1188, 1753, 1371, 1189}], 
      Line3DBox[{1191, 1652, 1811, 1190, 1517, 1519, 1518, 1902, 1593, 1192, 
       1567, 1428, 1469, 898, 1193, 1499, 1429, 1470, 1430, 1194, 1569, 899, 
       1568, 1431, 1594, 1195, 1616, 1884, 1522, 1615, 1523, 1196, 1910, 1617,
        1618, 1909, 1197, 1653, 1812, 1198, 1654, 1813, 1199, 1655, 1814, 
       1200, 1656, 1815, 1201, 1754, 1372, 1202, 1755, 1373, 1203, 1756, 1374,
        1204}], 
      Line3DBox[{1206, 1657, 1816, 1205, 1658, 1817, 1207, 1520, 1521, 1818, 
       487, 1208, 443, 1471, 1432, 1209, 338, 1880, 1472, 1433, 1210, 445, 
       1570, 491, 1211, 1911, 529, 1619, 1527, 1885, 1212, 1620, 1621, 1912, 
       1213, 1659, 1819, 1214, 1660, 1820, 1215, 1661, 1821, 1216, 1662, 1822,
        1217, 1757, 1375, 1218, 1758, 1376, 1219}], 
      Line3DBox[{1223, 1759, 1377, 1221, 1760, 1378, 1225, 1761, 1379, 1227, 
       1525, 1762, 1380, 1571, 1706, 1763, 1528, 1597, 1381, 1475, 1707, 1764,
        1477, 1529, 1382, 1476, 1708, 1765, 1478, 1532, 809, 1531, 1530, 1576,
        1897, 1383, 1233, 1626, 1627, 1913, 1384, 1235, 1766, 1385, 1237, 
       1767, 1386, 1239, 1768, 1387, 1241, 1769, 1388, 1243, 1771, 1390, 
       1245}], Line3DBox[{1244, 1389, 1770, 1242, 1831, 1669, 1240, 1830, 
       1668, 1238, 1829, 1667, 1236, 1828, 1666, 1234, 1721, 1827, 1625, 1232,
        1714, 1826, 1622, 1624, 1623, 1231, 1886, 1598, 1599, 1573, 1574, 
       1058, 1230, 1435, 1474, 1501, 1874, 1500, 1229, 1434, 1473, 1056, 1572,
        1228, 1595, 1596, 1526, 1524, 1226, 1825, 1665, 1224, 1824, 1664, 
       1220, 1823, 1663, 1222}], 
      Line3DBox[{1247, 1670, 1832, 1246, 1772, 1391, 1248, 1773, 1392, 1249, 
       1774, 1393, 1250, 1713, 1775, 1394, 1575, 1709, 1776, 1534, 1600, 1395,
        1479, 1875, 1436, 1481, 1535, 1671, 1888, 1480, 1437, 1482, 1538, 822,
        1537, 1536, 1578, 1899, 1396, 1251, 1628, 1629, 1914, 1397, 1252, 
       1777, 1398, 1253, 1778, 1399, 1254, 1779, 1400, 1255, 1780, 1401, 
       1256}], 
      Line3DBox[{1258, 1672, 1833, 1257, 1673, 1834, 1259, 1781, 1402, 1260, 
       1782, 1403, 1261, 1783, 1404, 1262, 1887, 1533, 1405, 1577, 1898, 1438,
        1540, 1601, 1602, 1903, 1483, 1439, 1485, 1541, 1542, 1891, 1484, 
       1440, 1486, 1025, 1545, 1544, 1543, 1580, 1900, 1406, 1263, 1722, 1784,
        1630, 1407, 1264, 1785, 1408, 1265, 1786, 1409, 1266, 1787, 1410, 
       1267}], Line3DBox[{1269, 1674, 1835, 1268, 1675, 1836, 1270, 1676, 
       1837, 1271, 1788, 1411, 1272, 1789, 1412, 1273, 1790, 1413, 1274, 1890,
        1539, 1677, 1889, 1579, 1441, 1548, 1603, 1871, 1719, 1487, 1442, 
       1489, 1715, 1872, 1550, 1488, 1443, 1491, 1033, 1552, 1551, 1716, 1791,
        1582, 1414, 1275, 1915, 1631, 1632, 1415, 1276, 1792, 1416, 1277, 
       1793, 1417, 1278}], 
      Line3DBox[{1280, 1678, 1838, 1279, 1679, 1839, 1281, 1680, 1840, 1282, 
       1681, 1841, 1283, 1794, 1418, 1284, 1795, 1419, 1285, 1796, 1682, 1842,
        1286, 1546, 1549, 1547, 1904, 1720, 1287, 1581, 1444, 1490, 1445, 
       1876, 1288, 1502, 1446, 1492, 1447, 1877, 1289, 1584, 920, 1583, 1448, 
       1605, 1290, 1634, 1892, 1556, 1633, 1557, 1291, 1916, 1635, 1636, 1292,
        1797, 1420, 1293}], 
      Line3DBox[{1295, 1683, 1843, 1294, 1684, 1844, 1296, 1685, 1845, 1297, 
       1686, 1846, 1298, 1687, 1847, 1299, 1798, 1421, 1300, 1799, 1688, 1848,
        1301, 1689, 1849, 1302, 1553, 1555, 1554, 1905, 1604, 1303, 1585, 
       1449, 1493, 1850, 1710, 1304, 1503, 1711, 1881, 1494, 1450, 1305, 1587,
        925, 1586, 1451, 1606, 1306, 1638, 1893, 1560, 1637, 1561, 1307, 1917,
        1639, 1640, 1308}], 
      Line3DBox[{1310, 1690, 1851, 1309, 1691, 1852, 1311, 1692, 1853, 1312, 
       1693, 1854, 1313, 1694, 1855, 1314, 875, 1315, 1800, 1695, 1856, 1316, 
       1696, 1857, 1317, 1697, 1858, 1318, 1558, 1559, 1859, 508, 1319, 471, 
       1901, 1495, 1452, 1320, 345, 1882, 1496, 1453, 1321, 473, 1588, 512, 
       1322, 1918, 550, 1641, 1563, 1323}], 
      Line3DBox[{1337, 1456, 1590, 1591, 1078, 1336, 1455, 1498, 1505, 1879, 
       1504, 1335, 1454, 1497, 1718, 1878, 1589, 1334, 1607, 1608, 1562, 1894,
        1717, 1333, 1869, 1705, 1332, 1868, 1704, 1331, 1867, 1703, 1330, 
       1866, 887, 1329, 1865, 1702, 1328, 1864, 1701, 1327, 1863, 1700, 1326, 
       1862, 1699, 1325, 1861, 1698, 1324, 1712, 1860, 1459, 1460}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{553, 1108, 739, 1906, 554, 990, 752, 1896, 581, 1085, 895, 
       992, 993, 994, 595, 897, 946, 995, 996, 608, 898, 947, 1086, 1087, 620,
        1088, 1818, 1000, 1053, 797, 631, 1825, 808, 1761, 642, 819, 1773, 
       654, 831, 1781, 667, 1837, 842, 680, 1840, 852, 693, 1845, 862, 705, 
       1853, 872, 716, 1862, 883, 727}], 
      Line3DBox[{555, 740, 1723, 556, 518, 1612, 519, 365, 1566, 436, 234, 
       292, 1470, 236, 295, 1471, 238, 381, 1526, 380, 1762, 643, 820, 1774, 
       655, 832, 1782, 668, 843, 1788, 681, 1841, 853, 694, 1846, 863, 706, 
       1854, 873, 717, 1863, 884, 728}], 
      Line3DBox[{557, 741, 1724, 558, 753, 1733, 582, 1109, 1907, 1110, 1111, 
       1112, 997, 999, 998, 1051, 1052, 899, 948, 900, 949, 981, 1880, 901, 
       950, 902, 952, 1056, 904, 1055, 905, 1763, 1008, 1006, 1007, 1775, 656,
        833, 1783, 669, 844, 1789, 682, 854, 1794, 695, 1847, 864, 707, 1855, 
       874, 718, 1864, 885, 729}], 
      Line3DBox[{559, 742, 1725, 560, 754, 1734, 583, 765, 1742, 596, 1113, 
       1908, 1114, 1115, 526, 1884, 1002, 1001, 1054, 445, 951, 903, 953, 
       1874, 339, 954, 906, 1764, 956, 451, 1060, 908, 1776, 1014, 1012, 1887,
        1013, 670, 845, 1790, 683, 855, 1795, 696, 865, 1798, 708, 875, 719, 
       1865, 886, 730}], 
      Line3DBox[{561, 743, 1726, 563, 755, 1735, 584, 766, 1743, 597, 776, 
       1749, 609, 1116, 1910, 1118, 1119, 1120, 1911, 1121, 1005, 1004, 1057, 
       1058, 1059, 955, 907, 1765, 957, 982, 983, 958, 1875, 910, 960, 1062, 
       1063, 1061, 1898, 912, 1021, 1019, 1890, 1020, 684, 856, 1796, 697, 
       866, 1799, 709, 876, 1800, 720, 887, 731}], 
      Line3DBox[{565, 745, 1727, 566, 1803, 757, 586, 1805, 768, 599, 1808, 
       778, 611, 1812, 788, 622, 1122, 1912, 799, 633, 1826, 1009, 810, 1897, 
       645, 1091, 1092, 1017, 1018, 822, 658, 913, 962, 1022, 1891, 835, 672, 
       915, 963, 1871, 1097, 847, 686, 1098, 1099, 1904, 1065, 858, 699, 1849,
        868, 711, 1857, 878, 722, 1867, 889, 733}], 
      Line3DBox[{567, 746, 1728, 568, 758, 1736, 587, 1806, 769, 600, 1809, 
       779, 612, 1813, 789, 623, 1819, 800, 634, 1827, 1123, 811, 1913, 646, 
       1016, 823, 1899, 659, 1096, 914, 1024, 1025, 1026, 673, 916, 964, 1872,
        1027, 1028, 687, 918, 1876, 965, 1101, 1102, 700, 1103, 1035, 1905, 
       1068, 869, 712, 1858, 879, 723, 1868, 890, 734}], 
      Line3DBox[{569, 747, 1729, 570, 759, 1737, 588, 770, 1744, 601, 1810, 
       780, 613, 1814, 790, 624, 1820, 801, 635, 1828, 812, 1766, 647, 1124, 
       824, 1914, 660, 1023, 836, 1900, 674, 1100, 917, 1031, 1033, 1034, 688,
        919, 1877, 966, 1036, 1037, 701, 1850, 922, 969, 1104, 1105, 713, 
       1106, 1859, 1041, 1071, 880, 724, 1869, 891, 735}], 
      Line3DBox[{571, 748, 1730, 572, 760, 1738, 589, 771, 1745, 602, 781, 
       1750, 614, 1815, 791, 625, 1821, 802, 636, 1829, 813, 1767, 648, 825, 
       1777, 661, 1125, 1126, 1784, 1127, 1128, 1029, 1032, 1030, 1791, 1066, 
       1067, 920, 967, 921, 968, 984, 1881, 923, 970, 924, 972, 1073, 1901, 
       927, 1072, 928, 1046, 1894, 1044, 1045, 736}], 
      Line3DBox[{573, 749, 1731, 574, 761, 1739, 590, 772, 1746, 603, 782, 
       1751, 615, 792, 1754, 626, 1822, 803, 637, 1830, 814, 1768, 649, 826, 
       1778, 662, 837, 1785, 675, 1129, 1915, 1130, 1131, 1132, 1038, 1892, 
       1040, 1039, 1069, 1070, 925, 971, 926, 973, 985, 1882, 929, 974, 930, 
       976, 1878, 1076, 932, 1075, 933, 979}], 
      Line3DBox[{575, 750, 1732, 576, 762, 1740, 591, 773, 1747, 604, 783, 
       1752, 616, 793, 1755, 627, 804, 1757, 638, 1831, 815, 1769, 650, 827, 
       1779, 663, 838, 1786, 676, 848, 1792, 689, 1133, 1916, 1134, 1135, 547,
        1893, 1043, 1042, 1074, 473, 975, 931, 977, 1879, 346, 978, 934, 
       940}], Line3DBox[{577, 937, 1873, 938, 578, 763, 1741, 592, 774, 1748, 
       605, 784, 1753, 617, 794, 1756, 628, 805, 1758, 639, 816, 1770, 1771, 
       651, 828, 1780, 664, 839, 1787, 677, 849, 1793, 690, 859, 1797, 702, 
       1136, 1917, 1137, 1138, 1139, 1918, 1140, 1048, 1047, 1077, 1078, 1079,
        980, 935, 941}], 
      Line3DBox[{725, 881, 939, 1860, 714, 870, 1851, 703, 860, 1843, 691, 
       850, 1838, 678, 840, 1835, 665, 829, 1833, 652, 817, 1832, 640, 1759, 
       806, 1823, 629, 795, 1816, 618, 785, 1811, 606, 775, 1049, 1084, 1083, 
       593, 764, 1082, 943, 893, 579, 751, 1883, 989, 942, 892, 551, 737, 988,
        987, 1081, 1080, 936}], 
      Line3DBox[{726, 882, 1861, 715, 871, 1852, 704, 861, 1844, 692, 851, 
       1839, 679, 841, 1836, 666, 830, 1834, 653, 1772, 818, 641, 1760, 807, 
       1824, 630, 796, 1817, 619, 786, 1050, 1902, 484, 607, 483, 945, 896, 
       594, 364, 1870, 944, 894, 580, 361, 991, 479, 552, 1895, 738, 986, 
       1107}], Line3DBox[{732, 888, 1866, 721, 877, 1856, 710, 867, 1848, 698,
        857, 1842, 685, 846, 1889, 1064, 1095, 1094, 671, 834, 1903, 1093, 
       961, 911, 657, 821, 1888, 1015, 959, 909, 644, 809, 1011, 1010, 1090, 
       1886, 1089, 632, 798, 1885, 1003, 621, 787, 1909, 1117, 610, 777, 1807,
        598, 767, 1804, 585, 756, 1802, 564, 744, 1801, 562}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
NeDAbEFXdWcunHw/w2VuWTH4mkeUClcM4rPuQxKCzv3wU/v2/LXXTeBj8xyO
uRwXbd0u7109kwXpm0aU2f0VsEzUxiVqPg+nxrz1PBnUB/eofZ5P1D6PH7XP
o372juqMtf0464dQ1zdXUhcZvAoP9eTCiWeH3qxbWAt9utuixkk85H40PCV6
vxcKT/THaBdUwKodJbIX55F5VeSmbAnpgzMrNp3ysWZh+pH1W//uLMMf08Ve
Ga7jwEmqv5Id1V/Jg+qvxKwdEs6aycKC3U7nOm0q0GXNz2n++ziwREs64vlE
E5wp3OoQ9ZKHPnnhrWdoXbB8T9BoXx4TN6+bYhZoW4nJr3NUDl/lQLfdmM3q
Rhq8enFS62oeD89LZe3ZZ98JfdT7uG3U+7ga6n1c5NIw21+TehZGpwsU81Dj
4Ni5BDoDJij9Jo/iKS8oniJCvacLod7TWVDv6T7vcbl81GMALdNM4sQvNeAP
l462HaJcCFjtGBspWQxWARs6VpO8dCtN2GS7dz9M6RrJdD9+Fo+0mX9kinNx
ge2KiIWyLFh3dI8JLbQCZt6U+rSCPF+8DvY+R8JrrL4bLkDCj8JvGf8JIPxI
8+uX89sJP7JffWqK8lgNzL3I/3Q6uS9TH4vuUXnUC/tvtlV6Ez+S4m+V9Ymf
y/Nprw8TP2tP/5rjINuH7esDvNZym3GTekTIctVB8JS4dv/16ACm/3kh5vKk
GiPPjISdJuPfe47VGmjXCOfefnPfGsHDBXl+dDGFHvB3b9ZYajqAbxpruNW3
GzBJPTt6gyoXCkSD+R5uZKLe/QMKez2q0TPbqS6kmtwXat15Ta07w9S68yXU
ctPhDhqUci1fdpD71aj0tiLdityv67/XJus1gurDMrMBEic/5XL8nI16YNHg
tENCbgN454yaiPzVBgxffJGfX5oLYVSfnQtUn51Gqs9OEGWPpuw0yn6/TG/7
S4d+3LX1XAmX1KV8V1ta7Ry4oE+zjjt1hIkdMxQDD1lXI+OyLq8pmfPPPn2L
hz1bJIj9QduE4GRfmyF6z1clkx6Qkz04Y9XRATStL7tcGNyAYzJ7u/NEuLCI
v9t+uzsTjQ9fm9m9sxo/Pru0SIH4n2eqaNFuwYAnd3nx7VU8FM1M66icTYdX
SgfC/vZ1gk5ytJtiEg/FBR1L73jS4OCH8Z4B/w4ozjpb7pjBw2TfMcEsxVbY
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["log10phiBar", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["log10RB", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{353.74468950577443`, 195.49904368370437`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1, 5}, {1, 5}, {-4.71934877141671, 4.569838738851991}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.273881487609092, -0.07252955839381561, 0.8523141840012184},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.728292144388587*^9, 
  3.728292163671816*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ecgp7By8CJtZaSHXXH/2fMYSUCpIs2ijh1KO5mrKTYEy0RlKWMZ38v89F+1f
IJIj5nJwfrmmxdwjpaOACsdcSryUKo/8u+nidUjezbWhKCfhPn7EbnmEy1A0
l55O9y3h+7LcXaV76AIS5aIrh5639tSDJ9+66MA9a0+ajT34gGodSFfjghuL
+5ya/8SWXes5O9FQ5HNqtqEg5GgtWTVx6vxi8oIji+ZMai/rj+81O5egqh9Y
WpMh8JmLO15Qe2l74RwPaojOs045TpB8oxO/B0IV2F96a5GbzH3XT9/I7FVs
StBOHNkUyi4ZQohiii7kF/hF6BLE4T9n6LGgdOiRWySu8k5FoKCJ2U0POOuU
t7rczDGHJEWKoIWh5fDBlxRkDjWUUkoUiUAOMiAAe4UgQ6FzHT8Bx9qDQgPO
6QqjRW5BEs5yuRFFSFo7ayid0nIUaHCHC3mzfsmhjNHC3UunJU4rc2F9uHcp
kQb3rudHII0z8sM0rOe6XXDioVk1uXnpwonzjp05fu3ZB48L+HS8K/oUYIxn
1Zx4FG12ojNgN5LTwwoL6CwfV1jnE6ccXOST5x9R0NuffOi05twjh5pVRxfN
zhPLvFn3dgwI7XrncLPxlLHmvWdhIcj2MwQ3DgECpcyldT28LNSAEvxT/hon
uXB9g4EEAmHadZoMC0ZTAVjUiOWDGJaVyiflr5L8akNyxOn5wo7SX7O3MJul
uBNOOIHZSGFYbkESLkkyc5yeIsz0wUOArplSNE49RAAJ0ii4wnMkdVxFlmpV
NRud0bHrHkzpJWJ589a3vtVdmTziiCP2IF8+Pm/ePMdv/zNfEG9k83OAZElm
dYbI7Z7aJPVohzqUtJQvuixjY2OIQeWnh9Mx37NwLC/2nH0oYWrP0kOLiZVH
lRNnHj48ceJbDuJIVkweOW9s8owjOWQ5jjkEOl046agFzbsWz0IgLLxzMWYo
XHjMdMTkDEeSf++Y3Ww4eaw58ehFiPeas4/DHsHUnkAT165wLJvT3/4WuQBy
+rPCsN0BA8w4y7XcLHdtOsoyjBzhNPexrjDIcrlw/DlL2CWtJbrawanwkUtW
3jq2Vs1pp502ccwxx4wfeeSRYOrSOXPm6J5tUb8V81FHyO0XiyI+rmPxAj72
lrrCqOClKnc6OE7nfg+s7Ww66aCiZOYWqARickbHDrpfiqKGFBsnCZKVONZ7
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\
\>"],ExpressionUUID->"697ac095-0e14-4dad-b358-3e6d849e11ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"LKMwellDensFacLogParams", "[", 
    RowBox[{"log10phiBar", ",", "log10RB"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"log10phiBar", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"log10RB", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728291901084506*^9, 3.728291930843758*^9}, {
  3.728292104085142*^9, 3.728292160585799*^9}, {3.7282922012641497`*^9, 
  3.728292204096055*^9}},ExpressionUUID->"0a547cdc-8348-428f-8b29-\
3fd3177358a6"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
9oUt7EDpC//zXKsK8ukzLx4LdaB04FIG8RnaZU50j+us/Znd131ypvR9/vOc
qwvTXh8YO21jZ0oHrmVw6YKngQfd4zqpZYtROWO7UvrkFgnuIWaawizfk4Nj
lLpROnC8R7gXc6SXmdd5vZm31l/pxRz3TaV3eHXiZbi/9l/pxRz3Yo73C/b1
cYLmPM++P+ke/ze6e+mnX0apBJ8H77fd7afCz+1kT8GffrdWUPTdQunxfIXe
PvbslsUn4nhelrTaEZY1Io++D/9/0enb4MUz+DwK+N5tn7/Oy+N2vKn6iu0b
OPKLOr8id/KWjZQPyvltdf9NHkP4eA7KadX63brJx7OpnPh/r6sG+sf+Kafa
Kv09IWYlElzrM9dOi9Itkdw/6To2LVyb/r/JKlj69+RNlA7/N3bbaXCgrZSA
e1zFvxfNa7hqHGouU0H3sHN7pd5enBFVTeVEexh7q4P6zJm1lA686/UvWivM
G2j8Dv/P6GNlf7jTF8of9k9YWdk2pr6Rzx8wbu8z6OKba9zeor0dPqd63cwI
GbKf4D8UnGZ3jeHtNezig52bbKaX8HFt8M9Lvz29NIfbYbTbS6foOcx62ozs
KnjpGKfgTQ/5uDbsZeOHvrEavfl4K/jN1dvl8gu4fYYeR0IH3/KN16R04M9X
xLuu+Mn9Bzw/86c9MBlaoUPpwLM1zHqPXMbtNvyIvSaPgyOv6lE68MEqw78Y
njegfPAcqg16bzlHy4jSgbffbDtp1h/2HP5IkY99u7I2xpQO/KnzroefHU0p
H7LzMlMub7E1o3TgZ3Kkzx44xe08/JqDg64tbxdjSenA7Z47aU25bEP5wB63
i9o8/r18e0oHPu/OUbvB87j9p/6r1eKo1evtKR14534VdZ03daR8YKff2t3L
vBbgSOmoXch5UJyZwtsF+Flbt247WFnsQunAr2i8uNo62pXygf2e0NC3YGlz
N0oH/nWL8nKFUby9oH5Z2WCp818klA58ffyJwT2yulE+4vYC6ZpqR8T9FKRr
qh8kbkeQrqn2ReyHI11Tfr7YDiOfpvzSptovcXq8j7DbbVQLEq1+JFI7BXuz
63LRW8fdlcRhJ1yndVddNL9G8jIn/HJaeLlk44BhL8y8ayQNFlc3BuxqpPtu
ESVf/NMaJBMHbbrZ5pa8gPuGnTEr08KlhU8PPl1fU6sq4H5cj/3NpKTkhMNT
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
1dnlAapNrl/acEEzqpkc529POG3Z0UX1L/9nra7rrvv91ITjkoLkdXN5/kEe
gTOlJ2sJI7/pm85159y86H35pQhVoY2Ccdy2P/zAhK3ZT2YNVRXOXlVf0eDG
83+dcUNZY5aGcLV0s+W6SF6vvraDrpn4aQrjGwa/kv7MOZ6DuoPxywv+SB9w
fn1Sjxt/z0+VfyvveHiKumDdL2vilxSe3iTp98E3a9SFd5Hbnvokcr6+Q3/z
iXdVhXDXvSd9evPyD98U51zkoSUENnQJjunA81fYts883FTrr+9NUIjakBKr
Lfg4GsXK/fp7/uv0kz29bsTy75233a8y/roGXcGzRoyu2Vnxjz6WLcb1fcT5
wUNtHv2IUG1yPUb1t0dtO3bk39tuVa7MrXFqwtucPTuKfDn/uGm8tFy5qjDZ
/Mb1ovecy1o2tBoyT1MoWPaqUimDf2/CIKU0mQ+aws9Nbx/PkuPpu6zRWKeg
pC28njRpg2cw50s6PfHuPlz7r+cc793gldcSDJ5wXt3X8uq3qdqCabdVK65G
/72+UfzcNqXz/zX/psrZVL2aeu+aei+a+l3+z89VE/o3ZR+a+h2ber+aej6b
eg6bem6bsmNNve9NvddNvadNvddN2dum7ENT70VTdq8pu93Ue9SUPWnq/W3K
fjZlz5uy203Z2/UZBt2lpHhc84tTVgv3PS+n/h24/93pQTKdyiSvhxd1kJKq
Iz85cPTlp+0GpxFH+nc52bb3SwslwdMmq0lJcT850WF17Ovk19SvA+8UrHPg
w6tnEjuT13JSUgrEAw+/jm+WGi2RYn4PeD6LKwfH97ZlcdCJn51qGxubUfon
MtY7irxuEKe47GN2Ez/ceyQ5y/ovSL/Z6vsutcYLxJG+vM9Cp1qTe5L/+gGq
lP7br+E+SpvOEEf6mkEzBe+Mm2xeWJ3SS836nh3U5xhxpF/rWOe5oM9lyXYb
ud+NjTzO3UlV/YRP0T7iSF+tZNdznN05CfwSpFe5sOhBi+m7iCP9zHLnXfMu
n5BMVHItamzkcfEVJW++3/LbTBzpg7Q2nD4cekCC54TWT4302r/sQR09J+DV
3eJeFCs10PMA/rj5OmvntbX0e4FnsHhq/C7gtyRvRsa7vyP9weV3u839PTKW
dAaf7+CxcpjkCelJcdBqp5tvGBFFuoFrn/XQm7T4NukDXiKztyp131XSAfzA
6niHF+9DSQf0mwbfLOvucEmKxj3Anyi16OA5UVaADuBqE15vnvKE90fAY+eM
3XGvvJyef/D8LuYhzX/9JN3Aj7L4aOgGnjvTX9Yg/AvpBu4QV266NPQD6QZ+
r9kR6/lXEkg3irtatEbOY/4r0g3ctLxzxojnT0k3igd/6hHbEPyAdANXnxsz
VF41nHRDv2yd7JpLp5T5eBZ47nqHZQ2uCqQbxR1f0JVkujUXoA+NT7f7LIxU
khKgD7gbi2uGPuAHT51reXJaEekDvqDtq/1xxt9JH3CFlEMFmztkkj4U7553
WjvhxCfSh+KyLXZ1dmmbRPpQ/PVut8le29+QPuBGyqOl3/R7Tvqgvxl89ucm
6ziuD63Lc/5ZPrpakfSh+OXz85f3e65KOoAvZ3HH0AH8h+roKqGVlAAdwMPm
/nT/JVNJOoDbSqbP2Pu+mHQAl6puod79Zx7pAL69a8NVteAs0gF83Ip+lvdO
pJEO4F9X7m3msD+ZdEB/WSH5cs+FLrKkA/iNMftWyBUrkQ7gY2qSls6pVScd
wP1YXDB0AJd3uuvnZaNJOoBvNLhxYVCiogAdwGXedFZRT5ASoAN4itEsy5EL
q0gH8Jo7G+atVS4lHcBvjnf5cjQ2n3TgcV17tm0s+EY6oL+vFLqx9Tx/rgO4
m/m3hTMXNSMdwO9+8bvkdIivCwWXXzM+YcPEFqSPOJ4X+oBPtxEu/0xrS/qA
23bvmrbHRp/0Aa9JHLXo/HZN0gc8ZVRD5s4NSgL0AV/3bY7Fz7vS1K8Gjx5q
e7x3ixrSh9ZFjCnotHdwGemDcYy2cjrJdsFcH3C5cQM+d4/k+oBnhHUddK6Q
6wN+T+dcYbqxrgC/Bfzip9x7cXsNSTdwdxafC93Ao2bLLvC+akO6gecMvt9h
pbYV6QZ+dH3bcX2mmpBuFG9bd+3e+Fh90o3qW5Nm4/iez4uAl3S88mzNuX/K
wXQDl30cuCokUYb8PYp7VR8QZHaI6waebrnE43UG143ijKU1D1zU0yTdwPcO
nrS6WTDXDbxo4vqMgg1G1N6Bf3x93mhHK1PSE7yExeFCT9pP5eBhqbmLHUhP
8MvbdR16b+5IelJ88Ub7lF22DqQb+KLI+dUKmSakG+27cPGmvd83fdINfN4w
tSPlQVqkG/oTXdYvVfhxkutGcWZVYVlxJVw3cD39luuudeC6gZ9dvcyq8hHX
Ddxr1u0iX/nWpBv479qOxhcum1I7CO6R0n9C8Xpr0hO8ksXbQk9wtYBZnTu5
O5Ge4O/ih73tnNCJ9AQPe6X8tiCaj6eBf3POGGK4px3pBl61p8rr5mMT0o3i
UqX6ehef5bqBT0723X21lutG8a2XpbIuunHdwPeGzLe4+pnrBp5vZzpVw5vr
RvGUW/p0OFnDdQNPyLjX0LmjDekGXs3iZ6Eb+Ar/loFGhc6kG/h82fGnFw5x
I91oHxTTLjmPPATSBzx9iFHPal0n0ofiT5/ExCiEcX3Ay95u2fhWqjnpQ/sw
qXa5/a0b1wd80PtjP04Ucn3ADYsyDvr5cX3AvVekHDljakb6UP5Rnwdk7eD6
gNezuFfoQ+t8Tj6+8DzdhfQBjzghJXt8hQfVF/3W7sYdIgzO8/qCL6+rbFgk
y+sLbmJ3/I1RT15f8KxtU6b6/Ob1Be/y0n1L4mpeX3Bv69Qnqq68vuC3LZ82
bn7I6wuez+JPUV/w/b8nLZk9oRPVF7zTs5kX+l3tSs+DuJ8OHdBPb691ZvSN
P+wwuFlJnOp7Oa4DuFxiQuVLL64D+ILDPY/PqOI6gJvum/964mauA3i0b0Nr
hx5cB+Jf1hz68ZHrAF7G4kOhA/jGhBSj8tNcB/BrR4e+HjJUQjr8z3Gd6n9x
6IOrW/Kt4jXpv6m/iflqmdIrQ2dcKqb+5tANt+v800olxhuEJ4o3c6jfdJD1
Z/VF4wNrWf7Prv3eV/Y4mvoFM1j+w9+Fqtb0vkP+8CCW/6upJ6LaLLxC/nAX
Ni/WP9ly38QxZ8kPNLXpH54WXiLZ8/SQY2nLo+QHKrP5wZ2b204fPHYP1VPS
694475AqiVpLl+n6LeuoXuo/B+tG+FdKkjNGnjowpILqNYz1Tz+I+tHuLB+l
KZfLPr9/S/UyY/rFOrq3bXnoGdVLheW/MnnJAvUl96le5Wxe9FlX32t6F25R
vTJC8uPNvCskq2dH99c0vkT1esHm+956LPw+7/pp8t+udl6/JcSsXCJYOitJ
3T5E9a29NiIgxKxesnaazhi1AN6P08B+YqJ+bhVLf12yNClf5zPV6ytbL/DZ
7UeITG0S1SuW6Sd1Mr/y09bXVK8bbJ5R/oelW6LUUz6uUrvph39ajeTKnY/O
z50iqV7r2DxO+5OK251UblK9Zp1qeyYtvFpSETSxo37CearXOJWaGP80KSE7
VVrqbb40vV9WzaPvm3k3SNqMG/bu84hi+h1zWX/QUdRvHcPy6Whm0qwotJDq
G8fWNaikB/X9sOwb1ddz4ouzZt5SgkxE2LGAu6lU33Cs9694Hf7GN5GPh0wx
l43wb5Ro3Hn8c+mwl1Tfrmz+N1vTxlNm7mOqrwUrf+kz32LZygiq771HscNC
zGSFM/ftY4qf8n4r5qstzjVXVj+hSL9vD9bvWyDqn95l+cRpm5qv1amn+rZn
+Tz8dcN5gH0Z1fek9j4H75B/+InA3MfK+VRfHTafu2Oktfa1lEyq7xZmF52e
nVSwXf+R6lvP5oU3Sdptff3pHdV3/j3bgnB/aaFXVJ9DvSxiqL4tFx/IDPeX
F4YNONhZy4HbbcxXN8+saHycxPunUrG+0f5pcoK2t0HdeIH3T0+zft90Uf9U
l+Wvr6Jw36WTOtnVYJZ/es/nB7SXy5JdbYj5b/7ZzUxPBF6oJh0WsPnoxswk
u2m+JXy8opX9ETNvOcHILqlri5jvpMNY1j6sWL3t4c4BX6m+i62nzUkLVxQG
FbpInZrF64t1KDLbFpSvncr9t/ErO/YNMVMUpuwp3/Z+hQbVF9cOov7mIpZ/
2OCythVb2lB981j+c388zElM0aH6jmP5m+Se/bhYpTm1I+/YfGz3i4u6fjCW
Jv+/Z3yDpXeIgrDjSYOxv20l1fcem6etW7QgION0EdU3iZVr6qAeMXc3/9Eu
s/UyzxUmS5be5PWNspf+GO7fTFjRYeIx48+8X4n5d0Ol6882FvB+9wTWL+si
6j/S+PSXpXJTTlmTDl7se3NSBp08r2JOOkSy770b3Us377kB6WDHvrfgSN5J
2SmapMOZ9W9v+6cpCdPGFxtppiiQP9+SrR8wWz3s0tyUBnr+t6Yc2m3mrSTM
8K/pZyhdTvo4/Gd9jYrQIbvTOJ+DXB+sA9oxvPeG+6lcH/2c+Clp4cpC3boh
/ts0uN+CdQUt5g46PMif+y0ynY92CzH7J72df88jFkYi/1xFKBb1E+1ZeRRK
pxzfq+VA+uix783wljw9pNKejz+w/Df2m14xxq4l6bCYrX941ryzo6uPGvnt
P4JntPYOaS543XFx9FkmR/7Jzv+sJ1ITBm9QGLXhj/4g1jFJtbVZd6uI67CE
lUt9bP68xe24DlgXcV224/JfN7gO/133pPqPnfh1e2MS70djfYWgEdtHfQLv
R7dqot+3g5Vzt6eCQkStI9U3ieWzdsJJmccfWlN9e/1nvYSKkGvvcM2tvQ7V
N2DVu3fh/hqCn9xxg/t/9OOw3mrptVXJ+2t4ffNDXSQhZhrC1a5bc5a68vpi
fm/dosyUT+95faP/sx5eXdjrZqxcbsf9VawDOX73s7Z6Au/H/Xddhrqwqs8U
2+Sb1qLn5O9+HMq/W2tPqNwzZ6rvOZZPTf2uKu/lZlTfcx86tfQO0RQW2ek9
LAj9Y3yJrUcrf7Rws/sf/TJ96eMbzbz/eY60AlweCby+mGe0yZd82pHH67uD
PY+npMffS5rwh3/O1quEnD/a66sq989lhs3ySQvXEIYMiq4O7Mv98/wm+mVn
WfkvT5e0N37H+2Uo/6pL3lmOKrxfluxwYnxauJaQGK8RrvpHvwzr5rpOW/zF
+o9+We+x8m/C/bUE9d6m4UE9eH1pPa/NZ1+v0j/66Rtmdwkx+6d/dNx/3pMl
vL54Hm2X9y2IsOX1tb+acN4/TVPYd+nCj25H//d+WRIr/8G6mgtRI3l/BOWX
L1tVarOV98tQfnG/Q2abwln/NG1h2+/k6WF/9MsQr2F7SNP06h/9siV3/LS8
Q7SFD7NeX13xR78M6w6yZhqHD6r8oz+ekbjWzFtbyF67MffOBq7DObbOSOfy
ncf9u3Id8JxW7ltzbMuL/71fhvJPOVwVt+gE1wHlb2f2JeWBwPtlAaz8Yh1u
ML/98uH0rSc2VNB87lfm/0cr95HKbZdFXIP1I3S/X7HokZRL87xWTL8hG9vf
cLqeSe2IP/OfeytsO3rLpZ76d1g39Wzq9uud5KVI52PMP5eSyu46cgmfd8N6
Rb2R5r6z5eQo/Wjm3/qOfnIw4B2fV0J5u+96MyZ0lzL9Lrg2v/BsrLOHBt2f
Zn7mmDVSeSsDNInnMT9qzsDQYoewFsTh711K+zLCOVCXrxdEPKC7Rff70vqU
3ov5J4X+PU+nj+J8AvNzxqlYPDv+VZ/ygd815aWSb1j7NvScBDA/6m7Gg+4X
s425PWH+wza/SaYLDxnT8yPDrk7MH0M+yew5Otps9PgDh80p/STRvpRI35G1
v1JPPteuKbGk57CQtZuflN//mrG9HT2HS1k7+5ytT0b6PqzdGfJ85H2XaD7e
m8LaKZ1ymdPO0Y703Pqw9jG5b/vNV1bz8Uwn1l48nJtqN+9IZ0r/iLUvS0M6
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
y57/hWxeFTyBvUcHWbtP/Tvm/z/qo16kYWhC/DTzT3wbN71af4X3K3ey59+G
9RPBo1k7W8rmp8AL2HM+nD3neD4XMX/jmmgcbDl7HnOke1VZDHIkfp7NU1S1
2n704WInvj6NtSPjBkhvd69xoufZi/kJNw6lT1rg05G+twObr7nF4vfBHRiP
EPFerL0bK2rvMN9h+Hrw0xNP+XsUyuYdTvpKWxnaexK3F/WbaL8/Ni6k11zO
r+ci3i7g+bxa5OnvvzSO7Db88G0dChbLb/hJ6RF30Nk9cp66aiNxG/Z85m88
+rZzuRTZpXKW/+6MG0M33nlE/Y5MVp4yFmeE9BvYc10/pFPhSr03xNGOmBRI
LRle/pb4ddZO1ZZUjC/q9o54FutPGXiZKsRMTqLvHYXzBNl6HqSvY/0I03sb
fO9nFxCHDtXvY2bHJmeTPgIbD5cKfKl70rOGOPbDyP+63qv/YFmy82i/1nv0
X5WylbcTaL8muUZNs90kTc9zHkvvxdarID3e02vhpvItZqhRPmjXqttZvlcY
qkEc769785hVgbc0iaOf0m2lZebn8Tp8fpylH7bVM2iNnQyf12Dz+EOT5ih/
OMT9uVD2/u5Uy24Wtacl2e1t7P1dz+LZwXcxfkLE4T/LzfhvnDv4Q8Z1GYc9
n8DGpfs/9l2WcsOKON7rqn7W1991tePjvaz9KlmWl35tmSNxvO/T7vuazOzm
TO0L5kNXnHi4yGSFPR8/Ye9vd0EufaNDZ+Jo73xkVrrednWndkGazSfKzD1U
o17B50PF7ymtixaNJ+P3Qn/Z4fzj0QFLP9Pz4MfsvOuWALMK2a/Ej7Pxge/z
mqsrOvP1S2g3pVadOTFuDrcbaMc3ymfP/bC0m+h30RCC2DgYrQMXlRM6iPeL
g86yTAd7uSlrMjvz+sKOiXX4n89b+R/i0Nn3vm94HXaoxd/f2xD1eozcE3F6
VUHWcMoRxdi/v1fBRGqFysb/nf9fv/f/v/x/lwf2Gu382gwdLd1EHh8I/snl
6HSLXH5eI3jXFVeaH76ZTHE74CpHVz674vWW4ljArY60PamQ84ziN8DzR61+
6V72gOITqDxDWikMWXeH1t/T+JZ3Tpn8z6u0vhzcu6H4c0jXUFpXDX62x7gT
RtInaf0x+K49/Q18lQ7w/WJYO+ZkV7zOxYfHAYLXLXALuVRfTvUC3/TkV3+n
5klUL/BbPvOOhLd/TfWiec6w1frblj2leoFnT986KrQqiuoFfjLSovd9g9tU
L/C4xK7efX5epnqBN9vaakR+/FlaZww+YdmAnKtlx6i+8L+KThxdrXylhuL0
wJ88Orh15ywej0TxoKMS60pnZlJ9wS/3//Bl7umPVF/w1X2ti9z2JVB9qf+U
8mS1o9NLqi/4B+FTn1f6T6i+4GfDVsoGK0RSfcFzF+4x6373JtUXfP0Kq7S0
oot8f2fWH1Sw7TL0exXfxxZ885sDlbZufF4EvKbbNHXXXTxeCzxQYcZDiS0/
jxDc+5jbrejJuaQD+KqKjGjX619IB/Ar9vcsvU6mkA4UJzHfeo5153ekA/j+
9MKBy/vFkA7gowf/Omz46BHpAK5z+vPXbL27FNcNf6pXs8xmZtk8rht86krX
UYPjedwvuL2WcsWnoTx+lebbhVX2E07weEvw4qF7r4/pxeMJwQe6lPg2s+fn
dIIvDetf+dpFkcYHwVvqG0rCVBpJZ/ABwyKvvdjL46DA5w55dljYXUg6gxdu
cZXoSLJJZ/CL6+/NC/yZTjqDW22LGF7+IJl0Bt/f4sq0I2/eks7gq7avnJ/l
95x0hl92MOvTA5UN/Px18E6nC7VV+/Jzr8FXjk/5Ih3L44HBd6Rrln/f98e5
vIz/GrH2opYqP/cBXC7zcq/0Gy1IZ/Cfy8a7LD3Dz9cE39zri073fjyeDfzD
pKQFeTP5uYzgt/anhDuW8fMIKT4sZqz+iRalpDP48/VDt9Zf+kE6075tP94o
m4zJIp3BZe5s+HlwaCrpDK7eWPbZYVgi6Qx/pN3Rn3N7f+Xnr8PPxbmr0B/p
Fces/dlpdz3ZB6TH+a34Xaif4ZZ6vuEOPy8c6cXnt9J4SR8ZzXM3eHw10ovP
dUV6jcDhJR2u8fNzwZednxi23taAfkdwqTOT+y35Zki/I3jp0lXXls3T5/tg
Yt41Z9h+2748nhDlaSU67xXpB+hHy9lUKhJH+jGic2CRflSd1LwFHXhcHNLH
is6HRfr33yv2uV2poOcE6eNE58Yi/dIZrhaabfn5gtTPE50ni/SnrbRfKGh/
J06/l+icWZonPNPN+0nPr/Rcob+SMMElKboDf37Ax46w8ZZ6y58T8OMrny0L
2MSfB/BJpXpzBjzmvzut7xs8ccr7wfqkM7hsZbF94ghz0hM85sviBXc9jEhP
cLWcBztWlXC/lsYVnEYPOFLL453AP+V99ns4nMcXgSu1z2zbxryGdED/bPTa
e2/fSbgO4Lqvk8YqfOI6gLeYP/Sn102uA8WpN7PbUV3NdQBfXHvbXDaXn7dL
4xbtpyR+DDDm8ZaMn3TZobMlrB3pAB7WWXCrTTMhHcDtVq//3j9Yj3QADzLK
ftAqg89Pg4/75PzZIUmR7An86LxfJlWm3lwH8G5zTybXf+E6gId77L5l/5rr
AO48TD21rQE/x4fGe2IGdTriwc8BBDdVzd9cmsfPwwWXrI2ectbQinSg+EW1
B5mTkxxIB3Clr27T3OysSAfwtm9qA/ueaEM6gM/p0KAU86oF6YB+xre6S+tW
DpATnZOoLrTvf3tU7TeuA8XrZJguWfNJfB6iurBKbfhlNzvxeYjqQpTM/tMz
54nPQ1QXgtRmBJW3E5+HqC44fH2ievOVleg8RHVh+eicLd9C7UXnIaoL1Ww/
3n+fh6gujBGdswP+kZ2z8+/zENWFFLa/+r/PQ1QXJmu9UBv0wUV0HqK6UNi9
1fa6WDvReYjqwqnmLWZekpiRzujnOY3RX7pxMNeZ1nGEudZ0zeU6g2dXZ2uf
yuQ603qQo+1iDV25zjQfFan3YdF2rjP4rPVvPbcP4TqDr920p+UEe37uJLh7
4cGTB234uZPgnecvmNlBmp+jCv7mxvMW3rUepDP4+EOtH4RN4vtxgd/161Gt
ru5BuoF/vGiZEjPHUfSeagr5GkM13IaK31NNYeL1HcM3fhe/p5rC2/mzbVxy
xe+ppvDh1hQjQSJ+TzWFkCGRZV+Pid9TTWHyzw+DlswwEb2nmoJ80vszIbO4
buA1lUVX7ZZw3cBnbMpr3yGG60brdG63+xAWy8+fbWpfZTH/tx34e98zMf+3
HfhHn8hVJYlDPUlnjFscWOOa3eGP80/Bt1XL33nxxzmz4L8S7+pf/+OcWXC3
4N4S3TCuJ/izqcd8YhdxPWmd4O7Tu+du5XqCqzY6xL09zfUE79op93WGKz//
FLz+5MKVA5by80/F8zJ03rqI03nrIk7nrYs4nbcu4ogXxbhE/Nqu1yMnlNC6
E/Dyt7N9zpz5TutLwJWPmvfNjMqg+RUa9xjbq7+cy3sJ1nOAT+gyfPWeurcS
rA8Gf8XiZ7EOGFw/cODhubrhEqxLAA/0mT/0/uNrFE8CfnGZMGTFh1CKuwAv
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFm3ccjtX/xp97nHM/TaIopJQVofq2JxqaGtpDWxMlUVqaIu0dhaS9l/Yk
oj1IpLJTae/1u95dp9fvj/P6XM+5z33Ouc/47KfVUf336ZfXarU5Za1WiD4s
enJWq3UVvUUPVlHdbD1YSXXNVObp9/GizVUaCE8WXStzu+mi66isJpzlxjvE
Wu0R4bVV96n6eVS4lfBnwvvr+bqZnzVJfa6scrve6Sp6qOgJoi1U3lebR0q3
31H1fVQ6Cm8carURouur7KU2X6msJ7yd6FuirTOPt3zu9nsKf63SgW8UPSe6
zU6iz0T3s4n6nJ77+QLNc400h0Yq36iuU+pnjdJjLlKbP9V+qPB3wr+IbqI2
p4iuqTZHiH6h+hbChwsv4dsrzVX0MtFv9O6pqv9Gvw/S2EcK30zf0X18qbo9
hfsLLxU+MLjP41S3kt7tkrnfgzLjHfT8KtENMrf7OOEdVf+X2p+vuh801jzV
bZ557NYa7zzRb1V/qOq2yvw974m2V9lQ+FjNdTvhQzTuItGtM/d1gOq/1nsj
RXtF9/OLxlpBdVcJ/yS6osrVwj+LXpT6ZH0PEG3H/ISfz03nFT5rx6msmM7F
sem8ra95Piz6h9qcnvaWMwVeKNxDzzvo90D2i/3TfAYJz9R8dub8qG7X0u1p
M1DP91f7R1R/Emcz87nkTP4l2ktFr9ZeFd1XpaHwCXpne+Fr9OAN0f24AzWf
Td79QrhF7jYPCe+rdflE8z1VtLnoONX9Jvoge5X5ew7Ssz9V94loxl6ld1+P
bnOtxmqm52NV96voNSonc5Y1zvoqgznrNX/7eiqn6fdjeref6GS9e6pof5XG
anOq6lcVnaT6+dH1bwv3Seec87408x1kz17Ivf/zNWaVe7+4X4dlPg/scXvV
n5LWarfC/AD+0TY3P4HHsI/wjgYq/1PFRipnCB+g9m31/HF+az5nqu4jdbRH
6W/aC96kZ0NUf2b0HPsknvBP5m/je6iHXzTOPG4blZOE+0XPh3ntV3hv4UlX
C58EzxDeGl7DndK416q+r/Ay1e8tvLzwXcJ7CS8nPEF4T+G68Hg+LJ03zt4q
KgsSz2RuU9K676PfK6j+HrXtxX0Qvi9PfDTxvXrwmX1FdLj6eUl1l5Y+h6zt
fD1bLpi/sqd5WpPF+r2p8Ca5166x3lmS+C1no2PuO7AvfFz1D/BdarNU+HPV
ram+NhKeIbq8ShPh10Qbq6wDHw3m5YtqHnvV0mccHt6b95Eb6nMtreHeNfOZ
YdwR4c2EN9OzjTkjwhez98LthJdT/SWZ+XF/9bMF46qun/DmfCN8UXgr4anC
f6vPO4Rv0Lv3CI8Xvl74hML9v6Q2TUrLAM7qsSodhJ9WfR/hjsLPCB/Hugg/
K3yd2l+qORwk2lRlWeL5LdR/t5plwRD93kX4fbU/Rng94adYa+Gd4ZHCRwu3
F54o/Jj6eZt7IbqaypeJp52isqXwFLU5S3hX4Q9y87qjVDLuFGOLPqj6g4RX
F75TeGWV2WpwBTwvWkYgK55W/zep7mjRtaP5PfLhNr17FnxG7z0kfJ1wA9Ez
1O4f+LPwxWp3u/Dyeu+S4PVcQfhw8aCjhQ9R3Zb6fbBwT/ZO7xwoPJc1VJtj
mK/q11Wfvyb5tVlm+YfcWkXtPtXv61Ru0bNByALVtVf7v5MsuBk+Lvyj6vuq
rwvgb6KjVD+YNpwH/b6QbxF9Vu/epv5O5LvVZiCyTG0OFW4ufL/ww8LXCzcU
bcf9STLoTpVLhAvR+1Uu5z6J3oscFq5EJ7AuXGnRTtF8+nd9awP1e43G/UHP
DkYnEL1bdYcgq4TvFW4ZrQ8gf+9AzglnokPgKYwLbxO+hv6FT9Xc/uTb1eZJ
ldHCTUSfUBnFXROdqHKrcFPRF9R+seYwRrRjtBz4TXO7D9mrNnXRNnr2e816
yBiVs4V/19zGCp8j/Ifwqirz2RP4pNr/UbM+sG1mng4/3zKzHjC0Zl0ATLun
NO773GF9R1uVzqo7mz0Wflh0rp7/pDmtrH63Ev5ReEXhLWLtX4YJ/x2Q5C6y
Gzmc1y0Dmqht92j+OSDpK/AT9Jftg3Wuj4Sfjd4H6ncT/i7VL6d+HoB3oFup
zBSeke4yetuuonW1uU51G+n59tE6A3PYKXh/2efh0fx//+BxZ6p+hdzfzLe/
p+ebCo9EBkXzsu418zb43mXoANHngPOAXna/8HPIII37tJ59K7xQ87hWeAt0
CNGr6BdZET1X5txctEc0vz07Wr9olXQMZOJZwkOi9ZC1M/P9s6Lpu6KXR+ui
e4u+qPKJ8Auin2Wu565eLto585zQJ6/MvKbokBuqfJ/WelZae9a6U1r7v/Q9
iwt/47UqG6U7MkPPrhceKTpLZRT6kughmb8RfnF8dPueojeWHmuPaL39zczy
qWXaX8Zi7Flpj5Zq3A807l6iX6p8KLy36Hsqj8JnRb9QeV94T9ElPBPuyXxV
3hXeQ/R7lYHo6KLLVGapvhf6rMpHwvvQVuUR5JPoOyr3wOfYR5XBwuuITlQ5
Hd1C9DGVkzh3og+pHCjcVPRhlSPhHaKPq5yM7BT9VuXczPv7hHBf1bcUfU7l
HO606FMqg4RbiT6jcobwuqLPqpwt3Fr0SZUBwmtVlsXs2+6ccf1+S/W7800q
zwt3Zc3oV3ibyvL0Ie646APMQ/gf0dl69orabF/53HB+PhJ9VL9PhOeKjog+
Mx9Gy6Afa95H5NRPNe/vfLV7A5kn+qnKa8I7ic5VmSy8o+hnKlOEe4jO4Nvg
SewJYwt3406zLsLbsf+so/DWogtU3ix8v95nD9AbRD9WeVG4u+jnKlOR2aLz
VF5HrovOUXlVeAfRQyrLnT7Ba3yA8Bydt52jz+M+pXXgCzPL9QHp3sG3sIUn
ZeYpyHRsF+zlFkknxX7EjmiZmce9ktm+QK/jmyaKdhR9J1qnHYBuHt2+a/TZ
nKM2Oxc+m7OFe4g+rblOq5nXca4/FO6KnhJtL2BHt1O5TXiS6N3IXeFGhc/y
LcKNRR9UPy8gy6LX/knhDoXv1izkWuE7NEO4W+G7NVO4e+G7+JHw9oXP11PC
64vepXITukDh/XlDeOvCe/KMcOfCtviBme1B7HowfA++whlupjU/OPNZaim8
ZWn9olVpW6y3nq0fbYsgv9At2ma2LbEnu2duw1pgUzZLutZ2eucM0e/13a25
LxpvlbrPyFTVbyb6jRoWmddlrNo9KDoh+jw+LdxJ9Pjc9+W43OfoedVvVPhc
TxbeuPD9e1N4m8Jn/zXhTQqf9ynCmxY+j68Lby46rfCebsF5UN9t0nlrw10T
PQCeGm2fjRZ9hz3gm7gz+j2JsaLtZmwM/CvI5ONVv1TzvCFaxu+PLhn9jV2S
Xb8ws15ycDQdoPemCueq/72wPD9I9Z+qn805n8JvoudH2zHg5UrbfA+JDsu8
x+j5I5LsQLbtEq1vN4veK/YM3f2gaF3j5mj/w7vpXfwVn6v8VrO+zD7il1pe
Y6zMWBpwQWZ5ig6EP2paZvuobbRec2C0LrNl0meWiG6TWUfsWPob8S2cX5of
Di3NY+7lvIl+ycHJfA6uCr5TtyV/AHY7NvvxlXU8dL32ejamZp/JmerrHrUZ
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
ZBl+XfpnHGL3FyX99v8Awf9Z7Q==
           "]], Polygon3DBox[CompressedData["
1:eJwtmwf8T9Ubx+/3njt+RVJGGjIiSqUtFFpaomigRXtZaWiR9p7SoEiKlpKU
VBqEthJStISMJNH8V//P2+e8Xu7rdz73nHu+d5zzPJ/n8zwand6va980SZIr
Q5Jk+vtOkSRLKkkyUmCLqiQ5vEySKTq/q/q/U/scnR+h/od1nKX24jxJ9lf/
bE1ylfq/Em4jPFP4CuGfhS8R/lX4TuG1wpcKrxe+S/hH/d4+ai/QXNvr985S
/7nqryG8Qf31dOyt/nnC9dW/Rv0Xq3+dzt2hvkXCbYVnCV8pPFDjntC93aNz
1XXPndR/jtrXq/22+j9T/54au5eOuWrP0u//pPGPcZ363xZ+QPhWja+p39tT
50YKn6v+KuFOwm9ovr3Uv1TtOzT/COHJwuOFjxA+U3io8DSwjleFdxP+Xu3e
mud+zTdMx2lqT9VxkfofFX5N7cM05hXhXTT+W96n/v4gvD3vXPd8oM49JdxI
5xeq3UHHeOGGwl+ofZCOp4UbC3+pdjsdT3K98Hy12+sYJ9xAeIHaN+s339Lc
gslIzT9azz9O+FHhZmr31PM8KPyqxhV6/unCtdT3iMZuLXyM5pgtvJ8mWKn2
sTreE24tvErtU3Rdb+F7NcepanfUuZeFW6j/G7Vv0nz3C78gPE74KB2vC+/J
c6t9qI7JwjsLf6320TreFd5HeLnanXXMFN5X+Ee1u+iYJdxKeIXahY6PhHvo
fmur3VXHB8L7q/8ntY/U758lfK3wm8I3Cg8Tfl74SeHBuucJuvcXdK65zh2i
c8+pvaPai9Tuqf5jhW/XmJPU7qZzHwofoP41PI/mO1v4OuG3hP8Svl6YF/4A
61+4j+BPur+bhb/WO39Bc6U6dlP7XR2Pq/24xtfS+z5ev3G9cAdd84Guqa9r
9lV7utovqb2djn3Yx8KT1N5eRyvhGcKT1f5Xf68Vrqe/b2quUZp/G7XfUXsr
zd9Nf4dq/j00ZprOvyF8l9rLdW6a2h10fC/8P96J2s9nblfXsYna8zTfXaxt
jflc7Umao7HaBfen/u+C29dozLHCV2rM1Tyrxmyldnudu0C4qca8r/YKvZ++
6lsjfIvu/wfhnsLfCF8v/L1wd+HFPJfwKP3Vn+Q9zXGHrr9Kc64Qrq32Wt6F
xh8s/JVwIz3vEuEewl/ruuvUP0znF7BWdW4wNiPz+2FPbC3cQ7ha6jGM3UHX
HKaxn+rcVLWbskaF5wu/jr3R78/FHmlsHf1eY53rqP456n9V7SY6OgnPE35N
7UaseeFPhKeUtg911P5Oc6zV3/10v93Uf7HupWGV52X+zjo3UOfmFl6La4Xr
q91Qcxyi9se69pVo35hrgM7dqfb5uv7PxL+B/cGuYd+e1ZgZam+m417hbdU/
Xf2/B7efVv8g4Ud0P8+o/y2df1bzrw9eW2P5DfWfoeM39W+Z2oawnrZS+zH1
b6qx9wnPV/tAbITaDTTHAXw/jXmZd6X5u/K91ddYz7tA57sk/gavsH51jK54
Ttbnizry1Gvqdf3tqN84FNuHvdPxsPq/rvieGqj9r+a/jfWpvhH6ve8K28Oj
g+3bneofqf6XhZ9Sf3ddc6P6d9fcJ6j9q/qvVP8fwveyHnV9C7U/ZN3o+vXq
v0r9f+rcfeq/Vvh24Wc03+PCqzS+jfoWx/W4Qf1Xq/8vnRum/p90vpPaR+tY
o3YzXfc831Z4JntP428UTnX+IY3/R/gmzAvPylqM67u6xq4XXhr96wpdf4Pw
38G2pqOOXTQmLfy9N4v25m+Nv0G4Ivygxi8TvkB4la6/UfgX4cuENwjfXdou
Yh+fxGeofaXmfAb/yhoSrqMxe2jsHJ3fVvMv1/UXqm+1zt2kvmuwKRr/i46x
al8W38doXfuI+i+J7/vR+L0W635/xj5qbD3Nd53672D9qn8s9kLzttNxADZH
566K7+tJtR/D3uq6turbP/UauzI+7xPqH63+ZsJ7CX/B2tT8w4XHCk9V/zPq
vxsbU/Gam6T2xzpa8m4rXh/TdX+PqD1c47fU9ZfG9TBKeKSu36D+Dhp/m3AT
9Q+N6/Fp4THcn/Dh0b4MFv5W+EjhuTyP8Bep7581hE34Rv1HqP8z4SHqby68
t/B56rua9S18FLZZ/UPhGvr9T6O9H6z27zoOVt8DGt9U93NF9FdjhUdp/B/q
P0z9y/Rsj7LeCq9P1mkzja+rc4M031GspSrvQfZipr+naY5LdH688GjNuU0w
h4PLDRQ+lbUAXxGux5rF9sNnhLeBE+beQ+wl1sD5cEH4qfBO+I/c/qcGXBMO
p/b9rPHUa+hU9lPu3/ol9fvGXlZX+yA4hPp+FT5D7aXsr2i/q9RuD+dT/0Xw
F+Fm2Ezm4h0KNxeuC9eF7wnvjI8VXqXnPUp4jPDKzD4eX8+aPy63T8O3wQFu
KcyR4cpw3F6sBeHVek8bhI/FtnN9sP3qKtxfeILGbydcU+P7CT8rvK3w5sKF
jv6sTb2PDfr9S/Epwi3Uv7X6BrCHNN8y4Us132XCr6l/F75P7vV5YGqOuj6u
j0Mih/hN7Qs0fqzwVtjk3Ot9qX5rqPAwtR/Vb/4g/FfimAJMfDEEDont1rFK
eEJie4ENwBZgY47JbaOwVeck5vLYHGzP+Ty/8OXwQfyicKPcHAAucCIcT3iM
5l8T7Q8cHzuBvZiW2L8RoxCrtBZurPHjC9ufoRpXvco2pyrYZmOL4BxwD2xq
O+Hzhe/MzDcm69o+wuPhxthQ9b+svk2jz8J3/alz16n9X+r99V9h2z5J555T
+zxdf7Cu6av5JhGLZd6PrFn2CTYPX3VrYlsIZ4G7wIEOEJ5RmLs/pzGbVJk/
rojx0IjCNqcMtjHYIu75ffXflflZvs1sC++JfJ0YjViNGO50jb+3cPxHHDhc
fRdE/npfsL86P9rze4P36rnRX9wT7B+JkYhNiFGInW4vHA8RF91aek3vK9wo
81rHR9YJjrHwnftHe3h58LfGRtbG1yW2neyRfXR9w8x753vd+ynqu7liPgdH
aam/UxNzl3bRnhL/8m2xcTW498S2Dxu3lLglte1brvbhqX0kNhAbgK3qEWwb
8Ak7BX9PfEWnyE9vCF7LcIgdgjkT3OKAaK+vCP6W2BDWTs9g2/Kj/q4T3kP3
v13meIpvs1jHg/Bj9f+q/j2F62feA9jCM4P3RsPctukM4UGl1zi26ay49pcF
c8Xd4LeZeSv89dqK+WTLGF8PCPYXxDu3qW+hjvsz85Y20QfhS4nh6gf7SGK7
3aIe0D/YXxFjX6ZxT1Ucey9UuxX7V8eXmWOu7eBGiWMx1gzc6orEa2nX3Hu1
X7B/2yX33u8b7B9PzOx751XMJ//WbxyZer6n1N4ht+07O1gvYM3CtfDJrGU4
Qc3gmBSu0CS3LTwnWN+AE2weHCPCFVizq4TXJ17LcI66wZwRLoINrY/vCbat
8Fr4LZzh3GAbjO0+Jdg248PwdScF+zZ8CLb85GDfwj2jdfBOeRZsxEx8XWbb
wZ5co7G/J96r78fr8aH40llxvWKzsd3E//qXvK05boE/65oZam+hc33gVprr
j8R78mddMzuuT3w0vvq9eL/YPGzfH7l9A3EmfGdJ6rXKmh2iuc7LzIfwKfhg
fo94r5P6alRZZ0Fv4Td3wHbmjuc+UXu7KsdgG2MxXTtB7Xc5n5oTw40vzxyb
sEcvzcwnJyaOqbHp8MX6cfxj2B+dm62+2onfYd/MsQkxxYWZ1xxr727N/YFu
5IP4vfCx+No2wsdjS4PjtS2EawhvSmwg/GH8/vhofPXawnwUXvqu8Jy4P+EU
G7mF+j/C/uncQLih+k9mvQTHh6xvYiViEGKRz+P6xKezfubG9Q0HYb3MY88k
9umsv4Ny28Org+PTG/Qbt1QcS72BPSemqjgmJDbspXP/qt1c7XXwoWg/4Fys
T+whfJD9zPs+Bg6t9uXEUGpfrvmvULuL2qHK+sb2kQ8Ni/YcXz0oOH5enZtr
EOuiv30a7Rkca2Dk259ovnaJ9w/xXsvE5+DfvL+BcG/1bV7lGJPvWZeYE96k
+QYn5oRww4XRfqCPYB/rC+8gfLjmqlQ5piG2QbM8U31n6vxDMX4ktv0y2iM4
CPZ2v9Jrh7gU/9tW/SfAHYLj/dbCx+G7g+PxAbquEftA507U3xWFbSEaxU2F
YzhiOWKWAbyL3PH8+Ty7+t5Mze+xocQoxIDEgsQw/eFLhe012lTGflTfavXt
WLG+83lmLXRQ/EYbOaDaR2bmhi1y6xUXButL3+vvKuGmGvMGPDe3XnFBsN6E
PT4M2xGsN6EPpVwf9aJDdPRXuzmcO7NNRTvGx2BriZ+IrfcU/ijzN+HboGHh
y/BBxC74bHwTPoVYCB+Kr4GD6jGTLsH2jRhiE+Fjgu0VPoJYinvkXuFom6p9
bLD9Im4nfm+SeP3iY4il4Bz4niV6P7um1rT6F35PvK9LK14zcO7q6usWbB/W
Z9a3m+rcr8TrheOBIZFffqNxP/Jsun4ivDZ17Mua6J36mXn20zVuIvyiMJeH
01cTbpBb/+ut/hdK62srE9sQ9LYPMr9rDUseZY0U1mJYv9PU7ph5v+yUWtP9
Nlgva6RzL6bW3dHfu+p4KXUMVk39XYP9yeO5uc7P/E6V+VAz4e7oFKX1FObe
Ehus9h65+cVFwfoOMctmwscF20c0BrQGYs5+uTVStFI4c1/iK811jI7pwufp
77rM99Yt9ftF50XvfRH+mjoOZW2j+Y/BhsDF4xwXp/4+XMszkoNYpHv8B1+i
9i/67Xt0/JZa4zhJ7Xt1DwfzvtT/p/BAYjj1jdQ9fij8dOHYgm/Et/pN57bU
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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt13n8T1Uex/Evfr/flxnCmMiedbIvWbJlSbKFsaUsiZhkLfugZtLC4CfT
jL3U2IuisQ1mshTKEmKypYyoaVBTqVBNz89cf7wf97xf533Ovfd8z3K/ZfoN
7zwsZyqVeo0yKWdWKrU4Vyo1IiOVmsyPBy9hXZSPC57BP+fbpFOpt+Vuoz3q
Vsr1wZvnSKWKYd9RFb603KPKR7VtL1dbri82Sj+jM5J8b7kf6AJfQnaJ3I98
AdrMl6Sl2BxtL9Nz/CX9DcOG8CfkripX0H4rneRvoPVyN9JCddlyJdx3MH9A
25ZYJSy/3AasMD2PzcRulhudK3nfeO/bMpNxiPH4WP/n6CGZ2vQnue/lGniP
5/TVl1ooF8evUDV+BT2uzX+orew1/hvl/srDqTTt5pfjq7XdpTyRlvE3ukcH
/fxFpjadxwZ6lgExFuryy/V0/RivoX4/3ybGNivJRpvD/KF4br6YbD/97cTr
eZ/S+imKPYDtwOpipbCS2BDsXexOrDLWU/tFyq/i2/Q3QKYr3oWqKk/Bp7jm
oM/VV+LXxZziS9FQ/qD+WmFVtPmKZmEXsCHYw/zX9EfsIjYUG8yX0XYMdgLr
ijXACmP3RP9YZ8rF/4i/EOPOT5Qbw2/zzB8a0wWe55K6HnK94l3i/uqayX7t
modWqc9D2do+qf47ms0P0nYkNpTPLfcKlptmYJOxivr8PX9OX/2x1lgFbBJ2
BuuFNcOytF2G5aJnsElYJraUz0lPYxNjTsa7afc63yEWJ1+Oxsmc4rtDjeT+
R4uwq9gkbCyf1t/LWJqmY0/EosZe5K/JPcaOw/Jir2H56c/YM1gGtoTPQU9h
E7CD3r2Wdu+6vuj6El3F58p8pTxabjh/Vf0QfjCtxZbwt3jmyXKfYAOwtnLf
xrzhH6Q1WFX+v/hMuXfSybyO+X2JpmO7sftjz6BGsa7lP9N2kLaN+e/x+XKX
sbHYI/w1mod9jY3BRoSXvaZcUfvhNJ9fhx/BDsoWwHrFvMVmxJ4Wa0K5H1VS
fhL7VH8D5dthnagjVVH3TPyermVprPJJuW5yDdV3pl9TZXVPx2/s+gO/QPkb
uXFyj/JfUDb2tvr+yg/Sr5SfwM7HeMm1wYpjg2L9YdtjjvDlaSL2Ed9Trrlc
Pu+3Jt6LZmNTsMUxN6yF8d51LD2g3U78bpmp/HZ1a2Xq4M9jmcG1HSlTH1vJ
F6J52O+wVbHHavNQrL8Yi9zJ2u/Ij6Qc2C3YAdfu2rVyj0LaFgpP3WiKPrL1
MdW1obavy5Wm5XJT45mph75650zutVqukdxfZW6mFXLTYj7iL6kf5h5f4uX5
enIrlH9Bc+Uek7sD2x71VCF+Kz5P5v+XSGqGttmxL8d+ik1Qf8R926lryhcU
2oaVo1XYC9gx7AP3PSu3Sdv3+Y50K1aKvyDbXX/dspIzojz2BVaWb4vvVa5J
tegsfystVM6IvdQ9RrlHXWw5X5DmYI9jjbF1fBlaiU3H7sTe4uvQm9iyzOQe
+/hG1JBe5dvRfuXGtFduldw6z7Pb803zfB/gXWWa0tY4x2mD3Fy5HdSebyrn
ksrN3y63halM67F52H4qpbzGuPxctr7+m8htuj7uMf4v8y3oDeXq9Df5hdo1
x/4RZydtwhZgzbC/81VpIzYfa43t4evHPoGtwM7Sb/n33Lctdvv1tRRrqmY6
2WeejTMqK9nnY78f6PlmZSV7TOw11dPJHpDt2ofvTdXSyX40I53MoR3Xf7P4
7VbzLWMtKdemrfpdpE0rbBdfl97ClmK1sGf5bz3feGwQttW9Txr72fGNoK6b
zF20W7ke7ZJbHnON6ii/oW0H2XFZyf4U+1SNdLJ/zHRtQGuVS9Ey+T+o/1d8
w/CHtW2DNYl9Se4o1pKOYZti7PQ5wbN00v9pvHDMb/w3ylu0rRbfWZnJeRvn
7pdy7WM/iXMWHx7PizeUq84fovtinWLFsCKxd2p7BLuD3sc2xh6EHeKb5Ur2
5NibO2CH+eZ0FFsfey72Ht+C/oltwA7HeR7zyT2KYzfFHJU7gDWhfdhqrAjW
I+aoXEXsl9ipOG+wzVhVrDx/hebEevReo7Bh/CPeb4RxaYndQb3TybdnfIPe
z/elPjGeWJ9cybyP+V88zpiYQ7H2sJJYMf496hX7CFYCK8qfpAGxDrAqWDn+
RMzfWAdYZawsfzzmc6wDrBJWhj8dzxLzLL5FsWr8nozk27JXnEd0OSM5Px6W
28/vi+8G/iPZEbGG+Eba1ohzCz+G3UUnsM3YmRiHOBvlGmM1+XP0FHYauxe7
OzNZ5xuxInRT/HYxJ41fXvf/UO6+OBv5TzOTb8Y308lZEGfC+czknNyRTs7X
OGc7xZlk7Etrf1HdPfHfI+ZvnBOxv+jvBn53zA9sMZYHyxtjEO2xpdjPsHz8
Puoa6xa7ASsY+398Z/Bz6RS2FeuCHZdrHecEtgX7JDM573emk+/e+P7dG1ns
FW3zyRXgD9K9sf6wolhh/mpW8v3/mff4N12Jb/nYS+LszUi+rWfJvRPjH/u6
bF4sP38xzj3+WPyestP4nwAYB7UC
           "]], 
          Polygon3DBox[{{1516, 906, 1122, 1887, 1371, 1372}, {1442, 596, 611, 
           1270, 1020, 1881}, {1517, 907, 1250, 1895, 1373, 1374}, {1816, 864,
            705, 704, 1238, 1767}, {1848, 941, 792, 791, 1133, 1687}, {1771, 
           1243, 716, 717, 1244, 1772}}]},
         Annotation[#, "Charting`Private`Tag$61957#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1VbtOVVEQ3efcffa5XKOJCZQk+Gg0EXlrobQKyuNS2qiADRptLdREUbFQ
8VH5A75QUGPweblAZ1QQSxMF/kBFEATBtbLGYjJzZs+emT2zZs6mzlMdJ2Pn
3B1QBvQsce5t5NxWKO975+YhL4CS1Lle6DaCD0I/A9u94E9hP+ZkUxOcG4X8
BLraID3Pf+HsHmxLs861QH4N+oSzD7DJmn/GY1x+D+HOHHhFLLno5IP3Iy+5
CfQ8Urwsckogr+EBk6AJ6BrB95uNB22Br9/gL0H1iDsFm1H4vuRlH4M3QL8O
5xPgAd8lkB+AD4O/iBSjDTQS6awHdofBDyH+Wfgfh59zsd7Cd/B9A16xLoM/
MnnAYn2GPIYcunH/IXTL4Du93sZ6nYDNUcgr0DdbDqxpXVD9iol0w6av8rLb
Az6Cs0noPsJ2Cbo3keLxXYuR4h20XqSgPuT8E/wKeCFSL5hrr1fNLoKvgs7j
/ILpWM9v1ps569uC9bDGS2ZexFEP5HLQLL53ePVkFT1qt3pOO/UlB/kYeKVX
vR34JL7/RKpfn1duP7z6TZtK0xUsNutP3I5bbOaw5IWdAP1dL6LMvjNX3kvY
A/BuUBmo2qs23uKyhpetL62WZx68GCnvQiIsdaaaAWLzCPRd9vZSI8rEWYfd
5SxtA7a/w3ceudd7+ct64Y9YS718sbdr8N/oFXsX+BfU4St8NGV0ljHbVqvJ
lOVxIFJejJm3uNVBNeQMNXj1k7E4G7zHmm9Hbu+85vFmrHm8Fcvf5lh1JBaJ
yeNBdot2b31WGGJNcqlqyDdyNuatV8Qta8VeVwVhI021T+i7E3w6CM/EdYXl
QLxxLxH/JVYT9o57iTPD2WE+q5D/ZjSnV2PN7LVYc8d91B1Ue+JlxQuP7Tbj
zVZb4r9oPctZD8usj7u98Mt+xcjpDHwve/miT8rch8RSVxCel2zPcP5abAY5
L/O2N1gjYpy4eGV15vszhklis2A9/o/5cdvfZYZh5sZ9wlpx1mq9fBDPrAfr
zFm8jrv7IPfH2pdNtjP7TX8jVk3abE65f0qsbjW2R5j7+6AdwrnkXuIuIrbq
vLDB+Sq3eZi1fwbv8h8xGPTOmaC3ElvMdQjfp/G9IVWtaE9fzJP7nbghNm/z
J5Zodpgne0/McO/TJ+P2WM/on7GC5Uw/PlUs4jNn2GGf621vc/889pq3vMn/
AFnh5X4=
          "]], Polygon3DBox[CompressedData["
1:eJxNlElvjlEUx+9z3/s8z9vShegHIFYk6KBlQbe0xnZroa3XBmFrHjoJQogp
PoBKzSxEU1PtRLRYSmi/gamir05+/567sDh5zrn/c89zhv+5SzsPth3wzrl2
JCC7M+fyxLkCxlzu3JPUuTecf8deXnSuEzwDT7CrsavwuUCAXZztBRtHlmE/
w36A3o/fL/SJeCfH/zz4OaQGvBbpRe9BKsAWIV3oT/FP0VvRjyCHkUrsAWL8
AZtEMvRaZDN6e8z5Gz6fC87dxH9hbnIDvalg2ApynsTvKmeLc4up2IeQh+TS
Eyz3r9Tcwp1b2Ne8+eue6hsEHwUfQy9yv89bDaqlE3sErBffKv6V863AfwfS
iD4NvobvNuz9+Pehf8T/OfYZ9PXBannNWQ36Pnw+OLuju3Pk9FO+/G+OsxPe
5vObs5MxxyXeeq7c7yH3kVbFZJYl4m1NYszMeqLeKOcX4Hsyy005NaDPggXs
ZmR1MH60oA+D16Nf4l8bsV9hX/YW44uzGSh2QDYlFkPzFmduB4snLol0aWIx
Va84MD/7xPopTin+RW9c6wqGiyOzwfo3hF1G7gab6RWwt8Fm/SMYh4Zif4tI
JXobsg59lDyve5ux+pXKJ7EeqOch2D6oZ/VxBxRT89JuaEc0M+Wv3pSD9WY+
R/Qp8DvB+Po+s5qb43zr0KfAjvHvo8i0+kI+O73xVz30wfZNnBOnNCvxWTkr
d3FM54Nx39Q/7VK3t/1RPZr1FvC6YL2fiPPSPDcgJewp3Q82b2Hq+cpgfBPP
xHFxXfmIK+JXf6xPfVF/Srn1UJh8lJ96cJq7p7z15lFq+6qaVP8sd2aCvQl6
G8T3DrDtyjHyUfPqiPsiDovLOhM/5SNf7Zj4/Di1WjUz8XMtsRckVmNTrGdV
ME6+Ax/JDP+rnc6MH2POYjbE/ow7+6fua4ba/fpYu/irWSqe4iqeuPiJs8bM
+CN/1Vwb3z/twkzBatdu6t/KQbkOk391tBsjP7Tfx+mPT23Gep+6/3tf9Fbp
TRyI+649KMd6XqaG6U3We6Ud1Nt71ttuqh5xUz7y/QfY+sJZ
          "]], 
         Polygon3DBox[{{1276, 635, 634, 593, 1264}, {1796, 649, 648, 498, 
          1739}, {1890, 1155, 1156, 221, 1469}, {1636, 265, 1030, 1194, 
          1892}, {1273, 640, 639, 501, 1192}, {1882, 351, 652, 1277, 2046}, {
          1280, 658, 191, 544, 1225}, {1882, 1021, 1069, 327, 1642}, {1806, 
          631, 210, 443, 1711}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVGEcwOF3vN9HLEoxFBfayghXLkxL0wQjyGtaaY2XcdS0TKUW0VLx
A6SCdKG8RIgL9RPkqm1qWn0Yn4Mwv3n+75xz5px5marETOd0LISwraQhmhPe
CpWdGUKxdbe5xFxp7jFfM98w1/AW63ifd/iYD9mpCXOKbznHJb7nCpe5yTUe
cJOHbMwK4ZJ7pPTbeoxlakoP4cj6No+je/GEzfzDFp7yLs/Yyjb9Nd/jP7bz
P1fTQhjS5ewQ+jmoFxpTvs9eMsvz9PCJZjSsbpU4PsJRZTonwWfq1aSmlBH9
dj7XK/Up7rpZpjs2zqSm9VSPFPP5a85pQfNKqdh1A9xz/Kdn/8Z9rnCDS/zA
d1zkLN+wyT6W2rekdcr6qvmBeSA6xg7eZAOrWctyVrDetXHnjytuPcor2vUc
RdY7LOQPFvB7tG/cYh43mMuvzOEXfpafEj5Fe8vr/BjtobnLd2dwPdof/rKo
NnuFXHNB7OK/eQ6C5T+w
       "]], 
      Line3DBox[{841, 221, 842, 222, 1078, 336, 223, 1080, 338, 224, 1198, 
       507, 277, 362, 225, 355, 276, 1473, 210, 631, 1806, 632, 633, 634, 635,
        636, 1282, 637, 638, 639, 640, 641, 1278, 642, 1809, 643, 644, 645, 
       646, 1279, 647, 648, 649, 650, 651, 1277, 652, 653, 1805, 654, 655, 
       656, 657, 658, 1280, 659, 1811, 660, 661, 662, 663, 1804, 665, 603, 
       841}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1287, 1554, 1600, 1647, 843, 1646, 1645, 1714, 2062, 1474, 
       1288, 1712, 1761, 2073, 1475, 1713, 1555, 1650, 1744, 1476, 1649, 1885,
        1897, 1715, 1477, 1289, 1891, 1898, 1717, 1478, 1290, 2076, 1765, 
       1766, 1813, 2075, 1291, 1899, 1479, 1292, 1900, 1480, 1293, 1901, 1481,
        1294, 1902, 1482, 1295, 1903, 1483, 1296, 1904, 1484, 1297, 2035, 
       1591, 1485, 1592}], 
      Line3DBox[{1298, 1556, 1602, 370, 2048, 1601, 1557, 1603, 373, 1652, 
       1651, 1718, 2063, 1486, 1299, 1648, 1763, 1487, 1716, 1876, 1905, 1654,
        513, 1604, 2038, 1558, 1658, 515, 1657, 2051, 1655, 1795, 1814, 2050, 
       1300, 1815, 1967, 1301, 1906, 1488, 1302, 1907, 1489, 1303, 1908, 1490,
        1304, 1909, 1491, 1305, 1910, 1492, 1306, 1911, 1493, 1307}], 
      Line3DBox[{1308, 1559, 1659, 1745, 1201, 1605, 1560, 1607, 1660, 2032, 
       1661, 1606, 1561, 1608, 1106, 1664, 1663, 1662, 1719, 1494, 1309, 2049,
        1653, 1764, 1495, 1762, 2074, 1656, 1496, 1768, 2078, 1767, 1816, 
       2077, 1310, 1817, 1968, 1311, 1818, 1969, 1312, 1912, 1497, 1313, 1913,
        1498, 1314, 1914, 1499, 1315, 1915, 1500, 1316, 1916, 1501, 1317}], 
      Line3DBox[{1318, 380, 1168, 463, 235, 1045, 295, 236, 1046, 296, 237, 
       390, 1112, 389, 1319, 2079, 567, 1320, 1917, 1819, 1970, 1321, 1820, 
       1971, 1322, 1821, 1972, 1323, 1822, 1973, 1324, 1918, 1502, 1325, 1919,
        1503, 1326, 1920, 1504, 1327, 1921, 1505, 1328}], 
      Line3DBox[{1330, 1823, 1974, 1329, 1665, 1667, 1666, 2069, 1746, 1331, 
       1720, 1562, 1609, 996, 1332, 1638, 1563, 1610, 1564, 1333, 1722, 997, 
       1721, 1565, 1747, 1334, 1770, 2052, 1670, 1769, 1671, 1335, 2081, 1771,
        1772, 2080, 1336, 1824, 1975, 1337, 1825, 1976, 1338, 1826, 1977, 
       1339, 1827, 1978, 1340, 1922, 1506, 1341, 1923, 1507, 1342, 1924, 1508,
        1343}], 
      Line3DBox[{1345, 1828, 1979, 1344, 1829, 1980, 1346, 1668, 1669, 1981, 
       523, 1347, 472, 1611, 1566, 1348, 345, 2045, 1612, 1567, 1349, 474, 
       1723, 527, 1350, 2082, 572, 1773, 1675, 2053, 1351, 1774, 1775, 2083, 
       1352, 1830, 1982, 1353, 1831, 1983, 1354, 1832, 1984, 1355, 1833, 1985,
        1356, 1925, 1509, 1357, 2036, 1593, 1594, 1358}], 
      Line3DBox[{1362, 1926, 1510, 1360, 1927, 1511, 1364, 1928, 1512, 1366, 
       1673, 1929, 1513, 1724, 1877, 1930, 1676, 1750, 1514, 1615, 1878, 1931,
        1617, 1677, 1515, 1616, 1879, 1932, 1618, 1680, 905, 1679, 1678, 1729,
        2064, 1516, 1372, 1780, 1781, 2084, 1517, 1374, 1933, 1518, 1376, 
       1934, 1519, 1378, 1935, 1520, 1380, 1936, 1521, 1382, 1883, 1937, 1522,
        1599}], 
      Line3DBox[{1383, 1596, 1595, 2037, 1381, 1994, 1840, 1379, 1993, 1839, 
       1377, 1992, 1838, 1375, 1991, 1837, 1373, 1895, 1990, 1779, 1371, 1887,
        1989, 1776, 1778, 1777, 1370, 2054, 1751, 1752, 1726, 1727, 1177, 
       1369, 1569, 1614, 1640, 2039, 1639, 1368, 1568, 1613, 1175, 1725, 1367,
        1748, 1749, 1674, 1672, 1365, 1988, 1836, 1363, 1987, 1835, 1359, 
       1986, 1834, 1361}], 
      Line3DBox[{1385, 1841, 1995, 1384, 1938, 1523, 1386, 1939, 1524, 1387, 
       1940, 1525, 1388, 1886, 1941, 1526, 1728, 1880, 1942, 1682, 1753, 1527,
        1619, 2040, 1570, 1621, 1683, 1842, 2056, 1620, 1571, 1622, 1686, 917,
        1685, 1684, 1731, 2066, 1528, 1389, 1782, 1783, 2085, 1529, 1390, 
       1943, 1530, 1391, 1944, 1531, 1392, 1945, 1532, 1393, 1946, 1533, 
       1394}], Line3DBox[{1396, 1843, 1996, 1395, 1844, 1997, 1397, 1947, 
       1534, 1398, 1948, 1535, 1399, 1949, 1536, 1400, 2055, 1681, 1537, 1730,
        2065, 1572, 1688, 1754, 1755, 2070, 1623, 1573, 1625, 1689, 1690, 
       2059, 1624, 1574, 1626, 1138, 1693, 1692, 1691, 1733, 2067, 1538, 1401,
        1896, 1950, 1784, 1539, 1402, 1951, 1540, 1403, 1952, 1541, 1404, 
       1953, 1542, 1405}], 
      Line3DBox[{1407, 1845, 1998, 1406, 1846, 1999, 1408, 1847, 2000, 1409, 
       1954, 1543, 1410, 1955, 1544, 1411, 1956, 1545, 1412, 2058, 1687, 1848,
        2057, 1732, 1575, 1696, 1756, 2033, 1893, 1627, 1576, 1629, 1888, 
       2034, 1698, 1628, 1577, 1631, 1146, 1700, 1699, 1889, 1957, 1735, 1546,
        1413, 2086, 1785, 1786, 1547, 1414, 1958, 1548, 1415, 1959, 1549, 
       1416}], Line3DBox[{1418, 1849, 2001, 1417, 1850, 2002, 1419, 1851, 
       2003, 1420, 1852, 2004, 1421, 1960, 1550, 1422, 1961, 1551, 1423, 1962,
        1853, 2005, 1424, 1694, 1697, 1695, 2071, 1894, 1425, 1734, 1578, 
       1630, 1579, 2041, 1426, 1641, 1580, 1632, 1581, 2042, 1427, 1737, 1018,
        1736, 1582, 1758, 1428, 1788, 2060, 1704, 1787, 1705, 1429, 2087, 
       1789, 1790, 1430, 1963, 1552, 1431}], 
      Line3DBox[{1433, 1854, 2006, 1432, 1855, 2007, 1434, 1856, 2008, 1435, 
       1857, 2009, 1436, 1858, 2010, 1437, 1964, 1553, 1438, 1965, 1859, 2011,
        1439, 1860, 2012, 1440, 1701, 1703, 1702, 2072, 1757, 1441, 1738, 
       1583, 1633, 2013, 1881, 1442, 1810}], 
      Line3DBox[{1444, 1794, 1793, 2088, 1443, 1709, 1791, 1708, 2091, 1792, 
       1807}], Line3DBox[{1446, 1861, 2014, 1445, 1862, 2015, 1447, 1863, 
       2016, 1448, 1864, 2017, 1449, 1865, 2018, 1450, 970, 1451, 1966, 1866, 
       2019, 1452, 1867, 2020, 1453, 1868, 2021, 1454, 1706, 1707, 1803}], 
      Line3DBox[{1808, 1459}], 
      Line3DBox[{1598, 1597, 2022, 1884, 1460, 1869, 2023, 1461, 1870, 2024, 
       1462, 1871, 2025, 1463, 1872, 2026, 1464, 1873, 2027, 1465, 982, 2028, 
       1466, 1874, 2029, 1467, 1875, 2030, 1468, 1798, 1812}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{668, 1160, 1161, 845, 2073, 669, 1094, 854, 2063, 691, 1204, 
       993, 1105, 1106, 1107, 702, 995, 1046, 1108, 1109, 715, 996, 1047, 
       1205, 1206, 727, 1207, 1981, 1113, 1172, 894, 738, 1988, 904, 1928, 
       749, 914, 1939, 761, 926, 1947, 774, 2000, 937, 787, 2003, 947, 800, 
       2008, 957, 812, 2016, 967, 822, 2024, 978, 833}], 
      Line3DBox[{339, 227, 1650, 369, 367, 1763, 557, 383, 1719, 465, 237, 
       298, 1610, 239, 301, 1611, 241, 399, 1674, 398, 1929, 750, 915, 1940, 
       762, 927, 1948, 775, 938, 1954, 788, 2004, 948, 801, 2009, 958, 813, 
       2017, 968, 823, 2025, 979, 834}], 
      Line3DBox[{670, 1227, 1090, 1092, 1091, 1897, 1162, 1164, 988, 1163, 
       989, 1905, 1098, 1096, 2049, 1097, 1229, 1230, 1110, 1112, 1111, 1170, 
       1171, 997, 1048, 998, 1049, 1081, 2045, 999, 1050, 1000, 1052, 1175, 
       1002, 1174, 1003, 1930, 1121, 1119, 1120, 1941, 763, 928, 1949, 776, 
       939, 1955, 789, 949, 1960, 802, 2010, 959, 814, 2018, 969, 824, 2026, 
       980, 835}], 
      Line3DBox[{671, 1165, 1166, 1898, 1167, 459, 1042, 2038, 990, 1104, 
       1101, 1228, 2074, 1102, 703, 1240, 2079, 1241, 1242, 569, 2052, 1115, 
       1114, 1173, 474, 1051, 1001, 1053, 2039, 346, 1054, 1004, 1931, 1056, 
       480, 1179, 1006, 1942, 1127, 1125, 2055, 1126, 777, 940, 1956, 790, 
       950, 1961, 803, 960, 1964, 815, 970, 825, 2027, 981, 836}], 
      Line3DBox[{672, 1231, 2076, 1233, 1234, 1235, 1236, 1103, 2051, 1100, 
       1266, 1267, 1268, 1239, 2078, 1238, 704, 873, 1917, 716, 1243, 2081, 
       1245, 1246, 1247, 2082, 1248, 1118, 1117, 1176, 1177, 1178, 1055, 1005,
        1932, 1057, 1082, 1083, 1058, 2040, 1008, 1060, 1181, 1182, 1180, 
       2065, 1010, 1134, 1132, 2058, 1133, 791, 951, 1962, 804, 961, 1965, 
       816, 971, 1966, 826, 982, 837}], 
      Line3DBox[{675, 847, 1899, 676, 1967, 856, 693, 1968, 865, 706, 1971, 
       875, 718, 1975, 885, 729, 1249, 2083, 896, 740, 1989, 1122, 906, 2064, 
       752, 1210, 1211, 1130, 1131, 917, 765, 1011, 1062, 1135, 2059, 930, 
       779, 1013, 1063, 2033, 1216, 942, 793, 1217, 1218, 2071, 1184, 953, 
       806, 2012, 963, 818, 2020, 973, 828, 2029, 984, 839}], 
      Line3DBox[{677, 848, 1900, 678, 857, 1906, 694, 1969, 866, 707, 1972, 
       876, 719, 1976, 886, 730, 1982, 897, 741, 1990, 1250, 907, 2084, 753, 
       1129, 918, 2066, 766, 1215, 1012, 1137, 1138, 1139, 780, 1014, 1064, 
       2034, 1140, 1141, 794, 1016, 2041, 1065, 1220, 1221, 807, 1222, 1148, 
       2072, 1187, 964, 819, 2021, 974, 829, 2030, 985, 840}], 
      Line3DBox[{679, 849, 1901, 680, 858, 1907, 695, 867, 1912, 708, 1973, 
       877, 720, 1977, 887, 731, 1983, 898, 742, 1991, 908, 1933, 754, 1251, 
       919, 2085, 767, 1136, 931, 2067, 781, 1219, 1015, 1144, 1146, 1147, 
       795, 1017, 2042, 1066, 1149, 1150, 808, 2013, 1020, 1270, 1223, 1224, 
       1269, 1286}], 
      Line3DBox[{681, 850, 1902, 682, 859, 1908, 696, 868, 1913, 709, 878, 
       1918, 721, 1978, 888, 732, 1984, 899, 743, 1992, 909, 1934, 755, 920, 
       1943, 768, 1252, 1253, 1950, 1254, 1255, 1142, 1145, 1143, 1957, 1185, 
       1186, 1018, 1067, 1019, 1068, 1271, 1285}], 
      Line3DBox[{683, 851, 1903, 684, 860, 1909, 697, 869, 1914, 710, 879, 
       1919, 722, 889, 1922, 733, 1985, 900, 744, 1993, 910, 1935, 756, 921, 
       1944, 769, 932, 1951, 782, 1256, 2086, 1257, 1258, 1259, 1151, 2060, 
       1153, 1152, 1188, 1274, 1284}], 
      Line3DBox[{685, 852, 1904, 686, 861, 1910, 698, 870, 1915, 711, 880, 
       1920, 723, 890, 1923, 734, 901, 1925, 745, 1994, 911, 1936, 757, 922, 
       1945, 770, 933, 1952, 783, 943, 1958, 796, 1260, 2087, 1261, 1262, 590,
        2091, 1283}], 
      Line3DBox[{687, 1034, 2035, 1035, 688, 862, 1911, 699, 871, 1916, 712, 
       881, 1921, 724, 891, 1924, 735, 1036, 2036, 1037, 746, 1038, 2037, 
       1039, 1937, 758, 923, 1946, 771, 934, 1953, 784, 944, 1959, 797, 954, 
       1963, 809, 1263, 2088, 1281}], 
      Line3DBox[{831, 976, 1040, 2022, 820, 965, 2014, 810, 955, 2006, 798, 
       945, 2001, 785, 935, 1998, 772, 924, 1996, 759, 912, 1995, 747, 1926, 
       902, 1986, 736, 892, 1979, 725, 882, 1974, 713, 872, 1168, 1203, 1202, 
       700, 863, 1201, 1043, 991, 689, 853, 2048, 1093, 1041, 987, 666, 843, 
       1089, 1088, 1200, 1199, 1033}], 
      Line3DBox[{832, 977, 2023, 821, 966, 2015, 811, 956, 2007, 799, 946, 
       2002, 786, 936, 1999, 773, 925, 1997, 760, 1938, 913, 748, 1927, 903, 
       1987, 737, 893, 1980, 726, 883, 1169, 2069, 520, 714, 519, 1045, 994, 
       701, 382, 2032, 1044, 992, 690, 373, 1095, 512, 667, 2062, 844, 1087, 
       1226}], Line3DBox[{838, 983, 2028, 827, 972, 2019, 817, 962, 2011, 805,
        952, 2005, 792, 941, 2057, 1183, 1214, 1213, 778, 929, 2070, 1212, 
       1061, 1009, 764, 916, 2056, 1128, 1059, 1007, 751, 905, 1124, 1123, 
       1209, 2054, 1208, 739, 895, 2053, 1116, 728, 884, 2080, 1244, 717, 874,
        1970, 705, 864, 2077, 1237, 692, 855, 2050, 1099, 674, 846, 2075, 
       1232, 673}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
1H0jX6Li1jn+i/3uLnBmT1+ThGAfHLyxkRhuTkX3gymrNeIfgejArfizaxCm
XFi2cbBT0C7EwD7ypCP8scjS2T7UAtRWDZaCFRrykJ1H3pz+DNsDNheZvkdQ
inId/YV01FKLttMj+cI0bcG4nFgHExueRIVdpePChRBe2c/ekJHAn6bE6LPH
j+jHkg0NePeqgNqTyFDoCgoitXMQ4KZfuLzySSoa19WGN2i7QNULXiWmMTLm
8rZrnNckod1EFn+IZgT0TN2Ml2D4t7QoxafFDF9wellXSt8wHJj8bgr8F/+u
Z3sbOcPg31WhwIev5z1gat0z55pDPdB2cctTy04qWlw/rzGh9gmq0oqu3eUj
Qo3+tcW19hSsWnhsosrjBKo7GtfubyOC3TYz9mOXKSiYKmksyPke+jffbVzD
ycDb6UbR9cDQF3aGh+4POILM+rebplaIYNZ/biTiHAUb3l5YKib/5/P5f9b/
z/r/n9c33mDNWKDQ8b5/miy/bDpq7ZF9LpwW9B/f77AQKqt5vxh+rdn5Ssqb
jLqZPz6Vx5CgUeKsnG9GN0SenbI958PQD/oCBulyPfBkSPfpr/IeGPiuV/eW
Oo5K+yIzpzeOQTx/zayo7wB88Ot7saQ7gyzWzxzHnnXDn9vb7CxFmmDxXUXf
scABvHib0C+RRgabsIyOm2HVoD4pe/vp7W5s0rH5GW1JhYaXC04rEmUw/23/
TeRpw4CyMS6ZjzT4+i9Xfv2/yZVz/ctBx/zLQTv8y0ErKtv7KqVmQU1Je/6e
2Ao0ubRg9MCZDnxsd3RkTMqBuag3VFmrHf1Zl+stLtPggb/N482YAkbK/sJb
c4tx9s/L+owCOiRInSnkO1IE/UMZh0p5G3G7WOXcZhY6XNfZdkvDJA5W114e
HzXMwdGpCp7CXjp8OetoV2OUDWQ+UpmlfhUa57nLbH5Ch7o10ymsnRHA3FDQ
FdKejtwqfC7903TIOL7DX+FgOpylXlubv7cUwwd+9yik0uGxTMR9klwQxKcX
G2WeSMS7D6SLvebpUHFfPCvuXAL8lUudK1LMwwVWkeKxNjpM+V0JNid5wzfX
g3fnB6NQ/apOOPsSHY52MCvsOhoFvVeWjs6IZ6IUdYJn/wQdOCK2TMrzuQFN
6Lf/992h+KjbjOfACh3awjI4NI+FwITym4taR7/i3pD8Z+7f6TD7K5rzuF8f
Rh3zFbpAnUBF/TOuxWojEHK2Sf7yni8gG5Zo8oWTilVG1x8lfiWAtLTIYxut
LpDdtPRHuZzBdwo3PWQU2+H9vzz17L889al/eerQZ9paaaUtwL80JmdqTsKS
2MQNXXkzUHqUZ75Drw5IYibabZJ9OEEZfPE2nwKsZcEv4+srILgNeoj5HXju
HM9+NzYafDMzOpbwoATeRT+Mk7/RjMaz9V+iCDTw0g7sfbIrF6Zjl8LuctXg
11jCg6ZrdIg1GLe2f5gBJfZ851dNyjC8/VRoSQTjeaNdhfr3JkFvUIZuz54C
9IwpW7Cvp4N9pdrmMYspTAh+vFQl0YfCF8N/v7o7BHc2ErhcaofwcqKG0fzU
BMp/jUvfbUeE5acZT8Y3JKOMssb6d1tp2C7NsvNNdBf0fDbdUBM1CGdv3fFr
ZSNjhnLsxPLHZmC74/pBv2kAOJ9VsjxUn8GjL4c5fa51g+2/fPSbf/nowH/5
6MO7t9+V4+qBy3unhA19JrD56nbpO86jEHAmRTTkRwcYFx8NWcwZRTbmkH2+
Byehfs+s7u2kVnB9ftzX1n0ItfnERF7vmIGzf25nctDrQTrlDu1nJwG5btre
qzxLgdJ197KjxKtgNSdPWnlfFyYEvmMpLaIC8bbHpnytUigpel8wfakVD74u
fJyeTAP2v5bXPjXnQeOX1w2e9bXoep7PxVeBDiKDk/7uPBS8tSVh2dWzFn0H
fG5Vbh0A404HP+WhGQwPWGezPN+DnWKBNqHCfbD75rL7Jt4xzNPS1VcQnECf
cOH51q5uENQi2nZcIEHScptNuDkZWQz2B19orYTV/ybX/OJfrjmSeOpIQmc/
mLhkWco5zKA44UiuYFQ3sMdxh4vV90E0W5pL4sFpZD0XFDDMMgjZW4l6feY9
UCd5OcuTbxKj6GpcUDMCWhHtDYZhnWCpVmfX/HwMOTvP3L5/bQLi1YZDNV+2
QWtHZmqx8TBGNmw7U2I8DaxdORfvfmgE/QzxmMwXAxg8olD2sJwM5+fsryp8
roY5t0t+7K7d2Pvy3JopUwZenahzGZSjom7gSl7dXC7y3p1y3XK7DzwHd4az
+1BRgLYuzPdFDbYLPuO5adkF3lM3FcsdKOj/VWhbhVA3buZ4O+NNaP9/csdq
/3LH+C93fG/miOyP2EHw+ZrPGvWZjOHaeoVe/lVwDljUjf8MQNLQO0n+uww9
GMkx6cfaCmpcvxveve6Hit4Frdt5MxhkbyoSvbYbTs6Fh7GM98HzZTeJJ++m
MWouYS9z6gBklERoGZF64A43S3hqyiSGVBvO+U0PwwbjOyEPNbpg94fUHxtl
xnHOaDdV6MU4fOHemDh/oR2Sbp7f6SQ/gnUnT0J5/BTsNL1AiYigopXMxNGs
H/HItYl53GS1B3q9UJbjFg3fcu6T92jNwdWHBVsF7nWAT9Y48/RLGrqLfXz3
cUM1mnIImKjubwWNf7lgwr9csNi/XHBi9K2meH0SXJfWllCoI+Pp3x0qTxKz
YPCzGocUMwn8DtGigeErbys7bSZkFMOs4Py+k1+JkGiuaSrQREbS27ebJFWq
4fg1g3XzTwfgFSHy2lMGPxoK3ckquNQCdmtusuH9fgACu2/kzxk8FPOcIEDt
BIerE/tn+Angmo+BzqPTKELiK5vh7IfpAwPn7fV7oSp3LrHp9BROnp3Uofwa
AnYH+3cHGqjYd+9bp8ONQGQ2I/2tVO+B+16S1YpfGPq7aO9Z85Y4vCOv5Zd0
sx1oEY96jNnoeFPY8+bVh9koPGzMM3K+CcqPT6/ftJaOcoJhz9tNK3G7ntEn
W85aWNz9f+d5vf/led3/5Xk9S//qaHX0ggVbQpm6JRUfWdHcfX9/hYIdtT9u
s5DAZyffajmdjEoGPzaB/1dQ3Ui+TTxJgmsSv1dnW8l4h8Bc9kD1G1wNpykE
7RwE5zUR7VeWyZjel8SlGlICGva2yRZLA7Ar766RMTMFvS8ntLzpqYLrTUtd
m+UH4JS396XPJWTcVVS9Lz+uCTYuI0vvs35g2nls6LwkGVurxa1EAjogs3NT
sMcgFQltOmW5v11QMu+32Mb5bigm+Siz5NOw1/+J8vZjAfizkDP5a08bWDRf
45OSpuMpcoqsvFksbuY1KRJsaID4DNPKcHOGv/pAa8sbysJXlpnJL79Xwfs5
Fbdd1+io+HpJPCmrHFUiS5ct+svgxL987oV/+dzef/ncu3otgtrhX6FQzKHD
f4yO1hzOPzgt08BG6czL9wIMPBn6NWPZQsXoMSdDzeUYmF+Ob9CNGwQzxaVr
vVsp2H3mmNOpK9HAXFbYdM6IBLusbViku8j4Rmh66VLAV2B98qtRwHAQHnmQ
bMoZ/nF5r9/yqYFv0Lx2RW37OSJoBj71FpGm4IGN6rXnD5XAHocHW08nD8C8
jMm20v0UzL7PPs8SUwlcuxsk5iepWHFwd4pwiQ36zgR5mld2g7H9ozealTSs
55970lD7AXdHv1944csg12R9na3n6Sj5NdfzTp0figTc44BNDbBjx7r39Z/o
qJLixqk3HY1SstYHd05UQvyiTG4U4zx9VLiatvZ8JnrXP1MvulMKNV1hy72M
9z+NdOYZnS3Fe38LLn43KQDyvxzur385XPl/OdyVUVWqcscwqmhPEupezaCW
ZSTT5eQMqKW87TH2+4wlqXGP7H7S0VWohlx5LwFm/Qmdy/e6wMDNXfDvARqS
rTsbQ+5+gWmj2topJxKExTnn8HWQ8V0NT052chTQPy7KJYUPgsD7vbI3OCgo
zK+VJnI+GVI6o8WCnhBhU3Nher4aBaUxc/dA4jfwJyWbxFCoKN6ksWoR+BCV
ef7I30vuhn1GKfrRdTSsOvBIbovjS/w9JWf/27INWtxiemLU6Jh8Pb1f84Yz
mqzhT0tNrocuyW2cZD863tHo3bf+nC8WhH3g2W9QCftubOQ9X0zH0mfVLXd0
ozDHM/s1pxqCFOH2Ccs6Ol5su2e8PSIdM4zm3E7fyoNtzg0qVqmMe9246+UV
zRKceSifbvIqCzb8y9vq/8vbRv3L2xJjPbwP91GQ5TReE7Dqx2/ysSxaqikw
1t6NBkxjGMo9fbqYMoUPN339RFROgs+qr2TffM7ByEciq8EERp+nfvJ75EWB
5h+pk6RoEgwGX8/b0EzGby9dXSVEgkAng0j1aB8EpYUWi+l1FHye8og1dHM0
rJLUh9fTqZhzLpnE6ngTRydtjv/80g0NW2YPKjXS0ErUYdO6K6bYdjBb97hB
GxAVhl5Ea9BxkqodLMFujczBwQtCr+oh/FBGR08QHbckPZg42PQev7J8uLqO
rxL6LrgasVbSccJY5s6RNG8MPcS+eMWrBFbZkkPM++j4bv/ZQ6cKI/CgeoaM
in4u7JH9c+UVkY78t+JsSJQUPNuzK4Bt5/+bn/3+Lz+b8i8/e6k9TOTeJTp2
bfzjdGmhDr95dQ6pCSQAV2n7mIIJFb1bub938PVh082u8KK7sfCS+gtH108g
917TyQtHJpEo4Mw2fycapo0Xh3lKSbDOuPOPWw0Zu2hlIiokL5iZP/EDZqno
+H+x995BVb3NvieIAURUUECiShARCYqKgtiAJMmCKCoCKgaiIj8RUERRgiJR
DBjIAiIgSTI0OeecNjnvhGIGYfapd517q3znVM2dmltzpmr+7dq1a61nr9Xd
n2c/3/6+OrDN310PTSiJQb7hXSCw/8DXZ400fLJqO81u7xmU923IXHWqFUod
3Fi4jehoJn+ai6/pCmp4d9FiztdBdSG99PFrOr6OP7Z/842baOR2KnLTr3LY
8u1BjQvjvs4UbBzzkHuAWoumDjp7ikHx6Gd1sUE6Ctp7KN/iCsFb5IFfov3Z
wF4l8cxthrE+JB/pVoUI3AykiPnL/1P3akXoXl8Tuldlaaq5aysdK1JOu91c
l4d3aiR29V1/Bz6/thtYXKGjnMr3AGfZGtywKUmirycaNs/xaI8w7rfnLkvo
RQ9l7LutkCX/vAtGVSeZjzbRUPxb4ksZYV00tT3VpmHcChxnY3Y2Mu73qd6F
votRZuhyw17znxN10Hh3b4PpGzpyT7K8FJa8jLXhvZZcU+Ww/4JOuHM1HTdL
xj+Xr3PG1P0/S7yZiuGaddepnCE6zrV+rP/ufx/d825nnwjPBqG2uTckBi8H
jB3ZeW0sEF0LrWwl1/9P/WkhoT+9QOhPLwWV1ZLpdKzWOPnx53wiXk+JwvMi
cXDcU8G6jPG8FTuI6D+1ysEPvJKBhgv/9Xmn/vsbMuErFYvzUlfl7JFB5zXz
EYYPu+Dk0Ic/rxnr8Lvm7uGqzYeR9myTZ4thK1ySK3216zgds6fXH5S4ewwV
7dZ0xujXgYkC65Y8xjo84jrkc4R6Eo9d4rOqJJXD92R1x3HGOgw9Xng072yN
keXzRRemioD88epbw2E6pjYu0wz5b+Dp5H6lR7eyoce8tIZKpeMr3teb6qo8
MUT6ZG/HcNr/0IdOEPrQCEIfWmn0QyPoB+N9XO+79bRxOJ6gilypuh0LnvMn
987N01FM9pld+fEELLYgI8fuiP/lfQyDTi2nLM9KKOyaH/UOJ6PT7+CDvgGD
0PDqpGSOaS+89nOWymX0V0+8P1H+Y27XT/lZSfbTAxDAMSGoeXQGLc+8XTm7
px84iP2BCGJ/wIvYH8hyXhQ8va4U2B/MTEkutGDE1zXFCYE0SBpQcM3iyIXp
wuUXgcw1KMlhyV90jA6HQtZ2fGtIgwevzLIza0rQreDFuX8S6BBtKTpPPZEA
FirBN34dz8HPscud1p10IOcl98WJRoGgm0BinEgaHr4psjaGTIeKcx5WqUef
w7RA+ZofavG43orJ2+g7HQLPbX1yK6wTH915sCqFaRr7SJvzkveNwgYfv9g1
7b2wfcH18Gw9GY9toHdwXm6DewRHUwiOPkJw9M8XL7YbDjZCq5CDFsdrEtb0
jx7KtyDDb4U59lGOKvi1483u3q+dOHOoXF39CRXUjc1nr7xCOGCfrL3Xrxkl
R6x1hspoIMRX4jJxOBuCtWWuWR2oQm/99zFHrenwgbpl7sbPVOhW1zXunC/G
sa2H2eqy6HD9nOVxN8d3IOU67jZs/wmlVuwY4higA0vL8KvMR2/h9cj388F+
KZjS/JTzC40OUdbBV8NSp9DxTYs/7uzHrswmjn0Zw3CL4NzbBOdGEZy7VaHs
ww7VLpjmvXZxsmsCs0/qK/iGjkPl/KDNsHAbSK3qe1oyP4Jz4+FOzuPToF7g
yKczUA+/mR3VPuT3Y5PHPFvEIhma9IwWbrpWwOmNIRk9dh34JYlDxGmcCt8t
LQ4E7S0Cit8W61OSjXiK02/d+880kJOxKb/yTxYcq8iV5nOqwN1fNHRN7tBh
ZVqt8epzyWDOvoc180whXmyi3Z4roYP3RMuSziwZKXcc5E121aFtwuT71fYD
oFiRd1hZhwS3bp2f4AiexZJPUgHrrDv+bR7XPYJbU5qG5lwN+iHtXV0l1/5Z
/NOUMZ0Y2AMqP5n61oT1gO3umW/OAtPY8VA1Rop7BKSuX+36IdAJapJZv/dO
jyN/5z8J+k0TEC5pfOf7ulaokDDanfljGP3TWuWrS2fA/E/OoZaFWnj5c/Hp
AXIvCpyC1gO+FJCqkNeemSuDt8P4LG22DbdYm7P6yNOgquhiW1xnPvgl3d4r
2FqHXN+krdkE6RDOXH1n704qNlzb51/rkYfIup225UUvvDv95ZfbMSrOCWW/
D+usQztzq2zp1V1w8y8+rST4NOgVm57wjUFIiE9+MvSAjMY8sKIorxpszmj8
YGJwQe2tPQ/+bGbkkgLjRjuBdkieuqdjqtYHO8OtPX1wBu3aGsgarv1QyvOs
pT2iGxK6aufIF6cwy3HDlqsWo7DvW/huF/4OUFkVeJzG6HdUVSLpd0mTsPe0
9qIKewsoNctrNzANo2H5UQt1n1nYssK3PUKyBt6WSTk+3N6DuZ/6bLetpMLM
ar3a8+FUrHhcP1Tt9h63UQzmuwV7IHY6YCHlKA0zzi+yc6/OR5c9HeGK2A5q
RnNBJUI0PD0wqCClVI/NDpOvuFpa4ATBp71/8ekJoQEzp8IhUFAR0Gt7T8aA
5DVbnDd/gtnd6nnM6YNQvEHtZnkOGdNtI5x6/5SCz/useZGmAei0c10sjyCj
68vzu48YNkJa7Om4ufP9EPvBpNCsZxYn7T3WVPp2guFBDcGD3r0gF+Vn/lN9
Bjl5fbgedpOg4N7b859ru2Cj18/RzORJ/Dqz5+iTu2MgdeuQVl81gwMpsQJK
o+GYTruzmmLeDZ7dX0zCn9FQ6/LpjQe/v8cRiZe/Nvu3gV2l/XczKg0XwlRM
5k/k42pJhw0yQk2gQMyPCiF48zHBm4FLZ9lrvfpAKPTIs1guKloOffPjYEkG
sSvrhQ/WDYHcK+2E7kwyNqXH7p5P/QjbyG70G52D8ONHO62BwUcT7bryu3YW
AI11zlNcnASpP1rMm+YYXL+vv6xOtQrW8Fu5ZvEMwCbNauZBPzLGHUOe+OAW
uFMkrHmtow94Pi32+DDeR9gP/E99uiGjJ8nj5wAVO5U+N558/Bgdbg/hwO8u
UGn/4tibRcPzKi+Dnc++Qrdj4E+lt4KH4/nHtlJ0vN36pP6uchIOaqZsIyk0
QJe7A+0mo28xfneNlXY/H1ccTCuiVFf923yn/+THHbuXRPvjEPQdosp6Mxj9
3ToNgc07UmFesyHQy7sPBCLNl8d5qWiUOnFBnf0dJCa9KWJrG4KLZPou3zwy
+kWzHn9dmgAflrffOjk7CDSHkVnmKTLaZ0ydsbDPgrXREisqT5FAbHPW88fb
KFh2X1Itp7aEUb/yL59+MABrmnhX//xCxlYd3/4GqVr42G2xKjmpHzRlx29c
sybjpjerdzSJtYGBYFXGTgY/3uuuK6o3u43HW+tlbtV0wbzrux9ny2jIvBNP
b1vpj9eM3cXnoloh2PbDBmFVBl/XVHA8jXqFC9XeXUnq9eBjYPnkoRcd64PM
+UcuJWHsKpvMvuOVoHeuZt7uER0dTrFO27zOx3u3b898Eiv9t3lNRwhORODi
frd7CD+m9fyg95NRMFVKYn9eOkzxDQas8+2DTu9HLsP8VHRa8DbeGxAJNrMv
Xh74PgiXFQI+MjIEtnHd9RiKSYUEEdYN5f+QwM8nvWpEiYKxQKN378+D2+Zt
NzPLBmBorupStxwFf8tXbh75UQYunUdfKjN48NtgiOYqFXu8zb1nxDW1C+SS
NX1Ta2i4xqhPi6XzNq6lS/fbuLaCFqeu48gxRr99pN7Q4Zg//ill37y9tg7k
1gY13Q6lY885tvNR1a8wzfrZobnnFdCzQJ91zKKjn92awKQ7jOdqn1H6HtYS
WDgRb9v4nsF3FfHdTe/z8ergHovXn/JgNcF95wnuiyW4b3xvxGNWDQqDR34k
u5aQULO9TmbPplSobVm7jbI4CF9ENp8x+k5GFbcXfmPUeLD6dS5VzpsEvDsG
FawY/Csh9WjKczAD1t5zk2mjUVFYvj6NdPAcNlRNk9miu0CHxWa5up6GOxPl
RFPRHl8tr2/wvdgKL323HmnQp2Mks5tMlMAd1L0eGNr6iNG3B2T1X3nJ6KtL
6vt8rvvjxs/+N4QOMjjOmKN0XSkdf8VmKUWSXmHPzyFen6/FkD0ltbO8hY4v
Ynf/vPcoCS0T1APMWXPhXF3lLa5COt60iD5CSc/Hg5WWlywUM/9tDlIqwXEm
l8MmY+Tp6FyrpJVcXI/OD0m/DTwS4QJPTXw60xCcW3CYsftFRsu4gt0Pt0cD
S9yrJjEGp5zZIJkeAgbIpzPSzvOqCzSC4sROMbjsZ8k+K9/CcyhhpqVQbNYK
p9OfOSYZMvjorpLKPlYHTPR3FD5gUwc+fqolo6/omBC6Ku760TvoTbPcG7Cm
AgJerp03qqRjovxYk6+PP27bZNIeZV0MHyPzJG7209Gj5BhleeYV6k0qRzvu
zYE034QjBYy+/fK6nYv5wUkoupvtxNH/k3lEbwgum866NTtQT0fV2xwNa/Py
0V6cxVMj+R1UO0Zz5CnQUVPvDf+Lknp063mxzf9CDBQt3lBrZ9zvjsjGH5eM
AWPdpyY8GFzGYjxRIMLgkT2H10ZmVxug6J67/ZImrRCz47fKC0Z+U/da62u2
xgK9uJRPWprVgWZPZs5KBo9YPuxn4t7jgDV/mBSf0MpBS3V9/DfG77KZ65Zm
1+k7KFfjXP2Nvxikhh7dq2JwaECK09xUqD/qTtAprFXZsLcWzU7OMnhWKOT4
97lX+L6tJKbl1L/PBfpPLjvE9iTPh0bHN24yRza8SEJH0eDhvSpx4MwXPcjW
TMe26aAWt/x8DNI9tcLB5L8+Z+jJWqt8kMFl+c7mK5oPyuHMygnVWwwua9gj
YObPWIcPDXd7TYaAkYdmQzWNWsHqxgrWDQwu4387prWO2xDzZvczJxnWAZf5
VHIwYx1aTETLH+yxQKYt7jKxI+XQ6JjPm8TgMuFDd3k2azsgrc05je1bEbTR
8ckcg0/VvGvWOl6+g27vp00CArNB/fimTcIMLhN/7LSDFO6Pp0KVDB6t/ve5
Pf/JZSm/vzLLMbjs5GUXbY4fr7CqWoqZ+jgWPi4JZep9piMT9YuM6cskHJOn
y7F7/ddcljB6+eblmkQ4Ontzl+t5Mmp9MQtT8RiGbJU7ruVH+0AwP+eA7qZp
THjdnmjPiA/nvpkQ/tAPi5uDj5qum8Fb8f3OZ+MHoDzINHvTUg+I7wo6aG4x
hZXVvgV/6COQSS++7Rs9gAdYcmNOs0yi6J+iMWadURBVvlTMLIRIe5SapmlF
wcF3HG/mHw+A5/VAan9XA2z4nEiyTaPiqgtG07ms7fC5ofT8ldIxTGxz7zzz
Yhwr/6yPSv4+APu3W1QZLLZhUsvVn7fUKPjdV4yy/mg3rM8bfd8mMY1GCglF
jb9H8Jbyq5LahE6QjRvMn3YuAc7By31f9jB4muovsd+gGgyYoy0rrJ5h2tzK
NsWzjPfGJEJ+15Va8LtcO39x0yBO5Qtt9rtMxu+d598VONUDxxW2BawZRXvm
6POPlqexbtPa+8/k60E4Moyz4Vk1BvV8YtdlY/zYvkxvQy5WwPPU6JhvtWRU
23HzLrqT8DS7CDf/vWoQi3BPFC9l3L+9GXt5YS+Sdups3+9eBRfWPrnP/3QS
Hwb1FplsncQAiaiB5KVyuMUaxL3vZyfqNLYcbayn4tH6StpaH4SassanI3VU
fLn3A+k3uRMzngdCx/YSyCb2/58S/VgI0Y9df8T5hqN8BreHFN09EzeKO4q9
DeojCkGN6FuO/tW3PBtOPG7O6ANXrNksMUBrxYR3+z7zLmbDWa7u7RqNEZi9
kMZ5ikxHJL3L3XwzDWqJ88l8xPnkY8T5ZMun64Venh7DTYm/c29az6DIG7Or
d/3SYXn/jqxm/xpUCDBJ5jzHyPccDx6kiydBvuuWNR7v6uGqR2DRCUU6Xjrh
eND3chSonF2OXzkxidZ5yl6NepO4Zs234iC/9zAi0/o0U68LPWruS83+oOLF
s6vFsrn/fX5OKDE/R2voX/FtRDyOiOf3FxwZpM3g+OH9B8OyR3G35B+ODbIx
/+3Ogfx3ix+/px640bcbXO2Y9AU3zGLzcIXmgeIBCF6XURPmHQiSBzMMlLwj
0KC3Vdt5gQ6q7E67Iq+FQ+ZG1fUFju/x5Gke1bPzdPBiW9a/IdEORfcMxNr5
x9Cv84nI2dYpaJDt+5iR3w0KOb9UjSOncMJk6XY06yiccglb/jTTA/frjEOD
aqexPnnf3uLJIdhzpqnjhFQ/CCm5L1rSZrHRn1+yzKITwvefhx/zVMzqXsE/
+1wJk+ODz7R4d8HsT1L5m+0lSOZ4lXrr7iwKRR0qL7gzAnvbMlwSF7uA+7aa
PuuXCRSdfZB8R3UcWp93Uop+jmHm+6Vq4fgRjDymoNnwaQRWiKW/6bBuxuzf
30i9jL76iq82m7kwCbgPFH7FI1OoqMje58E7glWbFSunUvqh7JJLZXx7F3r1
7TpT9ZiMbo0tIa9UumHCFTU1383g46ueibmrhvHd1ebOVnoH7Hq/QfrSgY+M
OuB2tZiRr5g+JH/q1qqBCG+2OC71Rpy1NldKs2dwzED8Vq7qOih4cSgoS2UE
XdK4uqgbZ9F0pbrbB+t6UBjKc2gb8MPk2N4NznF0vFrcnf9nZTnINLObNT6Y
xtbc2bizT8ZQtI87vuxpLXzRVpMztO1Ao382RXiMUlHv4skXlA8VcOUfuqDk
hzEM5Ww48Sx7Gpd3RQ8UBFRAWJam9OrcT0htyxvZkUxHrzz9+zetimDqnqE+
x/cZXPxwf1JGYBS385v17+oug5JetiF5Wi9qzeG6lD8UjBIpUbtnj6DFeryu
sWsCZRxXOeGmKfRuyWCPcSkGcWIOzFliDswyMQeG19hIQVmWjHXfkjW++gyj
avc7eQ3/AnhMzHu5QMx7ySDmvTSy2BYZLDfhlmmx2NqfNJyI1/vKY5oOPCT/
1sucM7hSVUM3sGYMnY3blZ/apYGdXs1B/V8dKMESfGNJloactNWi2zySwHZZ
xPHe0Vmcn//xXe/gKN65JGHeszIR5qMlB1I0+jAks8KVW4KKa38YBrWzxEE7
kX+EiPwTTuSfz8Q8Fn5iHkv1/z+P5f9S3DKbxUfqVzt+K7UxXYym4sCy5o4E
6Xq4Ik/iSpoaRHalkAIOJOPeCLFRj7MIvleOrfvaMYbNHCLjl1umsSukXGr/
5+L/x67niqr9j3Pr+iA7oePygXszON2qaqEcOgBvVC4aRza2gpKi6m0FfjKu
VouWuLM8ADsjtLhCKE1QFZqeuNGQjIOP0tV8g0gw8+du0saPrXCqQihYcfcI
uks+EjJ7MAOL33arjvB3gG3UKjtbuTF8NqZBdQmYgtz+/elmrW0Qoa8WYbh7
FPkN2cMGw6chRWbkz/1ztXigY/O1m00z2GN6QbG+fQSm2XXU86L6wNe2ap2U
Chl385TXfb7aAbOPv+fKNzTChw/+AzkfKahGGdvwc3sPfKcqXvNMGgTTt24S
OuOzeNU+/zSnQgsER2o3VCeSQOdn6cudF8h4/8VJsZp/GqHo6uaE9y0kqPDj
MlupPIsGC/HOe3U6gZ/Yt08i9u3vEvv25rJFng83dkGW777X50wn8KD2mhN3
xSfgGb35wkmBAbgvHsdT+3wGx44Uz3Ps74Pm2kJLtlkS7E+O+aP+fhZZS76S
G2bb4OT7+1n6wu3QN8Mt1PBxFL2H56/elZiGuDTH9XEv+8CmhNvVK34aL7LT
Ng3ND4KPbLNG5bVq6FzrYEgnU3H9SI19lkM7CN6zIR/uL4X0J303eYVp+CUq
IKAkox0uHbCJFufwhjU25sIrFGjoLVWgKsTZCZZR7jW87/vxiMM/pIUrs1gt
2cfnq9kNCy7jz3KFRlHzu/Ybs+wpZE9Js/YW7IYX3CO8Gnp94K5pqlCaRMFl
ecnXjxMqQWi0omtsibFOD8M5t/tS8aPMcJK3SRVoXgwoPv6xB27X0ZKZVlMx
tHFtOTA+73V0VafRGyoqHa4TkC1pQZOKZMmPga3gJp3Nn36zFV6fvZ/0052G
+8zV3f2NSsHzSHHikU3dIP5F/mlWMBXvefz5FXGhBJyI/Vs9Yv+2kNi/XeUr
qr7TuRb2mhY+95OlYy5vTf+iZz6obJPdLnq+EzIKOJPZmWnYOK7kqR+bCy+v
KFbuG6ZhyCZXnVsv6tFzm+k/3w6Vg/qGe3PG3HS0O/A5foajBrft8weTiDKY
OGpkEszIp56Tzj62z9rQhLvY6+SzCgD7/lEel0EwPN06H7mWgr1TL88d5M8E
TWIOxlNiDoYWMQfjMBF/RsSPEXGmt9t+eLHSUefilk0uSfWoV2dm/eBrIfAf
p5qwXqHjuM3o4pFHFdg84FW2VbIA7mqZhcm+oeH6n08Ev61rxSV71uAY3WLQ
I+rOaaLuMOX+q+7kGQSk79tDgjNSvkOmjhTkjrNYdfDbezjKn/21oLwF6t0q
fxV30LBS5ixtVUAyZCvzGaQk18OS/mWX93J03F9Y7qgulAJNQ9/kbm2lY59B
x/V9n+pR9lrdwMHCT+B0odpLMJKO++TjYgu+lWBabcq59rJM8DjXkSBBpaHq
4w6XnZ+bcBXLm/hAxWxI4w4760LtwM8fdv6Sk6ShkJN6/fWwdDB75jciMNwP
RkpiIrU1FGx7EFvT/CQa3HdMWwcn1kNAonFFyQE6pjfvcvn55d2/zc3IJuZm
3Jb7V3wXEa8g4n/Px1gi5mMI5P8rrvJXXIuYm+FNzM2QIOZmSBDxJ0R8NxEf
amU+lZZbCcbrlJrzHtKx1yCSK788Cg4Tn/f763tKz3+ySPNHmFj9lW91ER3v
WB+ZKluIgriMIR+2vhBMucKzLvQXg7PT/iRvPRAD1YTOMe8vneO+eGPbeLUh
NELndskJMjprbTkt8yMWpKVKLeNXjuNZfZ+wC/Rp/K1ztZb2MRaOk1xXXPHr
g35Xy6C7QlS0cx/ctT0vBHxWlbDYbegCSesdISGsNJwL/l7FZBAKTsuOOau6
eyB538IWtztUvMAvojxeEPLfrs6al/elXS7og7Ntm/kXBafRA6a8Co8Mgy7f
mfnOrH7IDAn5EF81jWFxzkPF/iRY35au7aHQDVPr3Y6sH5hAFbpLkqv2OBhL
RPOVM/rzWiab772MPHzwlHEZ3WkQDn7rP8us1wNkdSppXeIkply2DN++fgwe
u93uODFXC/FruWqDX/bi1T6rPZ6vKBCfqOh7YzMjv4lQ+vXfDWPSljvHtnyf
ge2WLbSdn9vA/lIey8Wroyi6xmBm/PI0/JGSST/YN4tlcn1PuDxaUYT9Ok2X
bxB4Ajj7ubMpuGJ3a/QJjxbM2kHvuD7fBbFWNgZ+Iy0gp2Vw8AUjnxy+xupc
xlUFa1Xi6UxsDdCx+fuNPdk0vLNl8GSwVxXoy3l9FB6moi/LiHLChSZs6r+y
hlm6FaxMskWNR+pBvNbIr4FOQ0uKlS3v9lKwCJOLab5IQVsLa0Xhg/3oLXSZ
bX6qClL1tyLrpxn88nl1WSrzKAbuXsnMM18DobE9Wz6NVcI+vyhfLUb/X3nk
zg17o3w4aC2+1D2PsJwUPLP2KSPPbTnYsJiYDz+lAzoecweimYW002Q9HYvf
Zs46hBXC/jCtb+w7qdjbz3ePstyDuV7GOyubSoA7d/8Dpwoqvu9Gaf8PXfim
oMNHODAXuLddOCUsQcG5hvfGPh9JmPcu+bl5Uj5kyJ+oLtKk4sEwKcFYjl7M
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
HL4YXth4gYl3qNtD0w7dg/8CyHhoTw==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["log10phiBar", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["log10RB", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{309.97990649869394`, 178.77676534095093`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{1, 5}, {1, 5}, {0., 37.06591758145799}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.1801402269536965`, -0.6365731609690092, 0.9651335387628083},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7282922060825*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
a8ksrjMR6DnNxzFRcUzUZ5yjaIyWLjFn3NUl2dRap+jSM+xJS6S29Jq1RFyX
Lo/kCeWJ6mqnj4Tor11SisO2QbV3Ydsz65mEaOXRJB3T9Kgzak60ViA686kz
T/2yh+rbMW+4+uueAinvNOd1XDUz59TyC2OivmlpPm2zZqtNNt9Sn9vcY+Xa
VdeqaY4xZpawJmZVUkqVLBjTXx2AQD1153L4uifqCNm3GouoJpaIb6ZbZg8L
dBXlNHaGWMd1jFGdS9i4xk0XTOatAxnGN7r1x1Bn4PpgcDk2M3DsEJSadn4e
1RcVIs0R/d2VNjsxt9Obiqk3mhnyCKgzLuq0VudYXzYVemkVxkR1zzf0kiKq
3Esd/20v970Lle6fmdM+e0S0LWI8abnIP2jMs+ZliJT7MrqafdvVLGsXhbTY
YdrVLBAIHPVKfa6oyaPqUBeokfpkgXgOLLaRI5XIcoDGJAp/so5QbofCjXJ1
ge6OM4jprOKY2/7khq6iYj8d4iRFf7wrCZNlq9Et51zXoQ+OskZJVtVGma+N
UrQaM+5xm+MeHc+YI6b3fmux6G87zIvmeA/0ec+qfuq5Db2EONMK9KgzXO5w
dWmgvZhoL6H+tq9AdaCcbslXN8xLdpQNibVZf6r7VnKs9kigLrvannejQdvx
3lmDQXNNmzVnrqREf1HRmmN+WqFRV6FaeQcDnYaMKAhY424TltUn9+QE5ui0
Zgf6i5vcz41qfM2bDG1SgXOkmngQM8rA65mUghFOQKY4/XTaHB3F+SaGoeVR
e9rXFagPNpdAc/3VoapSHH3vqv44hpb2iyHNwPoae4nuotSdR9XFoLtC3PXg
on5q9/SCjroxiVNWe7pZO2lzfZtbBrl/pNOoA9+OOnBV+Pu0Ww1ak7Wn808t
OT8WsGbSsCb1Fd4Wd5lUCo1PXNyTtITj6RaVX6vd70xoBHaVBt9YliavRDp1
iJvUIV8KlfW0doa+uLmYjWDUM3CBxui03myo8pP2daFQBeqyjBlJWxx9H/T1
IXRKTYrVYbpj/nDqTqzOt1Nje9Shz6mnOi4rRMWvXzqYS1JObxTDPHV+b92H
Mlk0kJtNrUGLSiQ9CsOh18uyajbhxivWYXZM/22u2GGu0SossJOm3W2Of4y6
5JmZoZgQVROpyf/SWUvnlploFusMJfXaJebb4jhFyQEDS4RWdUwTDZwgfeNP
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\
\>"],ExpressionUUID->"03832a85-0880-4336-8045-d0ae2b06d0d7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"log10phiBars", "=", 
   RowBox[{"Log10", "[", "phiBars", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728292262825526*^9, 
  3.728292280286785*^9}},ExpressionUUID->"574a4da9-37bd-41c5-8454-\
990929f304d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKMWellLogphiBarFuncs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKMwellDensFacLogParams", "[", 
       RowBox[{"#", ",", "log10RB"}], "]"}], ")"}], "&"}], "/@", 
    "log10phiBars"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291736061108*^9}, 3.728291785191638*^9, {
   3.7282923291906776`*^9, 
   3.728292350824354*^9}},ExpressionUUID->"1ee59d5b-a5a0-4da0-a1ea-\
3e5dbccecf08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{"plotLKMWellLogphiBarFuncs", ",", 
   RowBox[{"{", 
    RowBox[{"log10RB", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`\>\"", ",", 
            "#"}], "]"}], ",", "20"}], "]"}], ")"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"10", "^", "log10phiBars"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)\!\(\*SubscriptBox[\(R\), \
\(B\)]\)\>\"", ",", "\"\<n/\!\(\*SubscriptBox[\(n\), \(0\)]\)\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Liemohn and Khazanov Maxwellian density factor\>\"", ",", "24"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282923634599247`*^9, 3.7282924990716257`*^9}, {
  3.728292540957802*^9, 
  3.728292541192586*^9}},ExpressionUUID->"468a3179-13a1-4146-8632-\
f1c84df49545"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0v4fdZ7Oxg==
          "]]}, Annotation[#, "Charting`Private`Tag$65791#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$65791#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk41N0XAPAZy2AMZlG9KVuEkJKlvXOKpLJEaaFkjbIU0oK3RVREliyl
UEmU0qa0WCaJJGRJit6ylkhiZGa+ye/+/rrP57nPPc+55957nqvpsdfRW4JG
o02h02j/HzOPeDCMvcJXdMp3dJ5LZfErmzVstmhsgx8xFsH2Z1n8yaqyExoa
u4Fymy1mnmLxM/nx6tIahyE+d+Hw8UMsvv/y0IBx9Rhgx9/bv9eFxW+mfFOG
1S+A6d/i99aaLL5Me5fuD/UbkPxu2WvBLXn+ldfZQQPqT4A+x8Z7XiWTX3gn
pt3f6DXwlI4YfXkty/eBxguDwc0gmLrOUX2EwQ/sndNdVPgBpH/ZZkZpSvOZ
mlG6nxd9AbF40K5PV5J/ll2rf8WtG8r87q6WtKPzPdo3lUu+6QPrK3LRMuf+
lge9jPLYq/sdPk6fyS5LEZff28fa+M/aH9CjPqe78+3v8ivhft/nbxmGG6xD
xU9ujpRHZv9xEAz+Avmohbwwzx/ltOYvWBI2CnZaWpkHNvaW6+zfdWiT/hgo
f1ZjrjvSVt4zlr5ZvvQ3aAVdHx/9WVK+rnfPv8lBQkjoZLGV9KvArifRQE1N
DKGu75QH3rfD9xcex17dpkAnQ9KC9qMHjDitqhY7J+B18B0fr+MD0BffF5nq
PQFTWfXzB9IHIJM5/vWr3wR0uaSpeRYOAEvqn/txhyaAnfU2RKd9AL7/3mbV
mjQBik1azpTJIOR2fArcXTkBHJvPI1+6BmFmfm95wpy/EP58yOSh2RAwYcy9
Y/Qv7JueZrF86zAcWqkn+0j8Fy7pHHY46jEMfRYuhQn0SfgqsWjDE/9hqLB+
Ll6lNAndj+TnTTk+DGGO8edu6E/Ck/fBH/1vDMOA9+yXB9wnYc/NwSXZwmF4
E+ekx2mYhKH5sakGSb9gzQ/n8VlONDyh4L28pmAEspRPNB/dSkP25VIurWgE
BEsL7nS40NBbNVhzfskIXI6lfNI8aBh0JpkKfzMCYt1LbXL7aGil7jLtxeAI
3PL49GQ4lobXl5WmcA1Hgd22M6KMT8OrODbRnDsKbRVedGdDOhpLrTtQe1IA
wys/qvw7j46yZV7Jk3ECkHlub3p5AR2V7BzvGZ0TgHn5Ep++RXQsM5OSPpIt
gJRn7Lrg1XR8d07fvbNYAPZFJefPuNJRM2WipfSrAKpyleeXJtJR/WhEWY/F
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
kRY5K5W4bFRHNDn5/3jB3enE/wPNi1OC
          "]]}, 
        Annotation[#, "Charting`Private`Tag$65791#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
MjDQN+mWKHHZmPzM0hIDC0SfBDCI/weuHb5v
          "]]}, 
        Annotation[#, "Charting`Private`Tag$65791#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
s2fkk/45b0hlYmaGg2nLLNVuE/8f7d6c0A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$65791#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nc8Vv8XAHB7x/N4KiUzMiIjDeLb+UTISGU0ZEQUJWlIQgplJSNlZIZQ
VrZnuMjIjIzs7ISM7P27v7/u6/36nHvu55xzl6j1XUNbBjo6uiZ6Orr/H2Of
WrMo2ridVOb7ZKrAuY1VtoroXxK5AkMJNcm1a1vYdnWpt4iIPbhuTc1ZTmxh
sWVBwswirjB7qNrFu3YLc/jP+c6ysD/I7Fu6muK7hbWu24XPCkdB1a5+27OM
Wxhrz5DkX+F0uL3Q8GNqeQNLrIu/NylcAolGQZedWtewrGz/Hge5OqC34trT
QlnEbkJL1NT9VtjfWGByPG8Wo/uwRO4JbIVRtc5LVgmzWCSTQG9dciuwCiso
RQTNYt9qbwild+CuEyRK2s1iUsYbH2xPtIH9PpeHPYKz2LidZEY/fTvESx/e
a8c3g90K8yhtDumA41osUDo8hTEsfviFpXfA5vwnL/fyKSz60je67IoO8Kre
V3c5fgqrEyBpBC10QPjR1qrbV6cwmdS0Gp3LP+GL2Zsfm22T2BSltblCuBPu
qpKMBxsnMMdR6eH8rC4oKA9vHu0YxwYsutjKa7tgzvZY/WTBOGbU6SfXONIF
HpMxJ3a/HceU63+7jvJ3Q/NXMeNOo3GM8UsKYbdvN1RY/NIitP7GIt1FT7pY
9kAF4ydhjc4xrJy0N0qF0AeXDQKJCpsj2JGgb6WaMn3wljxyIGVgBPvI8njk
glYfLI4ZqqlVjmCvVjvkb7n3gWud5fb3wBHs4q/w6ujxPtgUOEINEBjBJj4R
FtbL+oEpTWuP0ulhjEPUR/KX8gAcaC5+/fDzIPZNLVT+qeYAvA7tZAwNH8Re
Xo47Lmg4ADEdQzk1HoMYQ0ix9tXbAxChYa7lfX4QW9uauvkzdgDE2nbcVFge
wCZ7TdK+MwxC8bG8Al2dAawhUlK6rGEQLJsEdLy3+7CA/COKll2DcPQVRXDw
Zx92pvmUytboIFAMBT445PRhlaxmOmrbg6Dn0zXGad2HUR+F2BcrDsHgTr4E
25peLNN4NT3n3RCYgS1cju7BXhPqDyZeG4Yd7M027ZZdWMlxwQIDx2H4j+PX
r9QTXdiIxV3YcBsG4eofIWm7ujDVTJLxpYhh2OumlKjU0ImN65h57GgahvAX
McP2qp2Yhvff766qI7BxQYtZbP9PbGWRx9lw9yhUv42SP8bTjokJWm9vi41C
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
6bzE6vY2Cantndwlj/t/vBDxVA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$65791#6"]& ]}}, {}, {}}, {
    Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0, -4.719888904437129}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.0204081632653061`*^-7, 
        4.999999897959183}, {-4.719888904437129, 2.8753533734830783`}}, {{
        1.0204081632653061`*^-7, 4.999999897959183}, {-4.719888904437129, 
        2.8753533734830783`}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(R\\), \\(B\\)]\\)\"", TraditionalForm], 
        FormBox[
         StyleBox[
         "\"Liemohn and Khazanov Maxwellian density factor\"", 24, 
          StripOnInput -> False], TraditionalForm]}}, 
     FrameStyle -> (FontSize -> 20), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 5}, {-4.719888904437129, 2.8753533734830783`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"1000\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 1000], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"300\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 300], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 100], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 30], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"10\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 10], 
         Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*OverscriptBox[\\(\[Phi]\\), \\(_\\)]\\) = \
\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\"", 
         StringForm["\!\(\*OverscriptBox[\(\[Phi]\), \(_\)]\) = `1`", 3], 
         Editable -> False], 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.728292396575495*^9, 3.728292412011833*^9}, {
   3.728292446166424*^9, 3.7282925041373253`*^9}, 
   3.72829254625651*^9},ExpressionUUID->"9a634969-9c1b-4cad-98aa-\
0601b22d3703"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Orbit 1773-specific plot, with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "B"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8b67bdfa-fa19-4f33-9c71-47c0c763eef0"],
 " as main variable"
}], "Section",
 CellChangeTimes->{{3.728291674024156*^9, 3.7282916826214933`*^9}, {
  3.728292607225048*^9, 3.7282926169594097`*^9}, {3.7283003726513853`*^9, 
  3.728300382882915*^9}, {3.728300508003496*^9, 
  3.72830051495514*^9}},ExpressionUUID->"24cc69af-c500-48ec-a863-\
b16dec7897a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phiAboveRange", "=", 
   RowBox[{"{", 
    RowBox[{"780", ",", "1300"}], "}"}]}], ";", 
  RowBox[{"TRange", "=", 
   RowBox[{"{", 
    RowBox[{"250", ",", "325"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.72830052778937*^9, 
  3.728300583914234*^9}},ExpressionUUID->"da49030f-7614-4f10-ab58-\
b35dd31431a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phiBars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"phiAboveRange", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{"TRange", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"phiAboveRange", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"TRange", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728291683952737*^9, 3.728291693568557*^9}, {
   3.728300518041998*^9, 3.7283005185001497`*^9}, {3.728300590993965*^9, 
   3.728300625291821*^9}, 
   3.728300681130928*^9},ExpressionUUID->"e0be11fa-5055-48cc-a0df-\
f0883faa0b84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phiBars", "=", 
  RowBox[{"Reverse", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"phiBars", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"Mean", "@", "phiBars"}], ",", 
     RowBox[{"phiBars", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.728300683699629*^9, 3.728300715217925*^9}, {
  3.728300764714436*^9, 
  3.728300780049897*^9}},ExpressionUUID->"66aeae77-adfc-4ba0-8a09-\
c70fca5201dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["26", "5"], ",", 
   FractionBox["19", "5"], ",", 
   FractionBox["12", "5"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.728300716057294*^9, {3.72830076615071*^9, 3.7283007806147118`*^9}, 
   3.728303490857204*^9, {3.728304214701633*^9, 
   3.728304230410418*^9}},ExpressionUUID->"0ce71629-f3c5-4a85-981b-\
72c203c8a0ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKMWellphiBarFuncs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKMwellDensFac", "[", 
       RowBox[{"#", ",", "RB"}], "]"}], ")"}], "&"}], "/@", "phiBars"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291736061108*^9}, 3.728291785191638*^9, {
   3.728304234025782*^9, 
   3.728304254866346*^9}},ExpressionUUID->"8c7913ef-1f08-45ca-9804-\
aaedec4841e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"minAtLowRB", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"plotLKMWellphiBarFuncs", "/.", 
     RowBox[{"RB", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAtHighRB", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"plotLKMWellphiBarFuncs", "/.", 
     RowBox[{"RB", "\[Rule]", "11.4"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.728306726404657*^9},ExpressionUUID->"a22da2db-ab15-462f-a828-\
c5638e603166"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineStyle", "=", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", "Red", ",", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l1x", "=", "1.8"}], ";", 
  RowBox[{"l2x", "=", "2.5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"line1", "=", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l1x", ",", "minAtLowRB"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l1x", ",", "1.5"}], "}"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"line2", "=", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l2x", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l2x", ",", "1.5"}], "}"}]}], "}"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.72830500940206*^9, 3.72830502340558*^9}, {
  3.728305096316492*^9, 3.728305145484562*^9}, {3.7283051990135193`*^9, 
  3.728305253355749*^9}, {3.7283052907246237`*^9, 3.728305386283052*^9}, {
  3.728305435092328*^9, 3.7283054755232487`*^9}, {3.728306731830715*^9, 
  3.7283067348209343`*^9}},ExpressionUUID->"bc4422f9-90d4-4aa8-8fdd-\
cfea2a2553ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"line3", "=", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l1x", ",", "minAtLowRB"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "minAtLowRB"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line4", "=", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "maxAtHighRB"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "maxAtHighRB"}], "}"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.728305521716342*^9, 3.728305694538044*^9}, {
  3.7283057294995813`*^9, 3.728305743598399*^9}, {3.728306722239401*^9, 
  3.7283067497489223`*^9}, {3.7283068614302273`*^9, 3.7283068826676826`*^9}, {
  3.728307028371841*^9, 
  3.7283070297472773`*^9}},ExpressionUUID->"0a3863c5-cecc-4b38-b821-\
349a51097a97"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "plotLKMWellphiBarFuncs", "]"}], "+", "1"}], 
       ")"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "plotLKMWellphiBarFuncs", "]"}], "+", "2"}], 
        ")"}], "}"}]}], "}"}]}], ","}], "*)"}]], "Input",ExpressionUUID->\
"71ba766c-900e-4de7-a5f1-cc4d6e5fe510"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plotLKMWellphiBarFuncs", ",", "line1", ",", "line3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", "1", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"Automatic", ",", 
       RowBox[{"Length", "@", "plotLKMWellphiBarFuncs"}]}], "]"}], "~", 
     "Join", "~", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Directive", "[", "lineStyle", "]"}], ",", "2"}], "]"}]}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \
\(above\)]\) = `1`\>\"", ",", 
            RowBox[{"#", "//", "N"}]}], "]"}], ",", "20"}], "]"}], ")"}], 
       "&"}], "/@", "phiBars"}], ")"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(R\), \(B, F\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(F\)]\)/\!\(\*SubscriptBox[\(n\), \
\(0\)]\)\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Liemohn and Khazanov Maxwellian density factor\>\"", ",", "24"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "lineStyle", "]"}], ",", "line1", ",", 
      "line3"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282902912438383`*^9, 3.728290330184914*^9}, {
   3.728290374260867*^9, 3.728290411438712*^9}, {3.728290526276231*^9, 
   3.728290526892087*^9}, {3.72829056940798*^9, 3.728290696856254*^9}, {
   3.72829073067703*^9, 3.7282908804074574`*^9}, {3.728290956417171*^9, 
   3.728290956800665*^9}, {3.728290988445094*^9, 3.728291000510913*^9}, {
   3.72829103766509*^9, 3.728291107010591*^9}, {3.728291709172166*^9, 
   3.728291709512364*^9}, {3.728291740356946*^9, 3.7282918066719837`*^9}, {
   3.728300646125164*^9, 3.728300664763403*^9}, {3.728300725141124*^9, 
   3.728300725747404*^9}, {3.728303470498652*^9, 3.7283034717978077`*^9}, {
   3.728304283425476*^9, 3.728304326551662*^9}, {3.728304526801333*^9, 
   3.728304554352132*^9}, {3.728304601250884*^9, 3.728304601936157*^9}, {
   3.728304706672749*^9, 3.728304784543545*^9}, {3.728304816665928*^9, 
   3.728304820207945*^9}, {3.728304885448268*^9, 3.728304894911562*^9}, {
   3.7283050028906927`*^9, 3.728305005310563*^9}, {3.728305154053547*^9, 
   3.728305163357705*^9}, {3.728305353806264*^9, 3.7283053580448503`*^9}, {
   3.7283053985741262`*^9, 3.728305414589511*^9}, {3.728305701429007*^9, 
   3.728305708325067*^9}, {3.728306330428275*^9, 3.728306345840602*^9}, {
   3.7283064015855227`*^9, 3.728306534335742*^9}, {3.728306590697304*^9, 
   3.728306592519395*^9}, {3.72830676677003*^9, 3.7283068290087976`*^9}, 
   3.728307064756942*^9},ExpressionUUID->"f8f5b77a-ea57-49c8-bf59-\
c46bf81bf2d6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wOydlFT
          "]]}, Annotation[#, "Charting`Private`Tag$263881#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
hP8Hmbkv0g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$263881#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$263881#1"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {0., 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.4097459753024768`*^-7, 6.9077551380075395`}, {
        0.11421540961982692`, 1.396310364540615}}, {{1.4097459753024768`*^-7, 
        6.9077551380075395`}, {0.11421540961982692`, 1.396310364540615}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, Epilog -> {
       Directive[{
         Thickness[Large], 
         RGBColor[1, 0, 0], 
         Dashing[{Small, Small}]}], 
       LineBox[
        NCache[{{
          1.8, Rational[1, 2] (
            2 (5/Pi)^Rational[1, 2] DawsonF[Rational[1, 5] 26^Rational[1, 2]] + 
            E^Rational[26, 5] Erfc[Rational[26, 5]^Rational[1, 2]])}, {1.8, 
          1.5}}, {{1.8, 0.7909105675180587}, {1.8, 1.5}}]], 
       LineBox[
        NCache[{{
          1.8, Rational[1, 2] (
            2 (5/Pi)^Rational[1, 2] DawsonF[Rational[1, 5] 26^Rational[1, 2]] + 
            E^Rational[26, 5] Erfc[Rational[26, 5]^Rational[1, 2]])}, {
          1000, Rational[1, 2] (
            2 (5/Pi)^Rational[1, 2] DawsonF[Rational[1, 5] 26^Rational[1, 2]] + 
            E^Rational[26, 5] Erfc[Rational[26, 5]^Rational[1, 2]])}}, {{1.8, 
          0.7909105675180587}, {1000, 0.7909105675180587}}]]}, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(n\\), \
\\(F\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B, F\\)]\\)\"", TraditionalForm], 
        FormBox[
         StyleBox[
         "\"Liemohn and Khazanov Maxwellian density factor\"", 24, 
          StripOnInput -> False], TraditionalForm]}}, 
     FrameStyle -> (FontSize -> 20), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 6.9077551380075395`}, {0, 1.5}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Phi]\\), \\(_\\)], \
\\(above\\)]\\) = \\!\\(\\*FormBox[\\\"5.2`\\\", TraditionalForm]\\)\"", 
         StringForm[
         "\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \(above\)]\) = \
`1`", 5.2], Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Phi]\\), \\(_\\)], \
\\(above\\)]\\) = \\!\\(\\*FormBox[\\\"3.8`\\\", TraditionalForm]\\)\"", 
         StringForm[
         "\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \(above\)]\) = \
`1`", 3.8], Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Phi]\\), \\(_\\)], \
\\(above\\)]\\) = \\!\\(\\*FormBox[\\\"2.4`\\\", TraditionalForm]\\)\"", 
         StringForm[
         "\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \(above\)]\) = \
`1`", 2.4], Editable -> False], 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.728305802996567*^9, 3.72830634704078*^9, 3.728306538181602*^9, 
   3.728306593388727*^9, 3.7283067550844*^9, {3.7283068164679823`*^9, 
   3.728306853184606*^9}, 3.728306939185966*^9, {3.728307039717319*^9, 
   3.728307083460877*^9}},ExpressionUUID->"c0bd61df-a684-4a4f-9f19-\
d2b00722dbf2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotLKMWellphiBarFuncsScaleIonos", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LKMwellDensFac", "[", 
       RowBox[{"#", ",", 
        RowBox[{"RB", "/", "4"}]}], "]"}], ")"}], "&"}], "/@", "phiBars"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.728290451831711*^9, 3.7282904745793037`*^9}, {
   3.728290508850216*^9, 3.728290515900652*^9}, {3.72829073402425*^9, 
   3.728290737628139*^9}, {3.7282908981472588`*^9, 3.7282909049958687`*^9}, {
   3.728291704811898*^9, 3.728291736061108*^9}, 3.728291785191638*^9, {
   3.728304234025782*^9, 3.728304254866346*^9}, {3.728304351864314*^9, 
   3.728304360528535*^9}, {3.7283044446260033`*^9, 
   3.728304445736024*^9}},ExpressionUUID->"72221754-158f-4a59-a869-\
a64ac9d838c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{"plotLKMWellphiBarFuncsScaleIonos", ",", 
   RowBox[{"{", 
    RowBox[{"RB", ",", "4", ",", "1000"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \
\(above\)]\) = `1`\>\"", ",", 
            RowBox[{"#", "//", "N"}]}], "]"}], ",", "20"}], "]"}], ")"}], 
       "&"}], "/@", "phiBars"}], ")"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(R\), \(B, ionos\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(F\)]\)/\!\(\*SubscriptBox[\(n\), \
\(0\)]\)\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Liemohn and Khazanov Maxwellian density factor\>\"", ",", "24"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"FontSize", "\[Rule]", "20"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282902912438383`*^9, 3.728290330184914*^9}, {
  3.728290374260867*^9, 3.728290411438712*^9}, {3.728290526276231*^9, 
  3.728290526892087*^9}, {3.72829056940798*^9, 3.728290696856254*^9}, {
  3.72829073067703*^9, 3.7282908804074574`*^9}, {3.728290956417171*^9, 
  3.728290956800665*^9}, {3.728290988445094*^9, 3.728291000510913*^9}, {
  3.72829103766509*^9, 3.728291107010591*^9}, {3.728291709172166*^9, 
  3.728291709512364*^9}, {3.728291740356946*^9, 3.7282918066719837`*^9}, {
  3.728300646125164*^9, 3.728300664763403*^9}, {3.728300725141124*^9, 
  3.728300725747404*^9}, {3.728303470498652*^9, 3.7283034717978077`*^9}, {
  3.728304283425476*^9, 3.728304326551662*^9}, {3.728304374849127*^9, 
  3.728304386201314*^9}, {3.728304455266864*^9, 
  3.728304455376754*^9}},ExpressionUUID->"a5d05df6-8431-497d-a1af-\
eaeb64d0f0ab"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ae3LjA0XEyfT80nUmvzcrZHxfxJQ1No=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$226845#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XomhB08brQsIr7MiFRdWYcjO77oTi/A/RCcREg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$226845#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
BNIaQ06UUP4P4SHWUg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$226845#3"]& ]}}, {}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> NCache[{
        Log[4], 0}, {1.3862943611198906`, 0}], FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.3862944738027665`, 6.907755166299261}, {
        0.11421540611994938`, 1.3830025128544352`}}, {{1.3862944738027665`, 
        6.907755166299261}, {0.11421540611994938`, 1.3830025128544352`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1.3862943611198906`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(n\\), \
\\(F\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(B, ionos\\)]\\)\"", 
         TraditionalForm], 
        FormBox[
         StyleBox[
         "\"Liemohn and Khazanov Maxwellian density factor\"", 24, 
          StripOnInput -> False], TraditionalForm]}}, 
     FrameStyle -> (FontSize -> 20), 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{
         Log[4], 
         Log[1000]}, {0., 1.3830025128544352`}}, {{1.3862943611198906`, 
       6.907755278982137}, {0., 1.3830025128544352`}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Phi]\\), \\(_\\)], \
\\(above\\)]\\) = \\!\\(\\*FormBox[\\\"5.2`\\\", TraditionalForm]\\)\"", 
         StringForm[
         "\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \(above\)]\) = \
`1`", 5.2], Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Phi]\\), \\(_\\)], \
\\(above\\)]\\) = \\!\\(\\*FormBox[\\\"3.8`\\\", TraditionalForm]\\)\"", 
         StringForm[
         "\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \(above\)]\) = \
`1`", 3.8], Editable -> False], 20, StripOnInput -> False], 
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Phi]\\), \\(_\\)], \
\\(above\\)]\\) = \\!\\(\\*FormBox[\\\"2.4`\\\", TraditionalForm]\\)\"", 
         StringForm[
         "\!\(\*SubscriptBox[OverscriptBox[\(\[Phi]\), \(_\)], \(above\)]\) = \
`1`", 2.4], Editable -> False], 20, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.728304387303443*^9, {3.728304448797739*^9, 
   3.72830445738623*^9}},ExpressionUUID->"505b8676-ae8e-493e-84db-\
6225eb1dac89"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"func", "=", 
   FractionBox[
    RowBox[{"\[Kappa]", "-", "1"}], 
    RowBox[{"\[Kappa]", "-", 
     RowBox[{"3", "/", "2"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.728311691440301*^9, 
  3.72831169433401*^9}},ExpressionUUID->"878932b3-d10a-4401-88a5-\
0cfbd04bd545"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"func", ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "1.5", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728311657021955*^9, 
  3.728311699831341*^9}},ExpressionUUID->"c0b16462-eb0e-433d-83f3-\
962c994639e0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVznk4lIsXB3BmxszYytIIjfWVLJG0UE2dU0RUUlRarqTScst2VZaRX0Wi
BSlrJj1c7SpbyL1KiijVbeGKbq6hlDLvmMWM7b6/P85zns/zfZ7vORbBYRv2
0FRUVJKo+f/WljpHCc+oYmPtvaOylFEInuKTbnJWFcPjvWuOUXZ5VWcwo0gV
V8/2co/YOgqfffMIgzeqmC2TzilTGYV5/huXajnQMFdhpt29XQn7GKSg1ZmG
d2RzrZb7KUFQcVbljCsNyxc3j1V5KYHNaXyi7k5D0yNT5rQvVELXe2dv1jYa
riGTQoS6Sji1WWczLYWGQ8e21Gi0KqBja2v4iJCGn4P5/AOrFMAzZ1zd+I2G
UwO3ObosV0BhH+9N2RANf+jZ06cuVsC+8NK5h5Q0bLfvLf3HXgEjSRninql0
/FOn0pemowDD+5ujWhfTcbbj+GOXzhEIYAmPCtLpaBI0Efr88AjUveBeH71E
x/DHo+Mvw0bA/MLGjoB8OrqntIx17h+Br9wmV/0SOi5166JNCRyBaOebiuSH
dJxcnuX9wWMEcn4Jj4vop/qa/eb2GI1Ae/nYMXceA+eV2Z2NeioH7zcXSqat
YOD+66WmY/VyqPtp0yb0ZKCeV/COM7VyKLTdaJLkx8Chjsmbj+7K4cCVOw+f
HmDgt7EdZYl5cphIDRzxyGXgr/W1nnsi5GAV/CjCS8ZAEw+tZmsrOWQlbMo1
GmMguahSkWwmB/WCwUcDqmrIeatlOWQsh5/thjqp2mqIeu9sXunK4cHaiNIW
KzVMSot7+25SBt6LLL+v9lPDj+3TzH50ySBCJ3G3zz01jGtJlWrky6CsdM0+
epUahrQ+s7LNloFkDedg9UM1THWN6lmdKYMjKSW/WTapYUYM9grOyCCW9vyE
rJu65/ebQyxfBick2lcFmkwcWumxdDJQBhc7srt/hjAxJu5ire4sGbw/EtRT
dJCJg9YvD5QTMjDg2PYFRDJx2N/5eYC5DHLW1w42xDMx5HNcdKmRDApaukaz
LjLx8kTFaKKWDErqLIyhgYlua6wz/xZLobrw1qY0ExY+C7UIHn0sBRt/Xdt/
LVm4N7+mcXG9FHJYR0fn27Cw9kJNE79OCtGhKwo7nVm4wF56hf1ACq68vwdm
rmJhq4ThDLel8KCdGV8XyUK7P7ZXW2VLoWpKcNFAEwtftHgerwmVQjnfUOQW
ycYvMSqVgVZScD79sUY9mo1Xis96jltI4V6m4OSreDaq8rZrC8ykcPum1fRt
KWy8uaXAut9YCiUdTssiC9nIcWpckq5L/Tff62xhGxsvZrjv8pqUwLHBGJtx
O3UU+Oau4nVJwHv7x6CqXnX8JnqXnpMvATl/icJoQB1buexLr3IlUFyQnxH/
Ux0b9J8pWTkSmPy0rcFdoY7Tlx4T8i9KoGJnF/F2igZ+uXaLcfScBEz2dvcP
LdJA+xMLTG8lSEAU8c9B23QN3PKsbQd7jwSyknujL/M0cde6FR6r50lAz/bI
D+FyTUwo309+mCuB8y3sYAdPTVR9piPY5SSBU9qOq/9cr4ndARXyBAcJHM6M
NvkcookN3fFpjbMk4H9Fu4HI0MS75zhhfC7V98BF81afJibezrcqZFJ9/WcK
as5rYf+mx3ZJ3cNg6ZWae3FcG+vrmtaWnx+GA/KXvF6/qah199zMsnXDcO1d
+ceju3TQzOZkctq0YQhr8r2Sa6SLZnYB+Yx/xaAblL7w8BNdzL6zlLO7WgzH
lbE1d+P08P58sWBZuhhaF7N1imfpo5NAEVMXKoZePm6Q9+jjhpm7Ygx8xPCm
o9m4P2cazihsTZg3Vwx5ncNV5904eF24Vn7PUAxOn54vyxrjoOfs6HWHVMRw
NXlF3uYbBnh+25K5t7+T8NVbk1+xYTpGWL9Y1tdBwvjUBK9wDUN8op3I5Twj
YTD20re+SkNM0z058baShBtfNh2tDTPCmkULJTG/k8AL3ZdqZ22MO7uO/5GR
ReV53Aj/18aY++HYX5dSSBA2x7l1n56BWdjO3c8nQXk5fsBsARdrl/r6/RtO
Qn/qK85ENxc96HSXZSEkFMa+cFhyyQQZnel3AreRMF/noJEzmqJfUGvjy/Uk
ZF2rEiUrTJGbWS+hrSLhL2FRfnaJGepG23z/BUgQF4SHWNiYY6xXfckGFxKC
W4RR1onmqA2OlppzSKj3sjvE7jRHCdPBpWIWCXTvlR+NXCzwW6zU1cqcBOfN
p7ViLligIGiMzzEiwefB5VmVXyxwcF8Yt02PhPU5p6rN3S1x5JLDYR8tEla8
WD5vf54lvu7Lf3KCSYKp9syIyZ+WmGu6wF5XlYSetm6rp94ECmZrmO8fFUFG
796GvYUE/rDX5W2ViaBk1IPov0pgZ3MY151yrb514u4iArM8m1QcKQvdhCt3
lhD4tGj7e1XKrsVBz7feJvDyOK30hlQEn3Zveb22msCuW75cpUQEs/u9P817
TSBjZ3ZfwbAIlk/YQtkbAmMsWG6nKW8yUC90ekugjYdPcSTl/3k07XT4QODG
3wMjPSm/LXHrs+4i8L3jrzxSLILYvbxBo68Eini+ySsppyXMWJszQODK9XUW
TpSLs5V3DL4TqMweqjem3NZUHab/k8DUumssESkCC5sFw1oSAvWOrGjMo7wQ
p/mfkRLY5PiCn0TZO2C4Ql1OIJvgLAqnHHX6/hGmksDI55/rVlJOKUxvTxwl
cPqJnYlOlAXVYa70cQLdTxasm0G5/LVP7vEJKn+Tacqk3PzVQTk5SSA93I0U
iUTwH+ke6qQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$265637#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.5, 1.0588235306122449`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.5, 10}, {1.0588235306122449`, 1.721182315388135}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.728311672284897*^9, 
  3.728311700204764*^9}},ExpressionUUID->"f36d7257-b4fc-43b8-9d06-\
f7460d9ee9a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"func", "/.", 
   RowBox[{"\[Kappa]", "\[Rule]", "3.5"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.728311701554906*^9, 3.728311716838963*^9}, {
  3.7283123324142027`*^9, 
  3.728312334092247*^9}},ExpressionUUID->"093674a9-3d64-4379-bc2a-\
1a996f046011"],

Cell[BoxData["1.25`"], "Output",
 CellChangeTimes->{{3.728311712615705*^9, 3.728311717073028*^9}, 
   3.728312334953104*^9},ExpressionUUID->"1dd19a6b-4a04-4256-8d29-\
4ab6ff15babe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"jvMaxwellian", "[", 
   RowBox[{"pot_", ",", "RB_", ",", "Tm_", ",", "nm_"}], "]"}], ":=", 
  RowBox[{"0.0266987", " ", "nm", " ", 
   SuperscriptBox["Tm", 
    RowBox[{"1", "/", "2"}]], " ", "RB", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", "RB"]}], ")"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"pot", "/", "Tm"}], ")"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"RB", "-", "1"}], ")"}]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.728316424831505*^9, 3.7283164882228727`*^9}, {
  3.72831670900255*^9, 
  3.7283167258808403`*^9}},ExpressionUUID->"2cb848db-7f1a-49e2-ba7a-\
fc17cba2cfed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reg1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tm", "\[Rule]", " ", "300"}], ",", 
     RowBox[{"RB", "\[Rule]", " ", "4"}], ",", 
     RowBox[{"nm", "\[Rule]", " ", 
      RowBox[{"1", "/", "2"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728316515104189*^9, 3.728316518205948*^9}, {
  3.728316549614367*^9, 3.728316586182489*^9}, {3.728316623464259*^9, 
  3.728316656974678*^9}, {3.728316798260642*^9, 
  3.728316798386211*^9}},ExpressionUUID->"edc31f85-f759-468b-8350-\
c051a883fa66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"at1", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"jvMaxwellian", "[", 
     RowBox[{"pot", ",", "RB", ",", "Tm", ",", "nm"}], "]"}], "/.", "reg1"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.728316589313334*^9, 3.728316613390148*^9}, {
  3.728316648554881*^9, 3.7283166678148746`*^9}, {3.7283167374588842`*^9, 
  3.728316738475032*^9}},ExpressionUUID->"ec30ca34-4925-4f6f-8bf9-\
7c3ecf453c03"],

Cell[BoxData[
 RowBox[{"0.9248700979207836`", " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "pot"}], "/", "900"}]]}], "4"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7283166136510267`*^9, 3.728316632783177*^9}, {
   3.728316664311788*^9, 3.72831666821786*^9}, {3.7283167327482862`*^9, 
   3.7283167388699636`*^9}, 
   3.7283168020125628`*^9},ExpressionUUID->"679ceb6e-fed8-479b-9cb6-\
0df86f77d48d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"at1", ",", 
   RowBox[{"{", 
    RowBox[{"pot", ",", "100", ",", "3000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728316492186503*^9, 3.728316502318221*^9}, {
  3.728316644327585*^9, 3.7283166933438387`*^9}, {3.7283167425713587`*^9, 
  3.728316749800907*^9}, {3.728316845486561*^9, 
  3.728316845596191*^9}},ExpressionUUID->"c67020a2-83e3-4996-929d-\
da71c1a29e8e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVx39YywkcwPFRuludjLpUZEP29NRymB/tcJ9PZ+U59NSt0Q+/kkpl1pWQ
uAlFP0jSplGZte1buuiKKC6RVQrJVJx+r5/btyS55ni43R/v5/285gdH8UKn
UigUL2P/f8Pn1QYKJQCf7JGwwg5pICi+3mPELQCFUkZV9HENHDTwL7yODkBN
yB51fJoG5BP7FpdqA3CH371VSVc08C95JWR3XSCWxh/460idBgo7TJrV6duQ
tcWl/a3NS0js6uerLYNwuDCi1VD2Enqri11Tc3fjvuqR8pKBFjjx2b9gI38v
ciwldvydr0CXSDex5UbjNFGW5cLkv2Gi8lrsRGMsCjIStj1LbIeo4poGgSwO
I/O3exakdELNt/GZB9lH0baZ0ZXP7AYubSc9nZqAC5RLtDcseqCV/dRmy9hx
fLuAa17R0QMtFuZ1YeUn0XKJZjqIe+G7h2cj1PIkpIvYc6XeWihhdT8SCE/j
zPU5tKhxLZjeELlTl6bgVIeP4b8k98H5GSEl7+3S0KJC0pPD6IdUR9tXzN4z
KKV+ulau7Id7s63GiefpiEEpFbWsAfCeWWwzY2sGWhfYOysLBuCfsdsZwrXn
MUTDTO62HoRKGDD5sCwT3/mFC1+cGISbQ0c0dNsLKK/03dbXOwgNlBU50bQs
NJ8/KvDhDsEdx6wPa03FmEkcTlXkDkGHPLDo+qAYPYMfryrVD8G8DG6gZ6cE
r2vdb43+OAziNnHoiUcXMSBza5pLwjD0OZ+dwlFl44wbRbqe+8PgM0JIbC5L
MeGiNV6l6GCc6pycfewSxmzpKVrO0UGJuCnG/dBlfGN9s08aowNP1zmjIZE5
6OpyANYQOrCiP1OzvHLxqf/c25wWHXw+ppDMWZeHfskxolETPcxZ3Vtz3ekK
JgqbQ6tYeqBO0WKnqQxLDfYPvHh6sMoJyzGIZLjigNLv9zg9uPU5MPvHZKj2
8Ld/I9UDqQ1jhQqu4qVJGf3OXT3czdAG3e66ivFsGnq/1sPBdWUdtT5ynGyO
5KdM6OF+sXVbRKMchzm7WpfRSFioLvzSuTYfZ8kdVTucSPg+67l8sCIf2+5S
k3qRhPfhG84VsxX4UEB4bfcjgdRNFnooFajZLy2ZspeEWMdV7tEMJdqvOWz1
XkTCbItrZlEXlOi6NHdlUAYJqskoa2dTFYr5zLQIGQk1l+vy4kQqZHgr3MpL
SPhE8vykYyosK+RzJ6pIqJe2vpOMqzBvo0fL0vskZHkGnsmaUOF0bgM/yujF
sl0PzhlUmD+qoOuMDvL9zeUUhcCmNmZ/ZzUJjyrOfo2hEejZomSrH5Jw5lQ9
sWkJgSPv0ilJtST4szf9vGEZgSuPHd1XbfSi7qb29csJ9NovffzJ6CpO28x1
bgRmS2K9Y+pIGCP7j3CQQH7x8swd9SRs9jXxYfoQyNJ8mWQ3kLCAclq3kEeg
psk+UGj06B/mSfP5BDaW/llUYHSy2azKuf4ETrQHOzg0klBZwXC0CiLQ9dfN
q6c9IeFUmKKKFkxgnm2jHRjta+UUYBlCYL5Zz2Cc0aTgh3RqOIEpHV95pNF3
7Mqcvokk8JbZrLFFT0lIql1ZYyog0Lyt9ehOo3n7K7dPFRIYrud9zDZ6HuMn
w9coAoO7UkNfGP0f+gxlMw==
       "]]},
     Annotation[#, "Charting`Private`Tag$272820#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{100, 0.3041625438141835},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{100, 3000}, {0.3041625438141835, 0.9001247390033138}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.728316693620833*^9, 3.728316751271778*^9, 
  3.7283168021385527`*^9, 
  3.7283168459779453`*^9},ExpressionUUID->"4adba449-f639-4651-bb98-\
90d6288ac67e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 997},
WindowMargins->{{-1280, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 186, 3, 68, "Section",ExpressionUUID->"613595d3-f18c-40c4-9ce0-39785eb9417e"],
Cell[CellGroupData[{
Cell[791, 29, 163, 3, 45, "Subsubsection",ExpressionUUID->"585919ef-c169-4114-bbaa-97630962836c"],
Cell[957, 34, 505, 13, 78, "Input",ExpressionUUID->"b26690e2-3bfc-4a7c-ae06-f2ea45fbb4d7"],
Cell[1465, 49, 965, 28, 73, "Input",ExpressionUUID->"80ad6b9f-0d78-43bc-8a9b-93359336576f"],
Cell[2433, 79, 536, 12, 31, "Input",ExpressionUUID->"665ec0e3-a2f3-4f33-9335-353fc7f4e0a1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3018, 97, 401, 11, 68, "Section",ExpressionUUID->"bc23f743-837b-4bc5-8068-3dda4c0fe889"],
Cell[3422, 110, 305, 8, 31, "Input",ExpressionUUID->"bbf025cb-75b5-426f-8d81-89077dac82ee"],
Cell[3730, 120, 732, 16, 31, "Input",ExpressionUUID->"95f6c6c9-fdbe-42ca-b7e2-f4da28e2412b"],
Cell[4465, 138, 916, 19, 31, "Input",ExpressionUUID->"b952249b-4331-4c2e-b5ae-fea0273d5e16"],
Cell[5384, 159, 870, 19, 31, "Input",ExpressionUUID->"5e1c3b2e-6d56-4554-9843-8adbc55af49b"],
Cell[CellGroupData[{
Cell[6279, 182, 1754, 41, 84, "Input",ExpressionUUID->"0694999d-bca3-46a3-845d-c8242cad142d"],
Cell[8036, 225, 58620, 1096, 576, "Output",ExpressionUUID->"273cd400-4d5a-4a8f-bcf6-919b56937185"]
}, Open  ]],
Cell[66671, 1324, 814, 20, 31, "Input",ExpressionUUID->"68503a11-0109-4896-a596-89a6fd839d24"],
Cell[67488, 1346, 765, 19, 31, "Input",ExpressionUUID->"96d8faf2-6662-4a50-a349-44b49846b802"],
Cell[68256, 1367, 863, 20, 31, "Input",ExpressionUUID->"8b4610d2-8adb-44ce-b461-1247a62fc969"],
Cell[69122, 1389, 249, 7, 31, "Input",ExpressionUUID->"447fa9c2-1ca6-4e57-9d67-f85d24577296"],
Cell[CellGroupData[{
Cell[69396, 1400, 303, 7, 31, "Input",ExpressionUUID->"314b36c3-f092-4787-b73d-1b828a8b1ac2"],
Cell[69702, 1409, 148, 3, 35, "Output",ExpressionUUID->"e37a6eb1-4ffb-4b60-8ad5-3159c5a01b57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69887, 1417, 387, 9, 55, "Input",ExpressionUUID->"6b88dd94-1e61-410d-b2aa-8548efb84b07"],
Cell[70277, 1428, 194, 3, 35, "Output",ExpressionUUID->"c09eac0d-ba49-4322-b8e9-8409fcdc47bc"],
Cell[70474, 1433, 193, 3, 35, "Output",ExpressionUUID->"9bf230c3-8e08-405f-939f-1470e6275b4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70704, 1441, 2317, 62, 107, "Input",ExpressionUUID->"a3c83672-01ed-450e-8913-770091eb7f31"],
Cell[73024, 1505, 69561, 1287, 576, "Output",ExpressionUUID->"c513fd01-7c83-4656-ad97-b2dbbfdaa35c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142622, 2797, 2337, 62, 107, "Input",ExpressionUUID->"a1d52373-c715-4cef-a609-8e06c679455d"],
Cell[144962, 2861, 362, 9, 22, "Message",ExpressionUUID->"6f324386-2e2f-4012-a6de-e89a764814bd"],
Cell[145327, 2872, 183, 3, 35, "Output",ExpressionUUID->"0edccfcb-ac08-4d72-ba3c-01fa24ce7639"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145559, 2881, 466, 12, 68, "Section",ExpressionUUID->"3aa86580-021a-4cc4-baac-7e1106a9b393"],
Cell[146028, 2895, 201, 5, 31, "Input",ExpressionUUID->"85487c99-fbfa-4ba9-acde-f3d958ea3556"],
Cell[146232, 2902, 592, 14, 31, "Input",ExpressionUUID->"5ae177cc-c1f8-4e64-97ce-f7e2d7fa6a72"],
Cell[146827, 2918, 972, 20, 31, "Input",ExpressionUUID->"d091625e-aa13-4cd9-942b-df5a322564d4"],
Cell[147802, 2940, 920, 19, 31, "Input",ExpressionUUID->"720ebb03-06d3-49f6-ba5e-a870383e46f9"],
Cell[148725, 2961, 300, 8, 31, "Input",ExpressionUUID->"27ba9891-e2d7-47bc-98a8-4c07a4b9dcd0"],
Cell[CellGroupData[{
Cell[149050, 2973, 1972, 47, 105, "Input",ExpressionUUID->"cd032090-7124-4e60-8eb9-02ff06d78f85"],
Cell[151025, 3022, 66920, 1238, 563, "Output",ExpressionUUID->"5eea76bc-901a-460f-8989-6c8d64ac819f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217982, 4265, 2170, 52, 105, "Input",ExpressionUUID->"bdbd6fd0-e01d-4c86-bd26-68fdb7d1d988"],
Cell[220155, 4319, 61506, 1150, 563, "Output",ExpressionUUID->"8b79b480-79c7-457d-92aa-7d25a90e60a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281710, 5475, 217, 5, 68, "Section",ExpressionUUID->"e8f21a55-743e-4389-91b2-b7de61fdc9fd"],
Cell[281930, 5482, 902, 27, 82, "Input",ExpressionUUID->"658ec97b-d92d-4fd4-aef8-52356f4e7ce2"],
Cell[CellGroupData[{
Cell[282857, 5513, 167, 3, 55, "Subsection",ExpressionUUID->"699acdc9-72f4-4382-a610-1198749f2427"],
Cell[CellGroupData[{
Cell[283049, 5520, 582, 14, 31, "Input",ExpressionUUID->"d3f5b92b-fa91-44ab-a17e-96c9d8149532"],
Cell[283634, 5536, 144100, 2357, 212, 119768, 1958, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"697ac095-0e14-4dad-b358-3e6d849e11ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427771, 7898, 597, 13, 31, "Input",ExpressionUUID->"0a547cdc-8348-428f-8b29-3fd3177358a6"],
Cell[428371, 7913, 154307, 2529, 196, 123425, 2022, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"03832a85-0880-4336-8045-d0ae2b06d0d7"]
}, Open  ]],
Cell[582693, 10445, 243, 6, 31, "Input",ExpressionUUID->"574a4da9-37bd-41c5-8454-990929f304d1"],
Cell[582939, 10453, 668, 15, 31, "Input",ExpressionUUID->"1ee59d5b-a5a0-4da0-a1ea-3e5dbccecf08"],
Cell[CellGroupData[{
Cell[583632, 10472, 1378, 35, 82, "Input",ExpressionUUID->"468a3179-13a1-4146-8632-f1c84df49545"],
Cell[585013, 10509, 68734, 1262, 556, "Output",ExpressionUUID->"9a634969-9c1b-4cad-98aa-0601b22d3703"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[653808, 11778, 526, 13, 54, "Section",ExpressionUUID->"24cc69af-c500-48ec-a863-b16dec7897a9"],
Cell[654337, 11793, 349, 10, 31, "Input",ExpressionUUID->"da49030f-7614-4f10-ab58-b35dd31431a3"],
Cell[654689, 11805, 699, 19, 31, "Input",ExpressionUUID->"e0be11fa-5055-48cc-a0df-f0883faa0b84"],
Cell[CellGroupData[{
Cell[655413, 11828, 481, 13, 31, "Input",ExpressionUUID->"66aeae77-adfc-4ba0-8a09-c70fca5201dc"],
Cell[655897, 11843, 377, 10, 53, "Output",ExpressionUUID->"0ce71629-f3c5-4a85-981b-72c203c8a0ce"]
}, Open  ]],
Cell[656289, 11856, 642, 15, 31, "Input",ExpressionUUID->"8c7913ef-1f08-45ca-9804-aaedec4841e3"],
Cell[656934, 11873, 486, 14, 55, "Input",ExpressionUUID->"a22da2db-ab15-462f-a828-c5638e603166"],
Cell[657423, 11889, 1149, 33, 101, "Input",ExpressionUUID->"bc4422f9-90d4-4aa8-8fdd-cfea2a2553ca"],
Cell[658575, 11924, 912, 26, 55, "Input",ExpressionUUID->"0a3863c5-cecc-4b38-b821-349a51097a97"],
Cell[659490, 11952, 496, 15, 31, "Input",ExpressionUUID->"71ba766c-900e-4de7-a5f1-cc4d6e5fe510"],
Cell[CellGroupData[{
Cell[660011, 11971, 3413, 76, 132, "Input",ExpressionUUID->"f8f5b77a-ea57-49c8-bf59-c46bf81bf2d6"],
Cell[663427, 12049, 30530, 594, 567, "Output",ExpressionUUID->"c0bd61df-a684-4a4f-9f19-d2b00722dbf2"]
}, Open  ]],
Cell[693972, 12646, 779, 17, 31, "Input",ExpressionUUID->"72221754-158f-4a59-a869-a64ac9d838c0"],
Cell[CellGroupData[{
Cell[694776, 12667, 2066, 45, 84, "Input",ExpressionUUID->"a5d05df6-8431-497d-a1af-eaeb64d0f0ab"],
Cell[696845, 12714, 24164, 479, 567, "Output",ExpressionUUID->"505b8676-ae8e-493e-84db-6225eb1dac89"]
}, Open  ]],
Cell[721024, 13196, 307, 9, 51, "Input",ExpressionUUID->"878932b3-d10a-4401-88a5-0cfbd04bd545"],
Cell[CellGroupData[{
Cell[721356, 13209, 278, 7, 31, "Input",ExpressionUUID->"c0b16462-eb0e-433d-83f3-962c994639e0"],
Cell[721637, 13218, 4374, 90, 237, "Output",ExpressionUUID->"f36d7257-b4fc-43b8-9d06-f7460d9ee9a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726048, 13313, 293, 7, 31, "Input",ExpressionUUID->"093674a9-3d64-4379-bc2a-1a996f046011"],
Cell[726344, 13322, 181, 3, 35, "Output",ExpressionUUID->"1dd19a6b-4a04-4256-8d29-4ab6ff15babe"]
}, Open  ]],
Cell[726540, 13328, 797, 23, 49, "Input",ExpressionUUID->"2cb848db-7f1a-49e2-ba7a-fc17cba2cfed"],
Cell[727340, 13353, 542, 13, 31, "Input",ExpressionUUID->"edc31f85-f759-468b-8350-c051a883fa66"],
Cell[CellGroupData[{
Cell[727907, 13370, 423, 10, 31, "Input",ExpressionUUID->"ec30ca34-4925-4f6f-8bf9-7c3ecf453c03"],
Cell[728333, 13382, 518, 13, 66, "Output",ExpressionUUID->"679ceb6e-fed8-479b-9cb6-0df86f77d48d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[728888, 13400, 422, 9, 31, "Input",ExpressionUUID->"c67020a2-83e3-4996-929d-da71c1a29e8e"],
Cell[729313, 13411, 3277, 72, 235, "Output",ExpressionUUID->"4adba449-f639-4651-bb98-90d6288ac67e"]
}, Open  ]]
}, Open  ]]
}
]
*)

